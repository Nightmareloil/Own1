-- 2take1 Hub - Fixed Version
-- Simplified and working

local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Wait for game to load
if not game:IsLoaded() then
    game.Loaded:Wait()
end

-- Services
local UIS = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TeleportService = game:GetService("TeleportService")

-- Variables
local character = player.Character or player.CharacterAdded:Wait()
local mouse = player:GetMouse()

-- Safe wait for load event
local load = workspace:FindFirstChild("load")
local loadEvent = load and load:FindFirstChild("RemoteEvent")

-- Configuration
local Config = {
    speed = 5,
    range = 15,
    walkSpeed = 16,
    jumpPower = 50,
    flySpeed = 50,
    commandPrefix = ";",
    autoEquipSword = true
}

-- State
local State = {
    fastFarm = false,
    slowFarm = false,
    godMode = false,
    killAura = false,
    flying = false,
    noclip = false,
    esp = false
}

-- Storage
local Data = {
    admins = {},
    connections = {},
    flyObjects = {}
}

-- Theme
local Theme = {
    background = Color3.fromRGB(25, 25, 25),
    secondary = Color3.fromRGB(35, 35, 35),
    tertiary = Color3.fromRGB(45, 45, 45),
    accent = Color3.fromRGB(88, 101, 242),
    text = Color3.fromRGB(255, 255, 255),
    success = Color3.fromRGB(87, 242, 135),
    danger = Color3.fromRGB(237, 66, 69),
    warning = Color3.fromRGB(255, 193, 7)
}

-- Create GUI first
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "2take1Hub"
screenGui.ResetOnSpawn = false

-- Try to parent to CoreGui, fallback to PlayerGui
local success = pcall(function()
    screenGui.Parent = game:GetService("CoreGui")
end)
if not success then
    screenGui.Parent = player:WaitForChild("PlayerGui")
end

-- Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 400, 0, 500)
mainFrame.Position = UDim2.new(0.5, -200, 0.5, -250)
mainFrame.BackgroundColor3 = Theme.background
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui

local mainCorner = Instance.new("UICorner")
mainCorner.CornerRadius = UDim.new(0, 12)
mainCorner.Parent = mainFrame

-- Header
local header = Instance.new("Frame")
header.Size = UDim2.new(1, 0, 0, 40)
header.BackgroundColor3 = Theme.secondary
header.BorderSizePixel = 0
header.Parent = mainFrame

local headerCorner = Instance.new("UICorner")
headerCorner.CornerRadius = UDim.new(0, 12)
headerCorner.Parent = header

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -40, 1, 0)
title.Position = UDim2.new(0, 10, 0, 0)
title.BackgroundTransparency = 1
title.Text = "2take1 Hub - Fixed"
title.TextColor3 = Theme.text
title.TextSize = 16
title.Font = Enum.Font.SourceSansBold
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = header

local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(1, -35, 0, 5)
closeButton.BackgroundColor3 = Theme.danger
closeButton.Text = "X"
closeButton.TextColor3 = Theme.text
closeButton.TextSize = 14
closeButton.Font = Enum.Font.SourceSansBold
closeButton.Parent = header

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 6)
closeCorner.Parent = closeButton

-- Content
local content = Instance.new("ScrollingFrame")
content.Size = UDim2.new(1, -20, 1, -60)
content.Position = UDim2.new(0, 10, 0, 50)
content.BackgroundColor3 = Theme.secondary
content.BorderSizePixel = 0
content.ScrollBarThickness = 6
content.CanvasSize = UDim2.new(0, 0, 0, 800)
content.Parent = mainFrame

local contentCorner = Instance.new("UICorner")
contentCorner.CornerRadius = UDim.new(0, 8)
contentCorner.Parent = content

local layout = Instance.new("UIListLayout")
layout.Padding = UDim.new(0, 10)
layout.Parent = content

-- Functions
local function notification(text, notifType)
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "2take1 Hub",
        Text = text,
        Duration = 3
    })
end

local function getSwordHandle()
    if not player.Character then return nil end
    
    local sword = player.Character:FindFirstChildOfClass("Tool")
    
    if not sword and player.Backpack then
        sword = player.Backpack:FindFirstChildOfClass("Tool")
        if sword and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid:EquipTool(sword)
        end
    end
    
    if not sword and loadEvent then
        pcall(function()
            loadEvent:FireServer()
        end)
        wait(0.5)
        if player.Backpack then
            sword = player.Backpack:FindFirstChildOfClass("Tool")
            if sword and player.Character:FindFirstChild("Humanoid") then
                player.Character.Humanoid:EquipTool(sword)
            end
        end
    end
    
    return sword and sword:FindFirstChild("Handle")
end

local function findPlayer(name)
    if not name then return nil end
    name = name:lower()
    
    if name == "me" then return player end
    if name == "all" then return Players:GetPlayers() end
    if name == "others" then
        local others = {}
        for _, p in pairs(Players:GetPlayers()) do
            if p ~= player then
                table.insert(others, p)
            end
        end
        return others
    end
    
    for _, p in pairs(Players:GetPlayers()) do
        if p.Name:lower() == name or p.Name:lower():find(name) then
            return p
        end
    end
    
    return nil
end

-- Create Toggle
local function createToggle(text, callback)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, -10, 0, 40)
    frame.BackgroundColor3 = Theme.tertiary
    frame.BorderSizePixel = 0
    frame.Parent = content
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = frame
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -60, 1, 0)
    label.Position = UDim2.new(0, 10, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = Theme.text
    label.TextSize = 14
    label.Font = Enum.Font.SourceSans
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = frame
    
    local toggle = Instance.new("TextButton")
    toggle.Size = UDim2.new(0, 40, 0, 20)
    toggle.Position = UDim2.new(1, -50, 0.5, -10)
    toggle.BackgroundColor3 = Theme.danger
    toggle.Text = "OFF"
    toggle.TextColor3 = Theme.text
    toggle.TextSize = 12
    toggle.Font = Enum.Font.SourceSansBold
    toggle.Parent = frame
    
    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 4)
    toggleCorner.Parent = toggle
    
    local enabled = false
    toggle.MouseButton1Click:Connect(function()
        enabled = not enabled
        toggle.BackgroundColor3 = enabled and Theme.success or Theme.danger
        toggle.Text = enabled and "ON" or "OFF"
        callback(enabled)
    end)
    
    return frame
end

-- Create Button
local function createButton(text, callback)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, -10, 0, 40)
    button.BackgroundColor3 = Theme.accent
    button.Text = text
    button.TextColor3 = Theme.text
    button.TextSize = 14
    button.Font = Enum.Font.SourceSansBold
    button.BorderSizePixel = 0
    button.Parent = content
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = button
    
    button.MouseButton1Click:Connect(callback)
    
    return button
end

-- Create UI Elements
createToggle("Fast Farm", function(enabled)
    State.fastFarm = enabled
    notification("Fast Farm " .. (enabled and "ON" or "OFF"))
end)

createToggle("Slow Farm", function(enabled)
    State.slowFarm = enabled
    notification("Slow Farm " .. (enabled and "ON" or "OFF"))
end)

createToggle("God Mode", function(enabled)
    State.godMode = enabled
    notification("God Mode " .. (enabled and "ON" or "OFF"))
end)

createToggle("Kill Aura", function(enabled)
    State.killAura = enabled
    notification("Kill Aura " .. (enabled and "ON" or "OFF"))
end)

createToggle("Fly", function(enabled)
    State.flying = enabled
    
    if enabled then
        local char = player.Character
        if char and char:FindFirstChild("HumanoidRootPart") then
            local bv = Instance.new("BodyVelocity")
            bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
            bv.Velocity = Vector3.new(0, 0, 0)
            bv.Parent = char.HumanoidRootPart
            
            local bg = Instance.new("BodyGyro")
            bg.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
            bg.D = 500
            bg.P = 50000
            bg.Parent = char.HumanoidRootPart
            
            Data.flyObjects = {bv, bg}
        end
    else
        for _, obj in pairs(Data.flyObjects) do
            if obj then obj:Destroy() end
        end
        Data.flyObjects = {}
    end
    
    notification("Fly " .. (enabled and "ON" or "OFF"))
end)

createToggle("Noclip", function(enabled)
    State.noclip = enabled
    notification("Noclip " .. (enabled and "ON" or "OFF"))
end)

createButton("Kill All", function()
    local handle = getSwordHandle()
    if handle and handle:FindFirstChild("dmg") then
        for _, p in pairs(Players:GetPlayers()) do
            if p.Character and p.Character:FindFirstChild("Humanoid") and p ~= player then
                pcall(function()
                    handle.dmg.RemoteEvent:FireServer(p.Character.Humanoid, math.huge)
                end)
            end
        end
        notification("Killed all players")
    else
        notification("No sword equipped!")
    end
end)

createButton("God All", function()
    local handle = getSwordHandle()
    if handle and handle:FindFirstChild("dmg") then
        for _, p in pairs(Players:GetPlayers()) do
            if p.Character and p.Character:FindFirstChild("Humanoid") then
                pcall(function()
                    for i = 1, 5 do
                        handle.dmg.RemoteEvent:FireServer(p.Character.Humanoid, -math.huge)
                    end
                end)
            end
        end
        notification("Godded all players")
    else
        notification("No sword equipped!")
    end
end)

createButton("Reset Character", function()
    if loadEvent then
        pcall(function()
            loadEvent:FireServer()
        end)
    elseif player.Character and player.Character:FindFirstChild("Humanoid") then
        player.Character.Humanoid.Health = 0
    end
    notification("Character reset")
end)

createButton("Rejoin", function()
    notification("Rejoining...")
    wait(1)
    TeleportService:Teleport(game.PlaceId, player)
end)

-- Close button
closeButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
    for _, connection in pairs(Data.connections) do
        if connection then connection:Disconnect() end
    end
end)

-- Main Loop
Data.connections.main = RunService.Heartbeat:Connect(function()
    if not player.Character then return end
    
    local char = player.Character
    local humanoid = char:FindFirstChild("Humanoid")
    local rootPart = char:FindFirstChild("HumanoidRootPart")
    
    if not humanoid or not rootPart then return end
    
    -- Fast Farm
    if State.fastFarm then
        local handle = getSwordHandle()
        if handle and handle:FindFirstChild("up") then
            pcall(function()
                for i = 1, Config.speed do
                    handle.up.RemoteEvent:FireServer()
                end
            end)
        end
    end
    
    -- Slow Farm
    if State.slowFarm then
        local handle = getSwordHandle()
        if handle and handle:FindFirstChild("up") then
            pcall(function()
                handle.up.RemoteEvent:FireServer()
            end)
        end
    end
    
    -- God Mode
    if State.godMode then
        local pvp = char:FindFirstChild("pvp")
        if pvp then pvp:Destroy() end
    end
    
    -- Kill Aura
    if State.killAura then
        local handle = getSwordHandle()
        if handle and handle:FindFirstChild("dmg") then
            for _, v in pairs(workspace:GetChildren()) do
                if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v ~= char then
                    local distance = (rootPart.Position - v.HumanoidRootPart.Position).Magnitude
                    if distance <= Config.range then
                        pcall(function()
                            handle.dmg.RemoteEvent:FireServer(v.Humanoid, 1000)
                        end)
                    end
                end
            end
        end
    end
    
    -- Fly
    if State.flying and Data.flyObjects[1] and Data.flyObjects[2] then
        local bv = Data.flyObjects[1]
        local bg = Data.flyObjects[2]
        
        if bv.Parent and bg.Parent then
            local camera = workspace.CurrentCamera
            local moveVector = Vector3.new(0, 0, 0)
            
            if UIS:IsKeyDown(Enum.KeyCode.W) then
                moveVector = moveVector + camera.CFrame.LookVector
            end
            if UIS:IsKeyDown(Enum.KeyCode.S) then
                moveVector = moveVector - camera.CFrame.LookVector
            end
            if UIS:IsKeyDown(Enum.KeyCode.A) then
                moveVector = moveVector - camera.CFrame.RightVector
            end
            if UIS:IsKeyDown(Enum.KeyCode.D) then
                moveVector = moveVector + camera.CFrame.RightVector
            end
            if UIS:IsKeyDown(Enum.KeyCode.Space) then
                moveVector = moveVector + Vector3.new(0, 1, 0)
            end
            if UIS:IsKeyDown(Enum.KeyCode.LeftShift) then
                moveVector = moveVector - Vector3.new(0, 1, 0)
            end
            
            bv.Velocity = moveVector * Config.flySpeed
            bg.CFrame = camera.CFrame
        end
    end
    
    -- Noclip
    if State.noclip then
        for _, part in pairs(char:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end
end)

-- Character added
player.CharacterAdded:Connect(function(char)
    character = char
    wait(1)
    
    local humanoid = char:WaitForChild("Humanoid")
    humanoid.WalkSpeed = Config.walkSpeed
    humanoid.JumpPower = Config.jumpPower
end)

-- Chat commands
player.Chatted:Connect(function(msg)
    if msg:sub(1, 1) ~= Config.commandPrefix then return end
    
    local args = msg:sub(2):split(" ")
    local cmd = args[1]:lower()
    
    if cmd == "kill" then
        local target = findPlayer(args[2])
        if target then
            local handle = getSwordHandle()
            if handle and handle:FindFirstChild("dmg") then
                if type(target) == "table" then
                    for _, p in pairs(target) do
                        if p.Character and p.Character:FindFirstChild("Humanoid") then
                            pcall(function()
                                handle.dmg.RemoteEvent:FireServer(p.Character.Humanoid, math.huge)
                            end)
                        end
                    end
                else
                    if target.Character and target.Character:FindFirstChild("Humanoid") then
                        pcall(function()
                            handle.dmg.RemoteEvent:FireServer(target.Character.Humanoid, math.huge)
                        end)
                    end
                end
                notification("Killed target(s)")
            end
        end
        
    elseif cmd == "god" then
        local target = findPlayer(args[2] or "me")
        if target then
            local handle = getSwordHandle()
            if handle and handle:FindFirstChild("dmg") then
                if type(target) == "table" then
                    for _, p in pairs(target) do
                        if p.Character and p.Character:FindFirstChild("Humanoid") then
                            pcall(function()
                                for i = 1, 5 do
                                    handle.dmg.RemoteEvent:FireServer(p.Character.Humanoid, -math.huge)
                                end
                            end)
                        end
                    end
                else
                    if target.Character and target.Character:FindFirstChild("Humanoid") then
                        pcall(function()
                            for i = 1, 5 do
                                handle.dmg.RemoteEvent:FireServer(target.Character.Humanoid, -math.huge)
                            end
                        end)
                    end
                end
                notification("Godded target(s)")
            end
        end
        
    elseif cmd == "speed" or cmd == "ws" then
        local speed = tonumber(args[2]) or 16
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid.WalkSpeed = speed
            Config.walkSpeed = speed
            notification("Walk speed set to " .. speed)
        end
        
    elseif cmd == "jp" or cmd == "jumppower" then
        local power = tonumber(args[2]) or 50
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid.JumpPower = power
            Config.jumpPower = power
            notification("Jump power set to " .. power)
        end
        
    elseif cmd == "cmds" or cmd == "help" then
        notification("Check console (F9) for commands")
        print("=== 2take1 Hub Commands ===")
        print(Config.commandPrefix .. "kill [player/all/others] - Kill player(s)")
        print(Config.commandPrefix .. "god [player/all/others/me] - God player(s)")
        print(Config.commandPrefix .. "speed [number] - Set walk speed")
        print(Config.commandPrefix .. "jp [number] - Set jump power")
        print(Config.commandPrefix .. "cmds - Show this list")
    end
end)

-- Initial notification
notification("2take1 Hub Loaded! Press F9 for console")
wait(1)
notification("Type " .. Config.commandPrefix .. "cmds for help")
