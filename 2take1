-- Enhanced Sword Simulator GUI 4.0
-- Fixed and Working Version

repeat wait() until game.Players.LocalPlayer

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local VirtualUser = game:GetService("VirtualUser")

local player = Players.LocalPlayer
local mouse = player:GetMouse()
local load = workspace.load.RemoteEvent

-- Configuration
local CONFIG = {
    multi = 2,
    min = 5500,
    max = 9000,
    speed = 5,
    cooldown = 100,
    timeout = 30,
    killAuraRange = 10,
    walkSpeed = 16,
    jumpPower = 50
}

-- State Variables
local STATE = {
    focused = false,
    equipped = false,
    open = true,
    slowfarm = false,
    fastfarm = false,
    god = false,
    kaura = false,
    antiKick = false,
    flying = false,
    noclip = false,
    spinning = false,
    orbiting = false
}

-- Data Storage
local DATA = {
    permagods = {},
    killlog = {},
    monitor = nil,
    csub = player,
    pw = 0,
    lpw = 0,
    gain = 0,
    counter = 0,
    counter2 = 0,
    orbitTarget = nil,
    flyObjects = {}
}

-- UI Themes
local THEMES = {
    {primary = Color3.new(0.7, 0, 0.7), secondary = Color3.new(0, 0, 0)},
    {primary = Color3.new(1, 1, 1), secondary = Color3.new(0, 0, 0)},
    {primary = Color3.new(1, 0, 0), secondary = Color3.new(0, 0, 0)},
    {primary = Color3.new(0, 1, 1), secondary = Color3.new(0, 0, 0)},
    {primary = Color3.new(0.2, 0.8, 1), secondary = Color3.new(0.1, 0.1, 0.2)},
    {primary = Color3.new(1, 0.5, 0), secondary = Color3.new(0.1, 0.1, 0.1)}
}

local currentTheme = 1
local theme = THEMES[currentTheme]

-- Enhanced Commands List
local COMMANDS = {
    "kill [plr/all/others] - Kills target player(s)",
    "god [plr/all/others] - Gods target player(s)",
    "permagod [plr/all/others] - Permanently gods player(s)",
    "heal [plr] - Heals target player",
    "dmg [plr] - Damages target player",
    "tp [plr] - Teleports to player",
    "bring [plr] - Brings player to you",
    "watch [plr] - Watches target player",
    "unwatch - Returns camera to you",
    "monitor [plr] - Monitors player's power",
    "unmonitor - Stops monitoring",
    "speed [num] - Changes walkspeed",
    "ws [num] - Changes walkspeed (alias)",
    "walkspeed [num] - Changes walkspeed",
    "jump [num] - Changes jump power",
    "drop [num] - Drops swords",
    "load - Reloads character",
    "ff - Toggles fast farming",
    "sf - Toggles slow farming",
    "fly - Enables fly mode",
    "unfly - Disables fly mode",
    "noclip - Toggles noclip",
    "invisible - Makes you invisible",
    "visible - Makes you visible",
    "freeze [plr] - Freezes player",
    "unfreeze [plr] - Unfreezes player",
    "orbit [plr] - Orbits around player",
    "unorbit - Stops orbiting",
    "spin - Spins character",
    "unspin - Stops spinning",
    "antikick - Toggles anti-kick",
    "serverinfo - Shows server info",
    "clear - Clears output",
    "rejoin - Rejoins server",
    "listgods - Shows god list",
    "help - Shows commands"
}

-- Global UI variable
local UI = {}

-- Utility Functions
local function createTween(obj, props, time, style)
    time = time or 0.3
    style = style or Enum.EasingStyle.Quart
    return TweenService:Create(obj, TweenInfo.new(time, style), props)
end

local function findPlayer(name)
    if not name or name == "me" then return player end
    if name == "all" then return Players:GetPlayers() end
    if name == "others" then
        local others = {}
        for _, p in pairs(Players:GetPlayers()) do
            if p ~= player then table.insert(others, p) end
        end
        return others
    end
    
    for _, p in pairs(Players:GetPlayers()) do
        if p.Name:lower():find(name:lower()) then return p end
    end
    return nil
end

local function output(text, persistent)
    if UI and UI.output then
        if UI.output.Text == text and not persistent then
            UI.output.Text = ""
            wait()
        end
        UI.output.Text = text
    end
end

local function ensureSword()
    local sword = player.Backpack:FindFirstChildOfClass("Tool") or player.Character:FindFirstChildOfClass("Tool")
    if not sword then
        load:FireServer()
        wait(0.1)
        sword = player.Backpack:WaitForChild("sword", 3)
    end
    return sword
end

local function getSwordHandle()
    local sword = ensureSword()
    if sword and sword:FindFirstChild("Handle") then
        return sword.Handle
    end
    return nil
end

-- God Detection
local function checkGodStatus(char)
    if not char or not char:FindFirstChild("Humanoid") then
        return false, "No Character"
    end
    
    local humanoid = char.Humanoid
    local hasHealthGod = humanoid.Health > humanoid.MaxHealth
    local hasPvpGod = not char:FindFirstChild("pvp")
    
    if hasHealthGod and hasPvpGod then
        return true, "DualGod"
    elseif hasHealthGod then
        return true, "HealthGod"
    elseif hasPvpGod then
        return true, "PvpGod"
    else
        return false, "NotGodded"
    end
end

-- UI Creation Functions
local function createUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "SwordSimGUI"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = player:WaitForChild("PlayerGui")
    
    -- Main Frame
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 240, 0, 400)
    mainFrame.Position = UDim2.new(0, 20, 0.5, -200)
    mainFrame.BackgroundColor3 = theme.secondary
    mainFrame.BorderColor3 = theme.primary
    mainFrame.BorderSizePixel = 2
    mainFrame.Parent = screenGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = mainFrame
    
    -- Title Bar
    local titleBar = Instance.new("Frame")
    titleBar.Name = "TitleBar"
    titleBar.Size = UDim2.new(1, 0, 0, 30)
    titleBar.BackgroundColor3 = theme.primary
    titleBar.BorderSizePixel = 0
    titleBar.Parent = mainFrame
    
    local titleCorner = corner:Clone()
    titleCorner.Parent = titleBar
    
    local title = Instance.new("TextLabel")
    title.Name = "Title"
    title.Size = UDim2.new(1, -60, 1, 0)
    title.Position = UDim2.new(0, 10, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = "Sword Sim GUI 4.0"
    title.TextColor3 = theme.secondary
    title.TextSize = 14
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Font = Enum.Font.GothamBold
    title.Parent = titleBar
    
    -- Close Button
    local closeBtn = Instance.new("TextButton")
    closeBtn.Name = "CloseButton"
    closeBtn.Size = UDim2.new(0, 25, 0, 25)
    closeBtn.Position = UDim2.new(1, -30, 0, 2.5)
    closeBtn.BackgroundColor3 = Color3.new(1, 0.3, 0.3)
    closeBtn.BorderSizePixel = 0
    closeBtn.Text = "Ã—"
    closeBtn.TextColor3 = Color3.new(1, 1, 1)
    closeBtn.TextSize = 18
    closeBtn.Font = Enum.Font.GothamBold
    closeBtn.Parent = titleBar
    
    local closeBtnCorner = Instance.new("UICorner")
    closeBtnCorner.CornerRadius = UDim.new(0, 4)
    closeBtnCorner.Parent = closeBtn
    
    -- Theme Button
    local themeBtn = Instance.new("TextButton")
    themeBtn.Name = "ThemeButton"
    themeBtn.Size = UDim2.new(0, 25, 0, 25)
    themeBtn.Position = UDim2.new(1, -60, 0, 2.5)
    themeBtn.BackgroundColor3 = theme.secondary
    themeBtn.BorderColor3 = theme.primary
    themeBtn.BorderSizePixel = 1
    themeBtn.Text = "ðŸŽ¨"
    themeBtn.TextColor3 = theme.primary
    themeBtn.TextSize = 12
    themeBtn.Parent = titleBar
    
    local themeBtnCorner = Instance.new("UICorner")
    themeBtnCorner.CornerRadius = UDim.new(0, 4)
    themeBtnCorner.Parent = themeBtn
    
    -- Content Frame
    local contentFrame = Instance.new("ScrollingFrame")
    contentFrame.Name = "ContentFrame"
    contentFrame.Size = UDim2.new(1, -10, 1, -90)
    contentFrame.Position = UDim2.new(0, 5, 0, 35)
    contentFrame.BackgroundTransparency = 1
    contentFrame.BorderSizePixel = 0
    contentFrame.ScrollBarThickness = 6
    contentFrame.ScrollBarImageColor3 = theme.primary
    contentFrame.CanvasSize = UDim2.new(0, 0, 0, 600)
    contentFrame.Parent = mainFrame
    
    -- Status Frame
    local statusFrame = Instance.new("Frame")
    statusFrame.Name = "StatusFrame"
    statusFrame.Size = UDim2.new(1, -10, 0, 50)
    statusFrame.Position = UDim2.new(0, 5, 1, -55)
    statusFrame.BackgroundColor3 = theme.secondary
    statusFrame.BorderColor3 = theme.primary
    statusFrame.BorderSizePixel = 1
    statusFrame.Parent = mainFrame
    
    local statusCorner = Instance.new("UICorner")
    statusCorner.CornerRadius = UDim.new(0, 4)
    statusCorner.Parent = statusFrame
    
    -- Output Label
    local outputLabel = Instance.new("TextLabel")
    outputLabel.Name = "Output"
    outputLabel.Size = UDim2.new(1, -10, 1, -10)
    outputLabel.Position = UDim2.new(0, 5, 0, 5)
    outputLabel.BackgroundTransparency = 1
    outputLabel.Text = "Ready"
    outputLabel.TextColor3 = theme.primary
    outputLabel.TextSize = 12
    outputLabel.TextWrapped = true
    outputLabel.Font = Enum.Font.Gotham
    outputLabel.Parent = statusFrame
    
    return {
        screenGui = screenGui,
        mainFrame = mainFrame,
        titleBar = titleBar,
        closeBtn = closeBtn,
        themeBtn = themeBtn,
        contentFrame = contentFrame,
        statusFrame = statusFrame,
        output = outputLabel
    }
end

local function createToggle(parent, name, position, callback)
    local frame = Instance.new("Frame")
    frame.Name = name .. "Frame"
    frame.Size = UDim2.new(1, -10, 0, 30)
    frame.Position = position
    frame.BackgroundColor3 = theme.secondary
    frame.BorderColor3 = theme.primary
    frame.BorderSizePixel = 1
    frame.Parent = parent
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = frame
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -60, 1, 0)
    label.Position = UDim2.new(0, 10, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = name
    label.TextColor3 = theme.primary
    label.TextSize = 12
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Font = Enum.Font.Gotham
    label.Parent = frame
    
    local toggle = Instance.new("TextButton")
    toggle.Size = UDim2.new(0, 40, 0, 20)
    toggle.Position = UDim2.new(1, -45, 0.5, -10)
    toggle.BackgroundColor3 = Color3.new(0.8, 0.2, 0.2)
    toggle.BorderSizePixel = 0
    toggle.Text = ""
    toggle.Parent = frame
    
    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 10)
    toggleCorner.Parent = toggle
    
    local indicator = Instance.new("Frame")
    indicator.Size = UDim2.new(0, 16, 0, 16)
    indicator.Position = UDim2.new(0, 2, 0, 2)
    indicator.BackgroundColor3 = Color3.new(1, 1, 1)
    indicator.BorderSizePixel = 0
    indicator.Parent = toggle
    
    local indicatorCorner = Instance.new("UICorner")
    indicatorCorner.CornerRadius = UDim.new(0, 8)
    indicatorCorner.Parent = indicator
    
    local active = false
    
    toggle.MouseButton1Click:Connect(function()
        active = not active
        
        if active then
            createTween(toggle, {BackgroundColor3 = Color3.new(0.2, 0.8, 0.2)}):Play()
            createTween(indicator, {Position = UDim2.new(0, 22, 0, 2)}):Play()
        else
            createTween(toggle, {BackgroundColor3 = Color3.new(0.8, 0.2, 0.2)}):Play()
            createTween(indicator, {Position = UDim2.new(0, 2, 0, 2)}):Play()
        end
        
        callback(active)
    end)
    
    return frame, toggle, function() return active end
end

local function createSlider(parent, name, position, minValue, maxValue, defaultValue, callback)
    local frame = Instance.new("Frame")
    frame.Name = name .. "Frame"
    frame.Size = UDim2.new(1, -10, 0, 40)
    frame.Position = position
    frame.BackgroundColor3 = theme.secondary
    frame.BorderColor3 = theme.primary
    frame.BorderSizePixel = 1
    frame.Parent = parent
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = frame
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -60, 0, 20)
    label.Position = UDim2.new(0, 10, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = name
    label.TextColor3 = theme.primary
    label.TextSize = 12
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Font = Enum.Font.Gotham
    label.Parent = frame
    
    local valueLabel = Instance.new("TextLabel")
    valueLabel.Size = UDim2.new(0, 40, 0, 20)
    valueLabel.Position = UDim2.new(1, -50, 0, 0)
    valueLabel.BackgroundTransparency = 1
    valueLabel.Text = tostring(defaultValue)
    valueLabel.TextColor3 = theme.primary
    valueLabel.TextSize = 12
    valueLabel.TextXAlignment = Enum.TextXAlignment.Right
    valueLabel.Font = Enum.Font.Gotham
    valueLabel.Parent = frame
    
    -- Slider track
    local track = Instance.new("Frame")
    track.Size = UDim2.new(1, -20, 0, 6)
    track.Position = UDim2.new(0, 10, 0, 25)
    track.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)
    track.BorderSizePixel = 0
    track.Parent = frame
    
    local trackCorner = Instance.new("UICorner")
    trackCorner.CornerRadius = UDim.new(0, 3)
    trackCorner.Parent = track
    
    -- Slider fill
    local fill = Instance.new("Frame")
    fill.Size = UDim2.new(0.5, 0, 1, 0)
    fill.Position = UDim2.new(0, 0, 0, 0)
    fill.BackgroundColor3 = theme.primary
    fill.BorderSizePixel = 0
    fill.Parent = track
    
    local fillCorner = Instance.new("UICorner")
    fillCorner.CornerRadius = UDim.new(0, 3)
    fillCorner.Parent = fill
    
    -- Slider handle
    local handle = Instance.new("Frame")
    handle.Size = UDim2.new(0, 16, 0, 16)
    handle.Position = UDim2.new(0.5, -8, 0, -5)
    handle.BackgroundColor3 = theme.primary
    handle.BorderSizePixel = 0
    handle.Parent = track
    
    local handleCorner = Instance.new("UICorner")
    handleCorner.CornerRadius = UDim.new(0, 8)
    handleCorner.Parent = handle
    
    local currentValue = defaultValue
    local dragging = false
    
    local function updateSlider(value)
        currentValue = math.clamp(value, minValue, maxValue)
        local percent = (currentValue - minValue) / (maxValue - minValue)
        
        fill.Size = UDim2.new(percent, 0, 1, 0)
        handle.Position = UDim2.new(percent, -8, 0, -5)
        valueLabel.Text = tostring(math.floor(currentValue))
        
        callback(currentValue)
    end
    
    handle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local trackSize = track.AbsoluteSize.X
            local mouseX = input.Position.X - track.AbsolutePosition.X
            local percent = math.clamp(mouseX / trackSize, 0, 1)
            local value = minValue + (percent * (maxValue - minValue))
            updateSlider(value)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    -- Initialize
    updateSlider(defaultValue)
    
    return frame, function() return currentValue end
end

local function createCommandBar()
    local commandFrame = Instance.new("Frame")
    commandFrame.Name = "CommandFrame"
    commandFrame.Size = UDim2.new(0, 400, 0, 40)
    commandFrame.Position = UDim2.new(0.5, -200, 0, -80)
    commandFrame.BackgroundColor3 = theme.secondary
    commandFrame.BorderColor3 = theme.primary
    commandFrame.BorderSizePixel = 2
    commandFrame.Visible = false
    commandFrame.Parent = UI.screenGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = commandFrame
    
    local prefix = Instance.new("TextLabel")
    prefix.Size = UDim2.new(0, 20, 1, 0)
    prefix.BackgroundTransparency = 1
    prefix.Text = ">"
    prefix.TextColor3 = theme.primary
    prefix.TextSize = 16
    prefix.Font = Enum.Font.GothamBold
    prefix.Parent = commandFrame
    
    local textBox = Instance.new("TextBox")
    textBox.Name = "CommandBox"
    textBox.Size = UDim2.new(1, -25, 1, -10)
    textBox.Position = UDim2.new(0, 25, 0, 5)
    textBox.BackgroundTransparency = 1
    textBox.Text = ""
    textBox.PlaceholderText = "Enter command..."
    textBox.TextColor3 = theme.primary
    textBox.PlaceholderColor3 = Color3.new(0.5, 0.5, 0.5)
    textBox.TextSize = 14
    textBox.TextXAlignment = Enum.TextXAlignment.Left
    textBox.Font = Enum.Font.Gotham
    textBox.ClearTextOnFocus = false
    textBox.Parent = commandFrame
    
    -- Command suggestions frame
    local suggestFrame = Instance.new("ScrollingFrame")
    suggestFrame.Name = "SuggestFrame"
    suggestFrame.Size = UDim2.new(1, 0, 0, 0)
    suggestFrame.Position = UDim2.new(0, 0, 1, 5)
    suggestFrame.BackgroundColor3 = theme.secondary
    suggestFrame.BorderColor3 = theme.primary
    suggestFrame.BorderSizePixel = 1
    suggestFrame.ScrollBarThickness = 4
    suggestFrame.ScrollBarImageColor3 = theme.primary
    suggestFrame.Visible = false
    suggestFrame.Parent = commandFrame
    
    local suggestCorner = corner:Clone()
    suggestCorner.Parent = suggestFrame
    
    -- Function to update suggestions
    local function updateSuggestions()
        local text = textBox.Text:lower()
        
        -- Clear existing suggestions
        for _, child in pairs(suggestFrame:GetChildren()) do
            if child:IsA("TextButton") then
                child:Destroy()
            end
        end
        
        if text ~= "" then
            local matches = {}
            
            -- Find matching commands
            for _, cmdText in pairs(COMMANDS) do
                local cmdName = cmdText:split(" ")[1]:split("-")[1]:gsub(" ", "")
                if cmdName:lower():find(text) or cmdText:lower():find(text) then
                    table.insert(matches, cmdText)
                end
            end
            
            if #matches > 0 then
                suggestFrame.Visible = true
                local maxHeight = math.min(#matches * 25, 150)
                suggestFrame.Size = UDim2.new(1, 0, 0, maxHeight)
                suggestFrame.CanvasSize = UDim2.new(0, 0, 0, #matches * 25)
                
                for i, cmdText in pairs(matches) do
                    local btn = Instance.new("TextButton")
                    btn.Size = UDim2.new(1, -10, 0, 25)
                    btn.Position = UDim2.new(0, 5, 0, (i-1) * 25)
                    btn.BackgroundColor3 = theme.secondary
                    btn.BorderSizePixel = 0
                    btn.Text = cmdText
                    btn.TextColor3 = theme.primary
                    btn.TextSize = 10
                    btn.TextXAlignment = Enum.TextXAlignment.Left
                    btn.TextYAlignment = Enum.TextYAlignment.Center
                    btn.Font = Enum.Font.Gotham
                    btn.Parent = suggestFrame
                    
                    local btnCorner = Instance.new("UICorner")
                    btnCorner.CornerRadius = UDim.new(0, 3)
                    btnCorner.Parent = btn
                    
                    -- Hover effects
                    btn.MouseEnter:Connect(function()
                        createTween(btn, {BackgroundColor3 = theme.primary}):Play()
                        createTween(btn, {TextColor3 = theme.secondary}):Play()
                    end)
                    
                    btn.MouseLeave:Connect(function()
                        createTween(btn, {BackgroundColor3 = theme.secondary}):Play()
                        createTween(btn, {TextColor3 = theme.primary}):Play()
                    end)
                    
                    -- Click to auto-complete
                    btn.MouseButton1Click:Connect(function()
                        local commandName = cmdText:split(" ")[1]
                        textBox.Text = commandName
                        suggestFrame.Visible = false
                        textBox:CaptureFocus()
                    end)
                end
            else
                suggestFrame.Visible = false
            end
        else
            suggestFrame.Visible = false
        end
    end
    
    -- Connect text change event
    textBox.Changed:Connect(function()
        updateSuggestions()
    end)
    
    -- Handle focus events
    textBox.Focused:Connect(function()
        STATE.focused = true
        updateSuggestions()
    end)
    
    textBox.FocusLost:Connect(function(enterPressed)
        STATE.focused = false
        if enterPressed and textBox.Text ~= "" then
            runCommand(textBox.Text)
        end
        textBox.Text = ""
        suggestFrame.Visible = false
        createTween(commandFrame, {Position = UDim2.new(0.5, -200, 0, -80)}):Play()
        wait(0.3)
        commandFrame.Visible = false
    end)
    
    return commandFrame, textBox
end

local function createGodList()
    local godListFrame = Instance.new("Frame")
    godListFrame.Name = "GodListFrame"
    godListFrame.Size = UDim2.new(0, 200, 0, 300)
    godListFrame.Position = UDim2.new(1, -220, 0, 20)
    godListFrame.BackgroundColor3 = theme.secondary
    godListFrame.BorderColor3 = theme.primary
    godListFrame.BorderSizePixel = 2
    godListFrame.Visible = false
    godListFrame.Parent = UI.screenGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = godListFrame
    
    -- Title Bar
    local titleBar = Instance.new("Frame")
    titleBar.Size = UDim2.new(1, 0, 0, 30)
    titleBar.BackgroundColor3 = theme.primary
    titleBar.BorderSizePixel = 0
    titleBar.Parent = godListFrame
    
    local titleCorner = corner:Clone()
    titleCorner.Parent = titleBar
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, -30, 1, 0)
    title.Position = UDim2.new(0, 10, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = "God List"
    title.TextColor3 = theme.secondary
    title.TextSize = 14
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Font = Enum.Font.GothamBold
    title.Parent = titleBar
    
    -- Close Button
    local closeBtn = Instance.new("TextButton")
    closeBtn.Size = UDim2.new(0, 25, 0, 25)
    closeBtn.Position = UDim2.new(1, -30, 0, 2.5)
    closeBtn.BackgroundColor3 = Color3.new(1, 0.3, 0.3)
    closeBtn.BorderSizePixel = 0
    closeBtn.Text = "Ã—"
    closeBtn.TextColor3 = Color3.new(1, 1, 1)
    closeBtn.TextSize = 14
    closeBtn.Font = Enum.Font.GothamBold
    closeBtn.Parent = titleBar
    
    local closeBtnCorner = Instance.new("UICorner")
    closeBtnCorner.CornerRadius = UDim.new(0, 4)
    closeBtnCorner.Parent = closeBtn
    
    closeBtn.MouseButton1Click:Connect(function()
        godListFrame.Visible = false
    end)
    
    -- Scrolling Frame
    local scrollFrame = Instance.new("ScrollingFrame")
    scrollFrame.Size = UDim2.new(1, -10, 1, -40)
    scrollFrame.Position = UDim2.new(0, 5, 0, 35)
    scrollFrame.BackgroundTransparency = 1
    scrollFrame.BorderSizePixel = 0
    scrollFrame.ScrollBarThickness = 6
    scrollFrame.ScrollBarImageColor3 = theme.primary
    scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
    scrollFrame.Parent = godListFrame
    
    return godListFrame, scrollFrame
end

local function updateGodList()
    local godListFrame = UI.godListFrame
    local scrollFrame = UI.godScrollFrame
    
    if not godListFrame or not scrollFrame then return end
    
    -- Clear existing entries
    for _, child in pairs(scrollFrame:GetChildren()) do
        if child:IsA("Frame") then
            child:Destroy()
        end
    end
    
    local yPos = 0
    local godCount = 0
    
    -- Check all players for god status
    for _, plr in pairs(Players:GetPlayers()) do
        if plr.Character then
            local isGodded, godType = checkGodStatus(plr.Character)
            if isGodded then
                godCount = godCount + 1
                
                -- Create entry frame
                local entryFrame = Instance.new("Frame")
                entryFrame.Size = UDim2.new(1, -10, 0, 25)
                entryFrame.Position = UDim2.new(0, 0, 0, yPos)
                entryFrame.BackgroundColor3 = theme.secondary
                entryFrame.BorderColor3 = theme.primary
                entryFrame.BorderSizePixel = 1
                entryFrame.Parent = scrollFrame
                
                local entryCorner = Instance.new("UICorner")
                entryCorner.CornerRadius = UDim.new(0, 4)
                entryCorner.Parent = entryFrame
                
                -- Player name label
                local nameLabel = Instance.new("TextLabel")
                nameLabel.Size = UDim2.new(0.6, 0, 1, 0)
                nameLabel.Position = UDim2.new(0, 5, 0, 0)
                nameLabel.BackgroundTransparency = 1
                nameLabel.Text = plr.Name
                nameLabel.TextColor3 = theme.primary
                nameLabel.TextSize = 11
                nameLabel.TextXAlignment = Enum.TextXAlignment.Left
                nameLabel.Font = Enum.Font.Gotham
                nameLabel.Parent = entryFrame
                
                -- God type label
                local typeLabel = Instance.new("TextLabel")
                typeLabel.Size = UDim2.new(0.4, -5, 1, 0)
                typeLabel.Position = UDim2.new(0.6, 0, 0, 0)
                typeLabel.BackgroundTransparency = 1
                typeLabel.Text = godType
                typeLabel.TextColor3 = Color3.new(0.2, 0.8, 0.2)
                typeLabel.TextSize = 10
                typeLabel.TextXAlignment = Enum.TextXAlignment.Right
                typeLabel.Font = Enum.Font.Gotham
                typeLabel.Parent = entryFrame
                
                yPos = yPos + 30
            end
        end
    end
    
    -- Update canvas size
    scrollFrame.CanvasSize = UDim2.new(0, 0, 0, yPos)
    
    -- Update title with count
    local titleLabel = godListFrame:FindFirstChild("Frame"):FindFirstChild("TextLabel")
    if titleLabel then
        titleLabel.Text = "God List (" .. godCount .. ")"
    end
end

-- Command Handler
function runCommand(cmd)
    local args = cmd:lower():split(" ")
    local command = args[1]
    local target = findPlayer(args[2])
    
    -- Kill command with improved verification
    if command == "kill" then
        if target and type(target) == "table" then
            spawn(function()
                local handle = getSwordHandle()
                if handle and handle:FindFirstChild("dmg") then
                    local killed = 0
                    local totalTargets = 0
                    
                    -- Count valid targets
                    for _, plr in pairs(target) do
                        if plr.Character and plr.Character:FindFirstChild("Humanoid") and plr ~= player then
                            totalTargets = totalTargets + 1
                        end
                    end
                    
                    output("Starting mass kill on " .. totalTargets .. " players...")
                    
                    for _, plr in pairs(target) do
                        if plr.Character and plr.Character:FindFirstChild("Humanoid") and plr ~= player then
                            local humanoid = plr.Character.Humanoid
                            local initialHealth = humanoid.Health
                            
                            -- Kill attempt
                            handle.dmg.RemoteEvent:FireServer(humanoid, math.huge)
                            
                            -- Wait and verify kill
                            wait(0.1)
                            
                            if humanoid.Health <= 0 or humanoid.Health < initialHealth then
                                killed = killed + 1
                                output("âœ“ Killed " .. plr.Name .. " (" .. killed .. "/" .. totalTargets .. ")")
                                print("KILLED: " .. plr.Name .. " - Health: " .. humanoid.Health)
                            else
                                output("âœ— Failed to kill " .. plr.Name)
                                print("FAILED: " .. plr.Name .. " - Health: " .. humanoid.Health)
                            end
                            
                            wait(0.4) -- 0.4 second delay between kills
                        end
                    end
                    output("Mass kill complete: " .. killed .. "/" .. totalTargets .. " players killed")
                else
                    output("No sword available")
                end
            end)
        elseif target then
            spawn(function()
                local char = target.Character
                if char and char:FindFirstChild("Humanoid") then
                    local handle = getSwordHandle()
                    if handle and handle:FindFirstChild("dmg") then
                        local humanoid = char.Humanoid
                        local initialHealth = humanoid.Health
                        
                        handle.dmg.RemoteEvent:FireServer(humanoid, math.huge)
                        wait(0.1)
                        
                        if humanoid.Health <= 0 or humanoid.Health < initialHealth then
                            output("âœ“ Killed " .. target.Name)
                            print("KILLED: " .. target.Name)
                        else
                            output("âœ— Failed to kill " .. target.Name)
                            print("FAILED: " .. target.Name)
                        end
                    else
                        output("No sword available")
                    end
                end
            end)
        end
        return
    end
    
    -- God command
    if command == "god" then
        if target and type(target) == "table" then
            spawn(function()
                local handle = getSwordHandle()
                if handle and handle:FindFirstChild("dmg") then
                    local godded = 0
                    for _, plr in pairs(target) do
                        if plr.Character and plr.Character:FindFirstChild("Humanoid") and plr ~= player then
                            for i = 1, 5 do
                                handle.dmg.RemoteEvent:FireServer(plr.Character.Humanoid, -math.huge)
                                wait(0.02)
                            end
                            output("Godded " .. plr.Name)
                            godded = godded + 1
                            wait(0.2)
                        end
                    end
                    output("Total godded: " .. godded .. " players")
                else
                    output("No sword available")
                end
            end)
        elseif target then
            spawn(function()
                local char = target.Character
                if char and char:FindFirstChild("Humanoid") then
                    local handle = getSwordHandle()
                    if handle and handle:FindFirstChild("dmg") then
                        for i = 1, 5 do
                            handle.dmg.RemoteEvent:FireServer(char.Humanoid, -math.huge)
                            wait(0.02)
                        end
                        output(target.Name .. " is now godded")
                    else
                        output("No sword available")
                    end
                end
            end)
        end
        return
    end
    
    -- Other commands
    if target and type(target) ~= "table" then
        local char = target.Character
        if not char then return output("Player not found") end
        
        local humanoid = char:FindFirstChild("Humanoid")
        local rootPart = char:FindFirstChild("HumanoidRootPart")
        
        if command == "heal" then
            local handle = getSwordHandle()
            if handle and handle:FindFirstChild("dmg") and humanoid then
                handle.dmg.RemoteEvent:FireServer(humanoid, -(humanoid.MaxHealth - humanoid.Health))
                output("Healed " .. target.Name)
            end
            
        elseif command == "dmg" then
            local handle = getSwordHandle()
            if handle and handle:FindFirstChild("dmg") and humanoid then
                handle.dmg.RemoteEvent:FireServer(humanoid, humanoid.Health / 2)
                output("Damaged " .. target.Name)
            end
            
        elseif command == "tp" then
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") and rootPart then
                player.Character.HumanoidRootPart.CFrame = rootPart.CFrame
                output("Teleported to " .. target.Name)
            end
            
        elseif command == "bring" then
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") and rootPart then
                rootPart.CFrame = player.Character.HumanoidRootPart.CFrame
                output("Brought " .. target.Name)
            end
            
        elseif command == "watch" then
            DATA.csub = target
            output("Watching " .. target.Name)
            
        elseif command == "monitor" then
            DATA.monitor = target
            output("Monitoring " .. target.Name)
            
        elseif command == "freeze" then
            if rootPart then
                rootPart.Anchored = true
                output("Froze " .. target.Name)
            end
            
        elseif command == "unfreeze" then
            if rootPart then
                rootPart.Anchored = false
                output("Unfroze " .. target.Name)
            end
        end
    end
    
    -- Speed commands (speed, ws, walkspeed)
    if command == "speed" or command == "ws" or command == "walkspeed" then
        local speed = tonumber(args[2]) or 16
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid.WalkSpeed = speed
            output("Walkspeed set to " .. speed)
        end
        
    elseif command == "jump" then
        local jump = tonumber(args[2]) or 50
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid.JumpPower = jump
            output("Jump power set to " .. jump)
        end
        
    elseif command == "load" then
        load:FireServer()
        output("Character reloaded")
        
    elseif command == "ff" then
        STATE.fastfarm = not STATE.fastfarm
        output("Fast farm: " .. (STATE.fastfarm and "ON" or "OFF"))
        
    elseif command == "sf" then
        STATE.slowfarm = not STATE.slowfarm
        output("Slow farm: " .. (STATE.slowfarm and "ON" or "OFF"))
        
    elseif command == "fly" then
        if not STATE.flying then
            STATE.flying = true
            local char = player.Character
            if char and char:FindFirstChild("HumanoidRootPart") then
                local rootPart = char.HumanoidRootPart
                
                local bodyVelocity = Instance.new("BodyVelocity")
                bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                bodyVelocity.Velocity = Vector3.new(0, 0, 0)
                bodyVelocity.Parent = rootPart
                
                local bodyAngularVelocity = Instance.new("BodyAngularVelocity")
                bodyAngularVelocity.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
                bodyAngularVelocity.AngularVelocity = Vector3.new(0, 0, 0)
                bodyAngularVelocity.Parent = rootPart
                
                DATA.flyObjects = {bodyVelocity, bodyAngularVelocity}
                
                output("Fly enabled - Use WASD + Space/Shift")
                
                -- Fly controls
                spawn(function()
                    while STATE.flying do
                        if not char or not char:FindFirstChild("HumanoidRootPart") or not bodyVelocity.Parent then
                            STATE.flying = false
                            break
                        end
                        
                        local camera = workspace.CurrentCamera
                        local moveVector = Vector3.new(0, 0, 0)
                        
                        if UserInputService:IsKeyDown(Enum.KeyCode.W) then
                            moveVector = moveVector + camera.CFrame.LookVector
                        end
                        if UserInputService:IsKeyDown(Enum.KeyCode.S) then
                            moveVector = moveVector - camera.CFrame.LookVector
                        end
                        if UserInputService:IsKeyDown(Enum.KeyCode.A) then
                            moveVector = moveVector - camera.CFrame.RightVector
                        end
                        if UserInputService:IsKeyDown(Enum.KeyCode.D) then
                            moveVector = moveVector + camera.CFrame.RightVector
                        end
                        if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
                            moveVector = moveVector + Vector3.new(0, 1, 0)
                        end
                        if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
                            moveVector = moveVector - Vector3.new(0, 1, 0)
                        end
                        
                        bodyVelocity.Velocity = moveVector * 50
                        wait()
                    end
                end)
            end
        end
        
    elseif command == "unfly" then
        STATE.flying = false
        for _, obj in pairs(DATA.flyObjects) do
            if obj and obj.Parent then
                obj:Destroy()
            end
        end
        DATA.flyObjects = {}
        output("Fly disabled")
        
    elseif command == "noclip" then
        STATE.noclip = not STATE.noclip
        if player.Character then
            for _, part in pairs(player.Character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = not STATE.noclip
                end
            end
        end
        output("Noclip: " .. (STATE.noclip and "ON" or "OFF"))
        
        if STATE.noclip then
            spawn(function()
                while STATE.noclip do
                    if player.Character then
                        for _, part in pairs(player.Character:GetDescendants()) do
                            if part:IsA("BasePart") then
                                part.CanCollide = false
                            end
                        end
                    end
                    wait(0.1)
                end
            end)
        end
        
    elseif command == "invisible" then
        if player.Character then
            for _, part in pairs(player.Character:GetChildren()) do
                if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                    part.Transparency = 1
                elseif part:IsA("Accessory") and part:FindFirstChild("Handle") then
                    part.Handle.Transparency = 1
                end
            end
        end
        output("Made invisible")
        
    elseif command == "visible" then
        if player.Character then
            for _, part in pairs(player.Character:GetChildren()) do
                if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                    part.Transparency = 0
                elseif part:IsA("Accessory") and part:FindFirstChild("Handle") then
                    part.Handle.Transparency = 0
                end
            end
        end
        output("Made visible")
        
    elseif command == "spin" then
        STATE.spinning = true
        output("Spinning enabled")
        spawn(function()
            while STATE.spinning do
                if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                    player.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, 0.2, 0)
                end
                wait()
            end
        end)
        
    elseif command == "unspin" then
        STATE.spinning = false
        output("Spinning disabled")
        
    elseif command == "orbit" and target and type(target) ~= "table" then
        STATE.orbiting = true
        DATA.orbitTarget = target
        output("Orbiting " .. target.Name)
        spawn(function()
            local angle = 0
            while STATE.orbiting and DATA.orbitTarget do
                if not DATA.orbitTarget.Character or not player.Character then
                    STATE.orbiting = false
                    break
                end
                
                local targetPos = DATA.orbitTarget.Character:FindFirstChild("HumanoidRootPart")
                local playerRoot = player.Character:FindFirstChild("HumanoidRootPart")
                
                if targetPos and playerRoot then
                    angle = angle + 0.1
                    local x = math.cos(angle) * 10
                    local z = math.sin(angle) * 10
                    playerRoot.CFrame = CFrame.new(targetPos.Position + Vector3.new(x, 0, z))
                end
                wait()
            end
        end)
        
    elseif command == "unorbit" then
        STATE.orbiting = false
        DATA.orbitTarget = nil
        output("Stopped orbiting")
        
    elseif command == "unwatch" then
        DATA.csub = player
        output("Camera reset")
        
    elseif command == "unmonitor" then
        DATA.monitor = nil
        output("Monitoring stopped")
        
    elseif command == "antikick" then
        STATE.antiKick = not STATE.antiKick
        output("Anti-kick: " .. (STATE.antiKick and "ON" or "OFF"))
        
    elseif command == "clear" then
        output("")
        
    elseif command == "rejoin" then
        game:GetService("TeleportService"):Teleport(game.PlaceId, player)
        
    elseif command == "serverinfo" then
        output("Players: " .. #Players:GetPlayers() .. "/12 | Server: " .. game.JobId:sub(1, 8))
        
    elseif command == "listgods" then
        UI.godListFrame.Visible = true
        updateGodList()
        output("God list opened")
        
    elseif command == "help" then
        output("Commands: kill, god, heal, tp, speed/ws, fly, unfly, noclip, spin, orbit, listgods, help. Use 'all' or 'others' with kill/god.")
        
    else
        output("Unknown command. Type 'help' for commands.")
    end
end

-- Chat Handler
local function setupChatHandler()
    local TextChatService = game:GetService("TextChatService")
    
    -- Method 1: New TextChatService
    pcall(function()
        if TextChatService.ChatInputBarConfiguration then
            TextChatService.ChatInputBarConfiguration.TargetTextChannel.OnIncomingMessage = function(message)
                if message.TextSource and message.TextSource.UserId == player.UserId then
                    local text = message.Text
                    if text and text:sub(1, 1) == ";" then
                        runCommand(text:sub(2))
                    end
                end
            end
            output("Chat handler setup (New)")
            return
        end
    end)
    
    -- Method 2: Legacy Chat
    pcall(function()
        player.Chatted:Connect(function(message)
            if message:sub(1, 1) == ";" then
                runCommand(message:sub(2))
            end
        end)
        output("Chat handler setup (Legacy)")
    end)
end

-- Initialize UI
UI = createUI()

-- Create additional UI elements
local commandFrame, commandBox = createCommandBar()
UI.godListFrame, UI.godScrollFrame = createGodList()

-- Create Toggles and Sliders
local yPos = 0
local toggleSpacing = 35
local sliderSpacing = 45

createToggle(UI.contentFrame, "Fast Farm", UDim2.new(0, 0, 0, yPos), function(active)
    STATE.fastfarm = active
end)
yPos = yPos + toggleSpacing

createToggle(UI.contentFrame, "Slow Farm", UDim2.new(0, 0, 0, yPos), function(active)
    STATE.slowfarm = active
end)
yPos = yPos + toggleSpacing

createToggle(UI.contentFrame, "God Mode", UDim2.new(0, 0, 0, yPos), function(active)
    STATE.god = active
    if active then
        if player.Character and player.Character:FindFirstChild("pvp") then
            player.Character.pvp:Destroy()
        end
    else
        load:FireServer()
    end
end)
yPos = yPos + toggleSpacing

createToggle(UI.contentFrame, "Kill Aura", UDim2.new(0, 0, 0, yPos), function(active)
    STATE.kaura = active
end)
yPos = yPos + toggleSpacing

-- Kill Aura Range Slider
createSlider(UI.contentFrame, "Kill Aura Range", UDim2.new(0, 0, 0, yPos), 5, 50, CONFIG.killAuraRange, function(value)
    CONFIG.killAuraRange = value
end)
yPos = yPos + sliderSpacing

createToggle(UI.contentFrame, "Anti-Kick", UDim2.new(0, 0, 0, yPos), function(active)
    STATE.antiKick = active
end)

-- Update canvas size for scrolling
UI.contentFrame.CanvasSize = UDim2.new(0, 0, 0, yPos + 50)

-- Event Handlers
UI.closeBtn.MouseButton1Click:Connect(function()
    createTween(UI.mainFrame, {Position = UDim2.new(0, -250, 0.5, -200)}):Play()
    wait(0.3)
    UI.screenGui:Destroy()
    STATE.open = false
end)

UI.themeBtn.MouseButton1Click:Connect(function()
    currentTheme = currentTheme >= #THEMES and 1 or currentTheme + 1
    theme = THEMES[currentTheme]
    
    -- Update all UI colors
    for _, obj in pairs(UI.screenGui:GetDescendants()) do
        if obj.Name == "MainFrame" or obj.Name == "StatusFrame" or obj.Name == "CommandFrame" or obj.Name == "GodListFrame" then
            obj.BackgroundColor3 = theme.secondary
            obj.BorderColor3 = theme.primary
        elseif obj.Name == "Frame" and obj.Parent and (obj.Parent.Name == "TitleBar" or obj.Parent.Name == "GodListFrame") then
            obj.BackgroundColor3 = theme.primary
        elseif obj.Name == "SuggestFrame" then
            obj.BackgroundColor3 = theme.secondary
            obj.BorderColor3 = theme.primary
            obj.ScrollBarImageColor3 = theme.primary
        elseif obj:IsA("TextLabel") or obj:IsA("TextBox") then
            if obj.Parent and (obj.Parent.Name == "Frame" or obj.Parent.Name == "TitleBar") then
                obj.TextColor3 = theme.secondary
            else
                obj.TextColor3 = theme.primary
            end
        elseif obj:IsA("TextButton") and obj.Parent and obj.Parent.Name == "SuggestFrame" then
            obj.BackgroundColor3 = theme.secondary
            obj.TextColor3 = theme.primary
        end
    end
    
    output("Theme changed to " .. currentTheme)
end)

-- Input Handling
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed or not STATE.open then return end
    
    if input.KeyCode == Enum.KeyCode.Semicolon then
        commandFrame.Visible = true
        createTween(commandFrame, {Position = UDim2.new(0.5, -200, 0, 50)}):Play()
        wait(0.3)
        commandBox:CaptureFocus()
    end
end)

-- Dragging System
local dragging = false
local dragStart = nil
local startPos = nil

UI.titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = UI.mainFrame.Position
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        UI.mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, 
                                         startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

-- Main Loop
RunService.Heartbeat:Connect(function()
    if not STATE.open or not player.Character then return end
    
    local char = player.Character
    local humanoid = char:FindFirstChild("Humanoid")
    local rootPart = char:FindFirstChild("HumanoidRootPart")
    
    if not humanoid or not rootPart then return end
    
    -- Update camera subject
    if workspace.CurrentCamera then
        workspace.CurrentCamera.CameraSubject = DATA.csub.Character and DATA.csub.Character.Humanoid or humanoid
    end
    
    -- Update power tracking
    if player.leaderstats and player.leaderstats:FindFirstChild("Power") then
        DATA.pw = player.leaderstats.Power.Value
        DATA.gain = (DATA.pw - DATA.lpw) * 10
        DATA.lpw = DATA.pw
    end
    
    -- Fast Farm
    if STATE.fastfarm then
        local handle = getSwordHandle()
        if handle and handle:FindFirstChild("up") then
            local multiplier = CONFIG.multi
            if DATA.gain > CONFIG.min * multiplier and DATA.gain < CONFIG.max * multiplier then
                DATA.counter2 = DATA.counter2 + 1
                if DATA.counter2 > CONFIG.timeout then
                    CONFIG.speed = 7
                    DATA.counter2 = 0
                end
            elseif DATA.gain < CONFIG.min * multiplier then
                DATA.counter = DATA.counter + 1
                if DATA.counter > CONFIG.cooldown then
                    CONFIG.speed = 30
                    DATA.counter = 0
                end
            end
            
            for i = 1, CONFIG.speed do
                handle.up.RemoteEvent:FireServer()
            end
        end
    end
    
    -- Slow Farm
    if STATE.slowfarm then
        local handle = getSwordHandle()
        if handle and handle:FindFirstChild("up") then
            for i = 1, 5 do
                handle.up.RemoteEvent:FireServer()
            end
        end
    end
    
    -- God Mode
    if STATE.god then
        if char:FindFirstChild("pvp") then
            char.pvp:Destroy()
        end
    end
    
    -- Kill Aura
    if STATE.kaura then
        local handle = getSwordHandle()
        if handle and handle:FindFirstChild("dmg") then
            for _, target in pairs(workspace:GetChildren()) do
                if target:FindFirstChild("Humanoid") and target:FindFirstChild("HumanoidRootPart") then
                    local distance = (rootPart.Position - target.HumanoidRootPart.Position).Magnitude
                    if distance <= CONFIG.killAuraRange and target.Name ~= player.Name and target.Humanoid.Health > 0 then
                        handle.dmg.RemoteEvent:FireServer(target.Humanoid, player.leaderstats.Power.Value)
                    end
                end
            end
        end
    end
    
    -- Permagod System
    for _, target in pairs(DATA.permagods) do
        if target.Character and target.Character:FindFirstChild("Humanoid") then
            local handle = getSwordHandle()
            if handle and handle:FindFirstChild("dmg") then
                handle.dmg.RemoteEvent:FireServer(target.Character.Humanoid, -math.huge)
            end
        end
    end
    
    -- Anti-Kick
    if STATE.antiKick then
        VirtualUser:CaptureController()
        VirtualUser:ClickButton2(Vector2.new())
    end
    
    -- Monitor Display
    if DATA.monitor then
        if DATA.monitor.leaderstats and DATA.monitor.leaderstats:FindFirstChild("Power") then
            output("Monitoring " .. DATA.monitor.Name .. ": " .. DATA.monitor.leaderstats.Power.Value, true)
        end
    end
    
    -- Update status display
    if not DATA.monitor then
        local status = "Ready"
        if STATE.fastfarm then status = status .. " | FF: ON" end
        if STATE.slowfarm then status = status .. " | SF: ON" end
        if STATE.god then status = status .. " | GOD: ON" end
        if STATE.kaura then status = status .. " | KA: ON (" .. math.floor(CONFIG.killAuraRange) .. ")" end
        if STATE.flying then status = status .. " | FLY: ON" end
        
        if player.leaderstats and player.leaderstats:FindFirstChild("Power") then
            status = status .. " | Power: " .. player.leaderstats.Power.Value
        end
        
        if humanoid then
            local healthPercent = math.floor((humanoid.Health / humanoid.MaxHealth) * 100)
            status = status .. " | HP: " .. healthPercent .. "%"
        end
        
        output(status, true)
    end
end)

-- Setup chat handler
setupChatHandler()

-- Startup animation
createTween(UI.mainFrame, {Position = UDim2.new(0, 20, 0.5, -200)}, 0.5, Enum.EasingStyle.Back):Play()

output("Sword Simulator GUI 4.0 loaded! Press ';' for command bar or chat ';help' for commands")
