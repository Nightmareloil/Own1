-- 2take1 Hub - Complete Working Script
-- Fixed and fully functional for all Roblox systems

repeat wait() until game.Players.LocalPlayer

-- Services
local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Variables
local player = Players.LocalPlayer
local load = workspace:WaitForChild("load"):WaitForChild("RemoteEvent")

-- Configuration
local Config = {
    speed = 5,
    range = 10,
    walkSpeed = 16,
    jumpPower = 50,
    flySpeed = 50
}

-- State Management
local State = {
    fastFarm = false,
    slowFarm = false,
    godMode = false,
    killAura = false,
    flying = false,
    noclip = false,
    guiOpen = true,
    focused = false
}

-- Data Storage
local Data = {
    admins = {},
    commandHistory = {},
    historyIndex = 0,
    flyObjects = {}
}

-- Theme
local Theme = {
    background = Color3.fromRGB(25, 25, 25),
    secondary = Color3.fromRGB(35, 35, 35),
    tertiary = Color3.fromRGB(45, 45, 45),
    accent = Color3.fromRGB(88, 101, 242),
    text = Color3.fromRGB(255, 255, 255),
    textDim = Color3.fromRGB(180, 180, 180),
    success = Color3.fromRGB(87, 242, 135),
    danger = Color3.fromRGB(237, 66, 69),
    warning = Color3.fromRGB(255, 193, 7)
}

-- UI Variable
local GUI = {}

-- Utility Functions
local function createTween(object, properties, duration)
    return TweenService:Create(object, TweenInfo.new(duration or 0.3, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), properties)
end

local function notification(text, notificationType)
    notificationType = notificationType or "info"
    local colors = {
        info = Theme.accent,
        success = Theme.success,
        error = Theme.danger,
        warning = Theme.warning
    }
    
    if not GUI.screenGui then return end
    
    local notif = Instance.new("Frame")
    notif.Size = UDim2.new(0, 300, 0, 50)
    notif.Position = UDim2.new(1, -320, 0, 20)
    notif.BackgroundColor3 = Theme.secondary
    notif.BorderSizePixel = 0
    notif.Parent = GUI.screenGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = notif
    
    local stroke = Instance.new("UIStroke")
    stroke.Color = colors[notificationType]
    stroke.Thickness = 2
    stroke.Parent = notif
    
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, -20, 1, 0)
    textLabel.Position = UDim2.new(0, 10, 0, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = text
    textLabel.TextColor3 = Theme.text
    textLabel.TextSize = 12
    textLabel.Font = Enum.Font.Gotham
    textLabel.TextWrapped = true
    textLabel.TextXAlignment = Enum.TextXAlignment.Left
    textLabel.Parent = notif
    
    createTween(notif, {Position = UDim2.new(1, -320, 0, 20)}):Play()
    
    task.spawn(function()
        wait(3)
        createTween(notif, {Position = UDim2.new(1, 20, 0, 20)}):Play()
        wait(0.5)
        notif:Destroy()
    end)
end

local function findPlayer(name)
    if not name or name == "" then return nil end
    name = name:lower()
    
    if name == "me" then return player end
    if name == "all" then return Players:GetPlayers() end
    if name == "others" then
        local others = {}
        for _, p in pairs(Players:GetPlayers()) do
            if p ~= player then
                table.insert(others, p)
            end
        end
        return others
    end
    
    for _, p in pairs(Players:GetPlayers()) do
        if p.Name:lower():find(name) or p.DisplayName:lower():find(name) then
            return p
        end
    end
    
    return nil
end

local function getSwordHandle()
    local sword = player.Character and player.Character:FindFirstChildOfClass("Tool")
    if not sword then
        sword = player.Backpack:FindFirstChildOfClass("Tool")
        if sword and player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid:EquipTool(sword)
        else
            load:FireServer()
            wait(0.5)
            sword = player.Backpack:WaitForChild("sword", 5)
            if sword and player.Character and player.Character:FindFirstChild("Humanoid") then
                player.Character.Humanoid:EquipTool(sword)
            end
        end
    end
    return sword and sword:FindFirstChild("Handle")
end

-- Admin System
local function isAdmin(plr)
    for _, adminName in pairs(Data.admins) do
        if plr.Name:lower() == adminName:lower() then
            return true
        end
    end
    return false
end

local function addAdmin(plr)
    if not isAdmin(plr) then
        table.insert(Data.admins, plr.Name)
        notification("Added " .. plr.Name .. " as admin", "success")
        return true
    end
    return false
end

local function removeAdmin(plr)
    for i, adminName in pairs(Data.admins) do
        if adminName:lower() == plr.Name:lower() then
            table.remove(Data.admins, i)
            notification("Removed " .. plr.Name .. " from admin", "info")
            return true
        end
    end
    return false
end

-- Message System
local function sendSystemMessage(message)
    local success = false
    
    -- Try legacy chat first
    pcall(function()
        local chatEvents = ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents")
        if chatEvents and chatEvents:FindFirstChild("SayMessageRequest") then
            chatEvents.SayMessageRequest:FireServer("[2take1 Hub] " .. message, "All")
            success = true
        end
    end)
    
    -- Try TextChatService
    if not success then
        pcall(function()
            local TextChatService = game:GetService("TextChatService")
            if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then
                local textChannels = TextChatService:FindFirstChild("TextChannels")
                if textChannels and textChannels:FindFirstChild("RBXGeneral") then
                    textChannels.RBXGeneral:DisplaySystemMessage("[2take1 Hub] " .. message)
                    success = true
                end
            end
        end)
    end
    
    -- Fallback notification
    if not success then
        notification(message, "info")
    end
end

local function sendPrivateMessage(targetPlayer, message)
    -- For the script owner (local player)
    if targetPlayer == player then
        notification(message, "info")
        return
    end
    
    -- For other players, we'll try to send them a private system message
    -- Since we can't actually send private messages to other players directly,
    -- we'll create a method that attempts various approaches
    
    -- Method 1: Try to send via chat with their name prefix (closest to private)
    pcall(function()
        local chatEvents = ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents")
        if chatEvents and chatEvents:FindFirstChild("SayMessageRequest") then
            -- Send a message that appears to be directed at them
            chatEvents.SayMessageRequest:FireServer("[PRIVATE TO " .. targetPlayer.Name .. "] " .. message, "All")
        end
    end)
    
    -- Method 2: Try TextChatService private channel approach
    pcall(function()
        local TextChatService = game:GetService("TextChatService")
        if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then
            local textChannels = TextChatService:FindFirstChild("TextChannels")
            if textChannels then
                -- Try to create or find a private channel
                local privateChannel = textChannels:FindFirstChild("PrivateChannel_" .. targetPlayer.Name)
                if not privateChannel then
                    -- If no private channel exists, send as system message with name
                    local rbxGeneral = textChannels:FindFirstChild("RBXGeneral")
                    if rbxGeneral then
                        rbxGeneral:DisplaySystemMessage("[PRIVATE TO " .. targetPlayer.Name .. "] " .. message)
                    end
                else
                    privateChannel:DisplaySystemMessage(message)
                end
            end
        end
    end)
    
    -- Method 3: Fallback - create a GUI message for them (if they have the script)
    pcall(function()
        -- This would only work if the target player also has the script running
        -- We can't directly send GUI messages to other players
        print("[2take1 Hub] Would send private message to " .. targetPlayer.Name .. ": " .. message)
    end)
end

-- Command System
local function executeCommand(command, executor)
    local args = {}
    for word in command:gmatch("%S+") do
        table.insert(args, word:lower())
    end
    
    if #args == 0 then return end
    
    local cmd = args[1]
    local target = args[2] and findPlayer(args[2])
    
    -- Admin management
    if cmd == "admin" and executor == player then
        if target then
            if addAdmin(target) then
                sendSystemMessage(target.Name .. " is now Admin!")
            else
                sendSystemMessage(target.Name .. " is already Admin!")
            end
        else
            notification("Player not found", "error")
        end
        return
    end
    
    if cmd == "unadmin" and executor == player then
        if target then
            if target == player then
                sendSystemMessage("Error: Cannot remove admin from Owner!")
            elseif removeAdmin(target) then
                sendSystemMessage(target.Name .. " is no longer Admin!")
            else
                sendSystemMessage(target.Name .. " is not an Admin!")
            end
        else
            notification("Player not found", "error")
        end
        return
    end
    
    if cmd == "admins" then
        if #Data.admins == 0 then
            notification("No admins currently", "info")
        else
            notification("Admins: " .. table.concat(Data.admins, ", "), "info")
        end
        return
    end
    
    if cmd == "cmds" then
        if executor == player then
            sendPrivateMessage(executor, "OWNER COMMANDS: kill, god, dmg, tp, bring, admin, fly, noclip, speed, reset, ff, sf, godmode, kaura, rejoin")
        elseif isAdmin(executor) then
            sendPrivateMessage(executor, "ADMIN COMMANDS: kill, god, dmg, tp, bring, fly, noclip, speed, reset, ff, sf, godmode, kaura")
        else
            sendPrivateMessage(executor, "USER COMMANDS: fly, noclip, speed, reset, ff, sf, godmode, kaura, rejoin")
        end
        return
    end
    
    -- Protected commands check
    local protectedCommands = {"kill", "god", "tp", "bring", "dmg", "damage"}
    local isProtected = false
    for _, protectedCmd in pairs(protectedCommands) do
        if cmd == protectedCmd then
            isProtected = true
            break
        end
    end
    
    if isProtected and executor ~= player and not isAdmin(executor) then
        notification(executor.Name .. " tried to use admin command", "warning")
        return
    end
    
    -- Execute commands
    if cmd == "kill" then
        local handle = getSwordHandle()
        if not handle or not handle:FindFirstChild("dmg") then
            notification("No sword equipped", "error")
            return
        end
        
        task.spawn(function()
            local targets = {}
            
            if args[2] == "all" then
                for _, plr in pairs(Players:GetPlayers()) do
                    if plr ~= executor then
                        table.insert(targets, plr)
                    end
                end
                table.insert(targets, executor)
            elseif args[2] == "others" then
                for _, plr in pairs(Players:GetPlayers()) do
                    if plr ~= executor then
                        table.insert(targets, plr)
                    end
                end
            elseif target then
                targets = {target}
            else
                notification("Usage: kill [player/all/others]", "error")
                return
            end
            
            for _, plr in pairs(targets) do
                if plr.Character and plr.Character:FindFirstChild("Humanoid") then
                    handle.dmg.RemoteEvent:FireServer(plr.Character.Humanoid, math.huge)
                    wait(0.1)
                end
            end
            
            sendSystemMessage(executor.Name .. " used kill command on " .. #targets .. " players")
        end)
        
    elseif cmd == "god" then
        local handle = getSwordHandle()
        if not handle or not handle:FindFirstChild("dmg") then
            notification("No sword equipped", "error")
            return
        end
        
        task.spawn(function()
            local targets = {}
            
            if args[2] == "all" then
                targets = Players:GetPlayers()
            elseif args[2] == "others" then
                for _, plr in pairs(Players:GetPlayers()) do
                    if plr ~= executor then
                        table.insert(targets, plr)
                    end
                end
            elseif target then
                targets = {target}
            else
                notification("Usage: god [player/all/others]", "error")
                return
            end
            
            for _, plr in pairs(targets) do
                if plr.Character and plr.Character:FindFirstChild("Humanoid") then
                    for i = 1, 5 do
                        handle.dmg.RemoteEvent:FireServer(plr.Character.Humanoid, -math.huge)
                        wait(0.05)
                    end
                    wait(0.1)
                end
            end
            
            sendSystemMessage(executor.Name .. " used god command on " .. #targets .. " players")
        end)
        
    elseif cmd == "dmg" or cmd == "damage" then
        local handle = getSwordHandle()
        if not handle or not handle:FindFirstChild("dmg") then
            notification("No sword equipped", "error")
            return
        end
        
        task.spawn(function()
            local percentage = tonumber(args[3]) or 50
            percentage = math.clamp(percentage, 1, 99)
            
            local targets = {}
            
            if args[2] == "all" then
                for _, plr in pairs(Players:GetPlayers()) do
                    if plr ~= executor then
                        table.insert(targets, plr)
                    end
                end
            elseif args[2] == "others" then
                for _, plr in pairs(Players:GetPlayers()) do
                    if plr ~= executor then
                        table.insert(targets, plr)
                    end
                end
            elseif target then
                targets = {target}
            else
                notification("Usage: dmg [player/all/others] [percentage]", "error")
                return
            end
            
            local power = 1000
            if player.leaderstats and player.leaderstats:FindFirstChild("Power") then
                power = player.leaderstats.Power.Value
            end
            
            local damageAmount = (power * percentage) / 100
            
            for _, plr in pairs(targets) do
                if plr.Character and plr.Character:FindFirstChild("Humanoid") then
                    handle.dmg.RemoteEvent:FireServer(plr.Character.Humanoid, damageAmount)
                    wait(0.1)
                end
            end
            
            sendSystemMessage(executor.Name .. " damaged " .. #targets .. " players " .. percentage .. "%")
        end)
        
    elseif cmd == "tp" or cmd == "goto" then
        if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") and 
           executor.Character and executor.Character:FindFirstChild("HumanoidRootPart") then
            executor.Character.HumanoidRootPart.CFrame = target.Character.HumanoidRootPart.CFrame
            sendSystemMessage(executor.Name .. " teleported to " .. target.Name)
        else
            notification("Cannot teleport to target", "error")
        end
        
    elseif cmd == "bring" then
        if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") and 
           executor.Character and executor.Character:FindFirstChild("HumanoidRootPart") then
            target.Character.HumanoidRootPart.CFrame = executor.Character.HumanoidRootPart.CFrame
            sendSystemMessage(executor.Name .. " brought " .. target.Name)
        else
            notification("Cannot bring target", "error")
        end
        
    elseif cmd == "fly" then
        if not State.flying then
            State.flying = true
            local character = executor.Character
            if character and character:FindFirstChild("HumanoidRootPart") then
                local rootPart = character.HumanoidRootPart
                
                local bodyVelocity = Instance.new("BodyVelocity")
                bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                bodyVelocity.Velocity = Vector3.new(0, 0, 0)
                bodyVelocity.Parent = rootPart
                
                local bodyGyro = Instance.new("BodyGyro")
                bodyGyro.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
                bodyGyro.D = 2000
                bodyGyro.P = 10000
                bodyGyro.Parent = rootPart
                
                Data.flyObjects = {bodyVelocity, bodyGyro}
                
                notification("Fly enabled", "success")
                
                task.spawn(function()
                    while State.flying and character.Parent do
                        local camera = workspace.CurrentCamera
                        local moveVector = Vector3.new(0, 0, 0)
                        
                        if UIS:IsKeyDown(Enum.KeyCode.W) then
                            moveVector = moveVector + camera.CFrame.LookVector
                        end
                        if UIS:IsKeyDown(Enum.KeyCode.S) then
                            moveVector = moveVector - camera.CFrame.LookVector
                        end
                        if UIS:IsKeyDown(Enum.KeyCode.A) then
                            moveVector = moveVector - camera.CFrame.RightVector
                        end
                        if UIS:IsKeyDown(Enum.KeyCode.D) then
                            moveVector = moveVector + camera.CFrame.RightVector
                        end
                        if UIS:IsKeyDown(Enum.KeyCode.Space) then
                            moveVector = moveVector + Vector3.new(0, 1, 0)
                        end
                        if UIS:IsKeyDown(Enum.KeyCode.LeftShift) then
                            moveVector = moveVector - Vector3.new(0, 1, 0)
                        end
                        
                        if bodyVelocity and bodyVelocity.Parent then
                            bodyVelocity.Velocity = moveVector * Config.flySpeed
                        end
                        if bodyGyro and bodyGyro.Parent then
                            bodyGyro.CFrame = camera.CFrame
                        end
                        
                        wait()
                    end
                end)
            end
        end
        
    elseif cmd == "unfly" then
        State.flying = false
        for _, obj in pairs(Data.flyObjects) do
            if obj and obj.Parent then
                obj:Destroy()
            end
        end
        Data.flyObjects = {}
        notification("Fly disabled", "success")
        
    elseif cmd == "noclip" then
        State.noclip = true
        notification("Noclip enabled", "success")
        
        task.spawn(function()
            while State.noclip do
                if executor.Character then
                    for _, part in pairs(executor.Character:GetDescendants()) do
                        if part:IsA("BasePart") and part.CanCollide then
                            part.CanCollide = false
                        end
                    end
                end
                wait(0.1)
            end
        end)
        
    elseif cmd == "clip" then
        State.noclip = false
        notification("Noclip disabled", "success")
        
    elseif cmd == "speed" or cmd == "ws" then
        local speed = tonumber(args[2]) or 16
        if executor.Character and executor.Character:FindFirstChild("Humanoid") then
            executor.Character.Humanoid.WalkSpeed = speed
            notification("Walk speed set to " .. speed, "success")
        end
        
    elseif cmd == "jp" or cmd == "jumppower" then
        local power = tonumber(args[2]) or 50
        if executor.Character and executor.Character:FindFirstChild("Humanoid") then
            executor.Character.Humanoid.JumpPower = power
            notification("Jump power set to " .. power, "success")
        end
        
    elseif cmd == "reset" then
        load:FireServer()
        notification("Character reset", "success")
        
    elseif cmd == "ff" or cmd == "fastfarm" then
        State.fastFarm = not State.fastFarm
        notification("Fast farm " .. (State.fastFarm and "enabled" or "disabled"), State.fastFarm and "success" or "info")
        
    elseif cmd == "sf" or cmd == "slowfarm" then
        State.slowFarm = not State.slowFarm
        notification("Slow farm " .. (State.slowFarm and "enabled" or "disabled"), State.slowFarm and "success" or "info")
        
    elseif cmd == "godmode" then
        State.godMode = not State.godMode
        notification("God mode " .. (State.godMode and "enabled" or "disabled"), State.godMode and "success" or "info")
        
    elseif cmd == "kaura" or cmd == "killaura" then
        State.killAura = not State.killAura
        notification("Kill aura " .. (State.killAura and "enabled" or "disabled"), State.killAura and "success" or "info")
        
    elseif cmd == "rejoin" then
        notification("Rejoining server...", "info")
        wait(1)
        game:GetService("TeleportService"):Teleport(game.PlaceId, executor)
        
    else
        notification("Unknown command: " .. cmd, "error")
    end
end

-- Chat Handler
local function setupChatHandler()
    -- Handle local player chat
    player.Chatted:Connect(function(message)
        if message:sub(1, 1) == ";" then
            local command = message:sub(2):gsub("^%s*", ""):gsub("%s*$", "")
            if command ~= "" then
                executeCommand(command, player)
            end
        end
    end)
    
    -- Handle other players' chat
    local function connectPlayer(plr)
        if plr ~= player then
            plr.Chatted:Connect(function(message)
                if message:sub(1, 1) == ";" then
                    local command = message:sub(2):gsub("^%s*", ""):gsub("%s*$", "")
                    if command ~= "" then
                        executeCommand(command, plr)
                    end
                end
            end)
        end
    end
    
    -- Connect existing players
    for _, plr in pairs(Players:GetPlayers()) do
        connectPlayer(plr)
    end
    
    -- Connect new players
    Players.PlayerAdded:Connect(connectPlayer)
end

-- Create GUI
local function createGUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "2take1Hub"
    screenGui.ResetOnSpawn = false
    
    local success, _ = pcall(function()
        screenGui.Parent = game:GetService("CoreGui")
    end)
    if not success then
        screenGui.Parent = player:WaitForChild("PlayerGui")
    end
    
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 400, 0, 500)
    mainFrame.Position = UDim2.new(0.5, -200, 0.5, -250)
    mainFrame.BackgroundColor3 = Theme.background
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui
    
    local mainCorner = Instance.new("UICorner")
    mainCorner.CornerRadius = UDim.new(0, 12)
    mainCorner.Parent = mainFrame
    
    local header = Instance.new("Frame")
    header.Name = "Header"
    header.Size = UDim2.new(1, 0, 0, 40)
    header.BackgroundColor3 = Theme.secondary
    header.BorderSizePixel = 0
    header.Parent = mainFrame
    
    local headerCorner = Instance.new("UICorner")
    headerCorner.CornerRadius = UDim.new(0, 12)
    headerCorner.Parent = header
    
    local headerFix = Instance.new("Frame")
    headerFix.Size = UDim2.new(1, 0, 0, 12)
    headerFix.Position = UDim2.new(0, 0, 1, -12)
    headerFix.BackgroundColor3 = Theme.secondary
    headerFix.BorderSizePixel = 0
    headerFix.Parent = header
    
    local title = Instance.new("TextLabel")
    title.Name = "Title"
    title.Size = UDim2.new(1, -50, 1, 0)
    title.Position = UDim2.new(0, 15, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = "2take1 Hub"
    title.TextColor3 = Theme.text
    title.TextSize = 16
    title.Font = Enum.Font.GothamBold
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = header
    
    local closeButton = Instance.new("TextButton")
    closeButton.Name = "CloseButton"
    closeButton.Size = UDim2.new(0, 30, 0, 30)
    closeButton.Position = UDim2.new(1, -40, 0, 5)
    closeButton.BackgroundColor3 = Theme.danger
    closeButton.Text = "×"
    closeButton.TextColor3 = Theme.text
    closeButton.TextSize = 18
    closeButton.Font = Enum.Font.GothamBold
    closeButton.Parent = header
    
    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(0, 6)
    closeCorner.Parent = closeButton
    
    local contentFrame = Instance.new("ScrollingFrame")
    contentFrame.Name = "ContentFrame"
    contentFrame.Size = UDim2.new(1, -20, 1, -60)
    contentFrame.Position = UDim2.new(0, 10, 0, 50)
    contentFrame.BackgroundColor3 = Theme.secondary
    contentFrame.BorderSizePixel = 0
    contentFrame.ScrollBarThickness = 6
    contentFrame.ScrollBarImageColor3 = Theme.accent
    contentFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
    contentFrame.Parent = mainFrame
    
    local contentCorner = Instance.new("UICorner")
    contentCorner.CornerRadius = UDim.new(0, 10)
    contentCorner.Parent = contentFrame
    
    local listLayout = Instance.new("UIListLayout")
    listLayout.SortOrder = Enum.SortOrder.LayoutOrder
    listLayout.Padding = UDim.new(0, 10)
    listLayout.Parent = contentFrame
    
    local padding = Instance.new("UIPadding")
    padding.PaddingTop = UDim.new(0, 10)
    padding.PaddingLeft = UDim.new(0, 10)
    padding.PaddingRight = UDim.new(0, 10)
    padding.PaddingBottom = UDim.new(0, 10)
    padding.Parent = contentFrame
    
    local commandBar = Instance.new("Frame")
    commandBar.Name = "CommandBar"
    commandBar.Size = UDim2.new(0, 400, 0, 45)
    commandBar.Position = UDim2.new(0.5, -200, 0, -60)
    commandBar.BackgroundColor3 = Theme.secondary
    commandBar.BorderSizePixel = 0
    commandBar.Visible = false
    commandBar.Parent = screenGui
    
    local cmdCorner = Instance.new("UICorner")
    cmdCorner.CornerRadius = UDim.new(0, 10)
    cmdCorner.Parent = commandBar
    
    local cmdStroke = Instance.new("UIStroke")
    cmdStroke.Color = Theme.accent
    cmdStroke.Thickness = 2
    cmdStroke.Parent = commandBar
    
    local cmdPrefix = Instance.new("TextLabel")
    cmdPrefix.Size = UDim2.new(0, 40, 1, 0)
    cmdPrefix.BackgroundTransparency = 1
    cmdPrefix.Text = "2t1>"
    cmdPrefix.TextColor3 = Theme.accent
    cmdPrefix.TextSize = 14
    cmdPrefix.Font = Enum.Font.GothamBold
    cmdPrefix.Parent = commandBar
    
    local commandInput = Instance.new("TextBox")
    commandInput.Name = "CommandInput"
    commandInput.Size = UDim2.new(1, -50, 1, -10)
    commandInput.Position = UDim2.new(0, 45, 0, 5)
    commandInput.BackgroundTransparency = 1
    commandInput.Text = ""
    commandInput.PlaceholderText = "Enter command..."
    commandInput.PlaceholderColor3 = Theme.textDim
    commandInput.TextColor3 = Theme.text
    commandInput.TextSize = 14
    commandInput.Font = Enum.Font.Gotham
    commandInput.TextXAlignment = Enum.TextXAlignment.Left
    commandInput.ClearTextOnFocus = false
    commandInput.Parent = commandBar
    
    return {
        screenGui = screenGui,
        mainFrame = mainFrame,
        header = header,
        closeButton = closeButton,
        contentFrame = contentFrame,
        commandBar = commandBar,
        commandInput = commandInput
    }
end

-- Create UI Elements
local function createToggle(text, parent, callback)
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Size = UDim2.new(1, 0, 0, 40)
    toggleFrame.BackgroundColor3 = Theme.tertiary
    toggleFrame.BorderSizePixel = 0
    toggleFrame.Parent = parent
    
    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 8)
    toggleCorner.Parent = toggleFrame
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -70, 1, 0)
    label.Position = UDim2.new(0, 15, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = Theme.text
    label.TextSize = 14
    label.Font = Enum.Font.Gotham
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = toggleFrame
    
    local toggleButton = Instance.new("TextButton")
    toggleButton.Size = UDim2.new(0, 50, 0, 25)
    toggleButton.Position = UDim2.new(1, -60, 0.5, -12.5)
    toggleButton.BackgroundColor3 = Theme.background
    toggleButton.Text = ""
    toggleButton.Parent = toggleFrame
    
    local toggleBtnCorner = Instance.new("UICorner")
    toggleBtnCorner.CornerRadius = UDim.new(0, 12)
    toggleBtnCorner.Parent = toggleButton
    
    local indicator = Instance.new("Frame")
    indicator.Size = UDim2.new(0, 20, 0, 20)
    indicator.Position = UDim2.new(0, 2.5, 0, 2.5)
    indicator.BackgroundColor3 = Theme.text
    indicator.BorderSizePixel = 0
    indicator.Parent = toggleButton
    
    local indicatorCorner = Instance.new("UICorner")
    indicatorCorner.CornerRadius = UDim.new(0, 10)
    indicatorCorner.Parent = indicator
    
    local toggled = false
    
    toggleButton.MouseButton1Click:Connect(function()
        toggled = not toggled
        
        local newButtonColor = toggled and Theme.success or Theme.background
        local newIndicatorPos = toggled and UDim2.new(1, -22.5, 0, 2.5) or UDim2.new(0, 2.5, 0, 2.5)
        
        createTween(toggleButton, {BackgroundColor3 = newButtonColor}):Play()
        createTween(indicator, {Position = newIndicatorPos}):Play()
        
        callback(toggled)
    end)
    
    return toggleFrame
end

local function createButton(text, parent, callback)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, 0, 0, 40)
    button.BackgroundColor3 = Theme.accent
    button.Text = text
    button.TextColor3 = Theme.text
    button.TextSize = 14
    button.Font = Enum.Font.GothamBold
    button.BorderSizePixel = 0
    button.Parent = parent
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 8)
    buttonCorner.Parent = button
    
    button.MouseButton1Click:Connect(callback)
    
    button.MouseEnter:Connect(function()
        createTween(button, {BackgroundColor3 = Theme.accent:lerp(Color3.new(1, 1, 1), 0.1)}):Play()
    end)
    
    button.MouseLeave:Connect(function()
        createTween(button, {BackgroundColor3 = Theme.accent}):Play()
    end)
    
    return button
end

-- Initialize GUI
GUI = createGUI()

-- Create UI Elements
createToggle("Fast Farm", GUI.contentFrame, function(enabled)
    State.fastFarm = enabled
    executeCommand(enabled and "ff" or "ff", player)
end)

createToggle("Slow Farm", GUI.contentFrame, function(enabled)
    State.slowFarm = enabled
    executeCommand(enabled and "sf" or "sf", player)
end)

createToggle("God Mode", GUI.contentFrame, function(enabled)
    State.godMode = enabled
    executeCommand(enabled and "godmode" or "godmode", player)
end)

createToggle("Kill Aura", GUI.contentFrame, function(enabled)
    State.killAura = enabled
    executeCommand(enabled and "kaura" or "kaura", player)
end)

createToggle("Fly", GUI.contentFrame, function(enabled)
    if enabled then
        executeCommand("fly", player)
    else
        executeCommand("unfly", player)
    end
end)

createToggle("Noclip", GUI.contentFrame, function(enabled)
    if enabled then
        executeCommand("noclip", player)
    else
        executeCommand("clip", player)
    end
end)

-- Action Buttons
createButton("Kill All Players", GUI.contentFrame, function()
    executeCommand("kill all", player)
end)

createButton("God All Players", GUI.contentFrame, function()
    executeCommand("god all", player)
end)

createButton("Damage All 50%", GUI.contentFrame, function()
    executeCommand("dmg all 50", player)
end)

createButton("Damage All 25%", GUI.contentFrame, function()
    executeCommand("dmg all 25", player)
end)

createButton("Reset Character", GUI.contentFrame, function()
    executeCommand("reset", player)
end)

createButton("Rejoin Server", GUI.contentFrame, function()
    executeCommand("rejoin", player)
end)

-- Update content size
local function updateContentSize()
    GUI.contentFrame.CanvasSize = UDim2.new(0, 0, 0, GUI.contentFrame.UIListLayout.AbsoluteContentSize.Y + 20)
end

updateContentSize()

-- GUI Events
GUI.closeButton.MouseButton1Click:Connect(function()
    createTween(GUI.mainFrame, {Position = UDim2.new(0.5, -200, 0, -600)}, 0.5):Play()
    wait(0.5)
    GUI.screenGui:Destroy()
    State.guiOpen = false
end)

-- Dragging functionality
local dragging = false
local dragStart = nil
local startPos = nil

GUI.header.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = GUI.mainFrame.Position
    end
end)

UIS.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        GUI.mainFrame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)

UIS.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

-- Command Bar functionality
UIS.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == Enum.KeyCode.Semicolon and State.guiOpen then
        GUI.commandBar.Visible = true
        createTween(GUI.commandBar, {Position = UDim2.new(0.5, -200, 0, 100)}):Play()
        wait(0.3)
        GUI.commandInput:CaptureFocus()
    end
end)

GUI.commandInput.Focused:Connect(function()
    State.focused = true
end)

GUI.commandInput.FocusLost:Connect(function(enterPressed)
    State.focused = false
    
    if enterPressed and GUI.commandInput.Text ~= "" then
        local command = GUI.commandInput.Text
        table.insert(Data.commandHistory, command)
        Data.historyIndex = #Data.commandHistory + 1
        
        executeCommand(command, player)
        GUI.commandInput.Text = ""
    end
    
    createTween(GUI.commandBar, {Position = UDim2.new(0.5, -200, 0, -60)}):Play()
    wait(0.3)
    GUI.commandBar.Visible = false
end)

-- Hotkeys
local hotkeys = {
    [Enum.KeyCode.F1] = function() executeCommand("ff", player) end,
    [Enum.KeyCode.F2] = function() executeCommand("sf", player) end,
    [Enum.KeyCode.F3] = function() executeCommand("godmode", player) end,
    [Enum.KeyCode.F4] = function() executeCommand("kaura", player) end,
    [Enum.KeyCode.F5] = function() executeCommand("fly", player) end,
    [Enum.KeyCode.F6] = function() executeCommand("noclip", player) end,
    [Enum.KeyCode.Delete] = function() executeCommand("kill all", player) end,
    [Enum.KeyCode.Insert] = function() executeCommand("god all", player) end,
}

UIS.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed or State.focused then return end
    
    if hotkeys[input.KeyCode] then
        hotkeys[input.KeyCode]()
    end
end)

-- Main Loop
local frameCount = 0
RunService.Heartbeat:Connect(function()
    frameCount = frameCount + 1
    
    if not State.guiOpen or not player.Character then return end
    
    local character = player.Character
    local humanoid = character:FindFirstChild("Humanoid")
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    
    if not humanoid or not rootPart then return end
    
    -- Fast Farm
    if State.fastFarm then
        local handle = getSwordHandle()
        if handle and handle:FindFirstChild("up") then
            for i = 1, Config.speed do
                handle.up.RemoteEvent:FireServer()
            end
        end
    end
    
    -- Slow Farm
    if State.slowFarm then
        local handle = getSwordHandle()
        if handle and handle:FindFirstChild("up") then
            for i = 1, 3 do
                handle.up.RemoteEvent:FireServer()
            end
        end
    end
    
    -- God Mode
    if State.godMode then
        local pvp = character:FindFirstChild("pvp")
        if pvp then
            pvp:Destroy()
        end
    end
    
    -- Kill Aura
    if State.killAura and frameCount % 15 == 0 then
        local handle = getSwordHandle()
        if handle and handle:FindFirstChild("dmg") then
            local power = 1000
            if player.leaderstats and player.leaderstats:FindFirstChild("Power") then
                power = player.leaderstats.Power.Value
            end
            
            for _, target in pairs(workspace:GetChildren()) do
                if target:FindFirstChild("Humanoid") and target:FindFirstChild("HumanoidRootPart") and target.Name ~= player.Name then
                    local targetHumanoid = target.Humanoid
                    local targetRoot = target.HumanoidRootPart
                    
                    if targetHumanoid.Health > 0 then
                        local distance = (rootPart.Position - targetRoot.Position).Magnitude
                        if distance <= Config.range then
                            handle.dmg.RemoteEvent:FireServer(targetHumanoid, power)
                        end
                    end
                end
            end
        end
    end
end)

-- Character respawn handling
player.CharacterAdded:Connect(function(character)
    wait(1)
    
    if character:FindFirstChild("Humanoid") then
        character.Humanoid.WalkSpeed = Config.walkSpeed
        character.Humanoid.JumpPower = Config.jumpPower
    end
    
    if State.godMode then
        local pvp = character:FindFirstChild("pvp")
        if pvp then
            pvp:Destroy()
        end
    end
    
    if State.noclip then
        executeCommand("noclip", player)
    end
end)

-- Admin cleanup when players leave
Players.PlayerRemoving:Connect(function(plr)
    for i, adminName in pairs(Data.admins) do
        if adminName:lower() == plr.Name:lower() then
            table.remove(Data.admins, i)
            notification(plr.Name .. " (admin) left the server", "info")
            break
        end
    end
end)

-- Setup chat handler
setupChatHandler()

-- Startup
task.spawn(function()
    createTween(GUI.mainFrame, {Position = UDim2.new(0.5, -200, 0.5, -250)}, 0.8):Play()
    
    wait(1)
    notification("2take1 Hub loaded successfully!", "success")
    
    wait(1.5)
    notification("Press ';' to open command bar | F1-F6 for quick toggles", "info")
    
    wait(1.5)
    notification("Type ';cmds' for all commands | ';admin [player]' to give admin", "info")
end)
