-- 2take1 Hub - Optimized Sword Simulator GUI
-- Ultra-compact version with full functionality

repeat wait() until game.Players.LocalPlayer

local Players, UIS, TS, RS, VU, CoreGui = game:GetService("Players"), game:GetService("UserInputService"), game:GetService("TweenService"), game:GetService("RunService"), game:GetService("VirtualUser"), game:GetService("CoreGui")
local player, mouse = Players.LocalPlayer, Players.LocalPlayer:GetMouse()
local load = workspace:WaitForChild("load"):WaitForChild("RemoteEvent")

-- Compact Configuration
local cfg = {multi = 2, min = 5500, max = 9000, speed = 5, cooldown = 100, range = 10, ws = 16, jp = 50, fs = 50}
local state = {focused = false, open = true, ff = false, sf = false, god = false, ka = false, ak = false, fly = false, nc = false, esp = false, min = false}
local data = {admins = {}, pw = 0, lpw = 0, gain = 0, counter = 0, flyObjs = {}, espObjs = {}, cmdHistory = {}, historyIdx = 0}

-- Theme
local theme = {
    bg = Color3.fromRGB(25, 25, 25), sec = Color3.fromRGB(35, 35, 35), ter = Color3.fromRGB(45, 45, 45),
    accent = Color3.fromRGB(88, 101, 242), text = Color3.fromRGB(255, 255, 255), dim = Color3.fromRGB(180, 180, 180),
    success = Color3.fromRGB(87, 242, 135), danger = Color3.fromRGB(237, 66, 69), warning = Color3.fromRGB(255, 193, 7)
}

-- Utility Functions
local function tween(obj, props, time) return TS:Create(obj, TweenInfo.new(time or 0.3, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), props) end
local function notify(text, type)
    local colors = {info = theme.accent, success = theme.success, error = theme.danger, warning = theme.warning}
    local notif = Instance.new("Frame")
    notif.Size, notif.Position = UDim2.new(0, 250, 0, 50), UDim2.new(0.5, -125, 0, -60)
    notif.BackgroundColor3, notif.BorderSizePixel = theme.sec, 0
    notif.Parent = UI.screenGui
    
    local corner = Instance.new("UICorner") corner.CornerRadius = UDim.new(0, 8) corner.Parent = notif
    local stroke = Instance.new("UIStroke") stroke.Color, stroke.Thickness = colors[type or "info"], 2 stroke.Parent = notif
    
    local label = Instance.new("TextLabel")
    label.Size, label.Position = UDim2.new(1, -20, 1, 0), UDim2.new(0, 10, 0, 0)
    label.BackgroundTransparency, label.Text = 1, text
    label.TextColor3, label.TextSize, label.Font = theme.text, 12, Enum.Font.Gotham
    label.TextWrapped, label.TextXAlignment = true, Enum.TextXAlignment.Left
    label.Parent = notif
    
    tween(notif, {Position = UDim2.new(0.5, -125, 0, 10)}):Play()
    task.spawn(function() wait(2.5) tween(notif, {Position = UDim2.new(0.5, -125, 0, -60)}):Play() wait(0.3) notif:Destroy() end)
end

local function findPlayer(name)
    if not name or name == "" then return nil end
    name = name:lower()
    if name == "me" then return player end
    if name == "all" then return Players:GetPlayers() end
    if name == "others" then
        local others = {}
        for _, p in pairs(Players:GetPlayers()) do if p ~= player then table.insert(others, p) end end
        return others
    end
    for _, p in pairs(Players:GetPlayers()) do
        if p.Name:lower():sub(1, #name) == name or p.DisplayName:lower():sub(1, #name) == name then return p end
    end
    return nil
end

local function getSword()
    local sword = player.Backpack:FindFirstChildOfClass("Tool") or (player.Character and player.Character:FindFirstChildOfClass("Tool"))
    if not sword then load:FireServer() wait(0.1) sword = player.Backpack:WaitForChild("sword", 3) end
    return sword and sword:FindFirstChild("Handle")
end

-- Admin System
local function isAdmin(plr) 
    for _, name in pairs(data.admins) do if plr.Name:lower() == name:lower() then return true end end 
    return false 
end

-- Enhanced Admin System with better player management
local function addAdmin(plr)
    if not isAdmin(plr) then
        table.insert(data.admins, plr.Name)
        notify("Added " .. plr.Name .. " as admin", "success")
        
        -- Notify the new admin if they're online
        if plr and plr.Parent then
            task.spawn(function()
                wait(1)
                if plr.Parent then
                    pcall(function()
                        game:GetService("StarterGui"):SetCore("SendNotification", {
                            Title = "2take1 Hub";
                            Text = "You are now an admin! Use ';' commands.";
                            Duration = 5;
                        })
                    end)
        
    elseif command == "dmg" or command == "damage" then
        local handle = getSword()
        if not handle or not handle:FindFirstChild("dmg") then notify("No sword equipped", "error") return end
        
        task.spawn(function()
            local percentage = tonumber(args[3]) or 50 -- Default to 50% if no percentage specified
            percentage = math.clamp(percentage, 1, 99) -- Clamp between 1-99% (can't do 100% damage)
            
            local targets = {}
            
            if args[2] == "all" then
                for _, plr in pairs(Players:GetPlayers()) do
                    if plr ~= executor then
                        table.insert(targets, plr)
                    end
                end
            elseif args[2] == "others" then
                for _, plr in pairs(Players:GetPlayers()) do
                    if plr ~= executor then
                        table.insert(targets, plr)
                    end
                end
            elseif target then
                targets = type(target) == "table" and target or {target}
            else
                notify("Usage: dmg [player/all/others] [percentage]", "error")
                return
            end
            
            local damaged = 0
            for _, plr in pairs(targets) do
                if plr.Character and plr.Character:FindFirstChild("Humanoid") then
                    local humanoid = plr.Character.Humanoid
                    local maxHealth = humanoid.MaxHealth
                    
                    -- Calculate damage amount based on percentage of max health
                    local damageAmount = (maxHealth * percentage) / 100
                    
                    -- Use the sword's damage system to deal specific damage
                    handle.dmg.RemoteEvent:FireServer(humanoid, damageAmount)
                    damaged = damaged + 1
                    wait(0.1) -- Small delay between players
                end
            end
            
            if damaged > 0 then
                notify("Damaged " .. damaged .. " players (" .. percentage .. "%)", "success")
            else
                notify("No valid targets found", "warning")
            end
        end)
                end
            end)
        end
        return true
    end
    return false
end

local function removeAdmin(plr)
    for i, name in pairs(data.admins) do
        if name:lower() == plr.Name:lower() then
            table.remove(data.admins, i)
            notify("Removed " .. plr.Name .. " from admin", "info")
            
            -- Notify the removed admin if they're online
            if plr and plr.Parent then
                task.spawn(function()
                    wait(1)
                    if plr.Parent then
                        pcall(function()
                            game:GetService("StarterGui"):SetCore("SendNotification", {
                                Title = "2take1 Hub";
                                Text = "Your admin access has been revoked.";
                                Duration = 3;
                            })
                        end)
                    end
                end)
            end
            return true
        end
    end
    return false
end

-- Auto-remove admins when they leave
Players.PlayerRemoving:Connect(function(plr)
    for i, name in pairs(data.admins) do
        if name:lower() == plr.Name:lower() then
            table.remove(data.admins, i)
            notify(plr.Name .. " (admin) left the game", "info")
            break
        end
    end
end)

-- Command Handler
local function runCommand(cmd, executor)
    local args = cmd:lower():split(" ")
    local command, target = args[1], findPlayer(args[2])
    
    -- Admin Management (Owner Only)
    if command == "admin" and executor == player then
        if target then 
            if addAdmin(target) then
                -- Double notification for clarity
                wait(0.5)
                notify(target.Name .. " can now use admin commands", "success")
            else 
                notify(target.Name .. " is already an admin", "warning")
            end
        else 
            notify("Player not found. Usage: admin [playername]", "error") 
        end
        return
    elseif command == "unadmin" and executor == player then
        if target then 
            if removeAdmin(target) then
                wait(0.5)
                notify(target.Name .. " admin access revoked", "success")
            else
                notify(target.Name .. " is not an admin", "warning")
            end
        else 
            notify("Player not found. Usage: unadmin [playername]", "error") 
        end
        return
    elseif command == "admins" then
        notify(#data.admins == 0 and "No admins" or "Admins: " .. table.concat(data.admins, ", "), "info")
        return
    end
    
    -- Check admin permissions for protected commands
    local protectedCmds = {kill = true, god = true, bring = true, tp = true, dmg = true, damage = true}
    if protectedCmds[command] and executor ~= player and not isAdmin(executor) then
        if executor == player then
            notify("You don't have permission for this command", "error")
        else
            notify(executor.Name .. " tried to use admin command", "warning")
        end
        return
    end
    
    -- Combat Commands
    if command == "kill" then
        local handle = getSword()
        if not handle or not handle:FindFirstChild("dmg") then notify("No sword equipped", "error") return end
        
        task.spawn(function()
            local targets = {}
            
            if args[2] == "all" then
                -- Kill others first, then self to prevent script bugs
                for _, plr in pairs(Players:GetPlayers()) do
                    if plr ~= executor then
                        table.insert(targets, plr)
                    end
                end
                -- Add executor last
                table.insert(targets, executor)
            elseif args[2] == "others" then
                for _, plr in pairs(Players:GetPlayers()) do
                    if plr ~= executor then
                        table.insert(targets, plr)
                    end
                end
            elseif target then
                targets = type(target) == "table" and target or {target}
            end
            
            local killed = 0
            for _, plr in pairs(targets) do
                if plr.Character and plr.Character:FindFirstChild("Humanoid") then
                    handle.dmg.RemoteEvent:FireServer(plr.Character.Humanoid, math.huge)
                    killed = killed + 1
                    wait(0.15) -- Slightly longer delay to prevent issues
                end
            end
            
            if killed > 0 then
                notify("Killed " .. killed .. " players", "success")
            else
                notify("No valid targets found", "warning")
            end
        end)
        
    elseif command == "god" then
        local handle = getSword()
        if not handle or not handle:FindFirstChild("dmg") then notify("No sword equipped", "error") return end
        
        task.spawn(function()
            local targets = {}
            
            if args[2] == "all" then
                targets = Players:GetPlayers()
            elseif args[2] == "others" then
                for _, plr in pairs(Players:GetPlayers()) do
                    if plr ~= executor then
                        table.insert(targets, plr)
                    end
                end
            elseif target then
                targets = type(target) == "table" and target or {target}
            end
            
            local godded = 0
            for _, plr in pairs(targets) do
                if plr.Character and plr.Character:FindFirstChild("Humanoid") then
                    for i = 1, 5 do
                        handle.dmg.RemoteEvent:FireServer(plr.Character.Humanoid, -math.huge)
                        wait(0.03) -- Slightly longer delay
                    end
                    godded = godded + 1
                    wait(0.1) -- Delay between players
                end
            end
            
            if godded > 0 then
                notify("Godded " .. godded .. " players", "success")
            else
                notify("No valid targets found", "warning")
            end
        end)
        
    -- Movement Commands
    elseif command == "tp" or command == "goto" then
        if target and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
            player.Character.HumanoidRootPart.CFrame = target.Character.HumanoidRootPart.CFrame
            notify("Teleported to " .. target.Name, "success")
        else
            notify("Cannot teleport", "error")
        end
        
    elseif command == "bring" then
        if target and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
            target.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame
            notify("Brought " .. target.Name, "success")
        else
            notify("Cannot bring", "error")
        end
        
    elseif command == "fly" then
        if not state.fly then
            state.fly = true
            local char = player.Character
            if char and char:FindFirstChild("HumanoidRootPart") then
                local root = char.HumanoidRootPart
                local bv = Instance.new("BodyVelocity") bv.MaxForce, bv.Velocity = Vector3.new(4000, 4000, 4000), Vector3.new(0, 0, 0) bv.Parent = root
                local bg = Instance.new("BodyGyro") bg.MaxTorque, bg.D, bg.P = Vector3.new(4000, 4000, 4000), 500, 5000 bg.Parent = root
                data.flyObjs = {bv, bg}
                notify("Fly enabled", "success")
                
                task.spawn(function()
                    while state.fly do
                        if not char or not char:FindFirstChild("HumanoidRootPart") or not bv.Parent then state.fly = false break end
                        local cam = workspace.CurrentCamera
                        local move = Vector3.new(0, 0, 0)
                        if UIS:IsKeyDown(Enum.KeyCode.W) then move = move + cam.CFrame.LookVector end
                        if UIS:IsKeyDown(Enum.KeyCode.S) then move = move - cam.CFrame.LookVector end
                        if UIS:IsKeyDown(Enum.KeyCode.A) then move = move - cam.CFrame.RightVector end
                        if UIS:IsKeyDown(Enum.KeyCode.D) then move = move + cam.CFrame.RightVector end
                        if UIS:IsKeyDown(Enum.KeyCode.Space) then move = move + Vector3.new(0, 1, 0) end
                        if UIS:IsKeyDown(Enum.KeyCode.LeftShift) then move = move - Vector3.new(0, 1, 0) end
                        bv.Velocity, bg.CFrame = move * cfg.fs, cam.CFrame
                        wait()
                    end
                end)
            end
        end
        
    elseif command == "unfly" then
        state.fly = false
        for _, obj in pairs(data.flyObjs) do if obj and obj.Parent then obj:Destroy() end end
        data.flyObjs = {}
        notify("Fly disabled", "success")
        
    elseif command == "noclip" then
        state.nc = true
        notify("Noclip enabled", "success")
        task.spawn(function()
            while state.nc do
                if player.Character then
                    for _, part in pairs(player.Character:GetDescendants()) do
                        if part:IsA("BasePart") and part.CanCollide then part.CanCollide = false end
                    end
                end
                wait(0.1)
            end
        end)
        
    elseif command == "clip" then
        state.nc = false
        notify("Noclip disabled", "success")
        
    -- Character Commands
    elseif command == "speed" or command == "ws" then
        local speed = tonumber(args[2]) or 16
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid.WalkSpeed = speed
            cfg.ws = speed
            notify("Speed set to " .. speed, "success")
        end
        
    elseif command == "jumppower" or command == "jp" then
        local power = tonumber(args[2]) or 50
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid.JumpPower = power
            cfg.jp = power
            notify("Jump power set to " .. power, "success")
        end
        
    elseif command == "reset" then
        load:FireServer()
        notify("Character reset", "success")
        
    -- Farm Commands
    elseif command == "ff" or command == "fastfarm" then
        state.ff = not state.ff
        notify("Fast farm " .. (state.ff and "enabled" or "disabled"), state.ff and "success" or "info")
        
    elseif command == "sf" or command == "slowfarm" then
        state.sf = not state.sf
        notify("Slow farm " .. (state.sf and "enabled" or "disabled"), state.sf and "success" or "info")
        
    elseif command == "godmode" then
        state.god = not state.god
        notify("God mode " .. (state.god and "enabled" or "disabled"), state.god and "success" or "info")
        
    elseif command == "kaura" or command == "killaura" then
        state.ka = not state.ka
        notify("Kill aura " .. (state.ka and "enabled" or "disabled"), state.ka and "success" or "info")
        
    -- Utility Commands
    elseif command == "rejoin" then
        notify("Rejoining...", "info")
        wait(1)
        game:GetService("TeleportService"):Teleport(game.PlaceId, player)
        
    elseif command == "cmds" then
        if executor == player or isAdmin(executor) then
            notify("Admin Commands: kill, god, tp, bring, dmg, broadcast, kick, freeze, invisible, admin, adminlist", "info")
            wait(0.5)
            notify("User Commands: fly, noclip, speed, reset, ff, sf, godmode, kaura, rejoin", "info")
        else
            notify("Available Commands: ff, sf, godmode, kaura, speed, reset, fly, noclip, rejoin", "info")
        end
        
    else
        notify("Unknown command: " .. command, "error")
    end
end

-- UI Creation
local function createUI()
    local sg = Instance.new("ScreenGui")
    sg.Name, sg.ResetOnSpawn = "2take1Hub", false
    pcall(function() sg.Parent = CoreGui end)
    if not sg.Parent then sg.Parent = player:WaitForChild("PlayerGui") end
    
    local main = Instance.new("Frame")
    main.Size, main.Position = UDim2.new(0, 400, 0, 450), UDim2.new(0.5, -200, 0.5, -225)
    main.BackgroundColor3, main.BorderSizePixel = theme.bg, 0
    main.Parent = sg
    
    local corner = Instance.new("UICorner") corner.CornerRadius = UDim.new(0, 12) corner.Parent = main
    
    -- Header
    local header = Instance.new("Frame")
    header.Size, header.BackgroundColor3 = UDim2.new(1, 0, 0, 40), theme.sec
    header.BorderSizePixel = 0
    header.Parent = main
    
    local hCorner = Instance.new("UICorner") hCorner.CornerRadius = UDim.new(0, 12) hCorner.Parent = header
    local hFix = Instance.new("Frame") hFix.Size, hFix.Position = UDim2.new(1, 0, 0, 12), UDim2.new(0, 0, 1, -12)
    hFix.BackgroundColor3, hFix.BorderSizePixel = theme.sec, 0 hFix.Parent = header
    
    local title = Instance.new("TextLabel")
    title.Size, title.Position = UDim2.new(0.7, -10, 1, 0), UDim2.new(0, 15, 0, 0)
    title.BackgroundTransparency, title.Text = 1, "2take1 Hub"
    title.TextColor3, title.TextSize, title.Font = theme.text, 16, Enum.Font.GothamBold
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = header
    
    -- Close Button
    local close = Instance.new("TextButton")
    close.Size, close.Position = UDim2.new(0, 30, 0, 30), UDim2.new(1, -40, 0, 5)
    close.BackgroundColor3, close.Text = theme.danger, "×"
    close.TextColor3, close.TextSize, close.Font = theme.text, 20, Enum.Font.Gotham
    close.Parent = header
    
    local cCorner = Instance.new("UICorner") cCorner.CornerRadius = UDim.new(0, 6) cCorner.Parent = close
    
    -- Content
    local content = Instance.new("ScrollingFrame")
    content.Size, content.Position = UDim2.new(1, -20, 1, -60), UDim2.new(0, 10, 0, 50)
    content.BackgroundColor3, content.BorderSizePixel = theme.sec, 0
    content.ScrollBarThickness = 3
    content.ScrollBarImageColor3 = theme.accent
    content.CanvasSize = UDim2.new(0, 0, 0, 0)
    content.Parent = main
    
    local cCorner2 = Instance.new("UICorner") cCorner2.CornerRadius = UDim.new(0, 10) cCorner2.Parent = content
    
    local layout = Instance.new("UIListLayout")
    layout.SortOrder, layout.Padding = Enum.SortOrder.LayoutOrder, UDim.new(0, 8)
    layout.Parent = content
    
    -- Enhanced Command Bar with autocomplete and history
local function createCommandBar()
    local cmdBar = Instance.new("Frame")
    cmdBar.Size, cmdBar.Position = UDim2.new(0, 420, 0, 45), UDim2.new(0.5, -210, 0, -55)
    cmdBar.BackgroundColor3, cmdBar.BorderSizePixel = theme.sec, 0
    cmdBar.Visible = false
    cmdBar.Parent = UI.screenGui
    
    local cbCorner = Instance.new("UICorner") cbCorner.CornerRadius = UDim.new(0, 10) cbCorner.Parent = cmdBar
    local cbStroke = Instance.new("UIStroke") cbStroke.Color, cbStroke.Thickness = theme.accent, 2 cbStroke.Parent = cmdBar
    
    -- Animated gradient background
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0.0, theme.sec),
        ColorSequenceKeypoint.new(1.0, theme.ter)
    }
    gradient.Parent = cmdBar
    
    local prefix = Instance.new("TextLabel")
    prefix.Size, prefix.BackgroundTransparency = UDim2.new(0, 35, 1, 0), 1
    prefix.Text, prefix.TextColor3, prefix.TextSize, prefix.Font = "2t1>", theme.accent, 14, Enum.Font.GothamBold
    prefix.Parent = cmdBar
    
    local input = Instance.new("TextBox")
    input.Size, input.Position = UDim2.new(1, -45, 1, -10), UDim2.new(0, 40, 0, 5)
    input.BackgroundTransparency, input.PlaceholderText = 1, "Enter command... (try 'cmds' for help)"
    input.PlaceholderColor3, input.TextColor3 = theme.dim, theme.text
    input.TextSize, input.Font = 14, Enum.Font.Gotham
    input.TextXAlignment, input.ClearTextOnFocus = Enum.TextXAlignment.Left, false
    input.Parent = cmdBar
    
    -- Command suggestions
    local suggestions = Instance.new("Frame")
    suggestions.Size, suggestions.Position = UDim2.new(1, 0, 0, 100), UDim2.new(0, 0, 1, 5)
    suggestions.BackgroundColor3, suggestions.BorderSizePixel = theme.ter, 0
    suggestions.Visible = false
    suggestions.Parent = cmdBar
    
    local sugCorner = Instance.new("UICorner") sugCorner.CornerRadius = UDim.new(0, 8) sugCorner.Parent = suggestions
    
    local sugLayout = Instance.new("UIListLayout")
    sugLayout.SortOrder, sugLayout.Padding = Enum.SortOrder.LayoutOrder, UDim.new(0, 2)
    sugLayout.Parent = suggestions
    
    -- Common commands for suggestions
    local commonCmds = {"kill all", "kill others", "god all", "god others", "dmg all 50", "tp ", "bring ", "fly", "noclip", "speed 100", "admin ", "broadcast "}
    
    input.Changed:Connect(function()
        local text = input.Text:lower()
        suggestions:ClearAllChildren()
        
        if text ~= "" and #text > 1 then
            local matches = {}
            for _, cmd in pairs(commonCmds) do
                if cmd:sub(1, #text) == text then
                    table.insert(matches, cmd)
                end
            end
            
            if #matches > 0 then
                suggestions.Visible = true
                suggestions.Size = UDim2.new(1, 0, 0, math.min(#matches * 22, 100))
                
                for i, match in pairs(matches) do
                    if i > 4 then break end -- Limit to 4 suggestions
                    
                    local sugBtn = Instance.new("TextButton")
                    sugBtn.Size = UDim2.new(1, -4, 0, 20)
                    sugBtn.Position = UDim2.new(0, 2, 0, (i-1) * 22)
                    sugBtn.BackgroundColor3 = theme.bg
                    sugBtn.Text = match
                    sugBtn.TextColor3 = theme.text
                    sugBtn.TextSize = 12
                    sugBtn.Font = Enum.Font.Gotham
                    sugBtn.TextXAlignment = Enum.TextXAlignment.Left
                    sugBtn.Parent = suggestions
                    
                    local sugCorner2 = Instance.new("UICorner") sugCorner2.CornerRadius = UDim.new(0, 4) sugCorner2.Parent = sugBtn
                    
                    sugBtn.MouseButton1Click:Connect(function()
                        input.Text = match
                        suggestions.Visible = false
                        input:CaptureFocus()
                    end)
                    
                    sugBtn.MouseEnter:Connect(function()
                        tween(sugBtn, {BackgroundColor3 = theme.accent}):Play()
                    end)
                    
                    sugBtn.MouseLeave:Connect(function()
                        tween(sugBtn, {BackgroundColor3 = theme.bg}):Play()
                    end)
                end
            else
                suggestions.Visible = false
            end
        else
            suggestions.Visible = false
        end
    end)
    
    return cmdBar, input, suggestions
end
end

-- Create toggles and buttons
local function createToggle(name, parent, callback)
    local frame = Instance.new("Frame")
    frame.Size, frame.BackgroundColor3 = UDim2.new(1, 0, 0, 35), theme.ter
    frame.BorderSizePixel = 0
    frame.Parent = parent
    
    local corner = Instance.new("UICorner") corner.CornerRadius = UDim.new(0, 6) corner.Parent = frame
    
    local label = Instance.new("TextLabel")
    label.Size, label.Position = UDim2.new(1, -60, 1, 0), UDim2.new(0, 12, 0, 0)
    label.BackgroundTransparency, label.Text = 1, name
    label.TextColor3, label.TextSize, label.Font = theme.text, 12, Enum.Font.Gotham
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = frame
    
    local btn = Instance.new("TextButton")
    btn.Size, btn.Position = UDim2.new(0, 40, 0, 20), UDim2.new(1, -50, 0.5, -10)
    btn.BackgroundColor3, btn.Text = theme.bg, ""
    btn.Parent = frame
    
    local bCorner = Instance.new("UICorner") bCorner.CornerRadius = UDim.new(0, 10) bCorner.Parent = btn
    
    local indicator = Instance.new("Frame")
    indicator.Size, indicator.Position = UDim2.new(0, 16, 0, 16), UDim2.new(0, 2, 0, 2)
    indicator.BackgroundColor3, indicator.BorderSizePixel = theme.text, 0
    indicator.Parent = btn
    
    local iCorner = Instance.new("UICorner") iCorner.CornerRadius = UDim.new(0, 8) iCorner.Parent = indicator
    
    local active = false
    btn.MouseButton1Click:Connect(function()
        active = not active
        tween(btn, {BackgroundColor3 = active and theme.success or theme.bg}):Play()
        tween(indicator, {Position = active and UDim2.new(1, -18, 0, 2) or UDim2.new(0, 2, 0, 2)}):Play()
        callback(active)
    end)
    
    return frame
end

local function createButton(name, parent, callback)
    local btn = Instance.new("TextButton")
    btn.Size, btn.BackgroundColor3 = UDim2.new(1, 0, 0, 35), theme.accent
    btn.Text, btn.TextColor3, btn.TextSize, btn.Font = name, theme.text, 12, Enum.Font.GothamBold
    btn.Parent = parent
    
    local corner = Instance.new("UICorner") corner.CornerRadius = UDim.new(0, 6) corner.Parent = btn
    
    btn.MouseButton1Click:Connect(callback)
    return btn
end

-- Initialize UI
UI = createUI()

-- Create enhanced command bar
local cmdBar, cmdInput, cmdSuggestions = createCommandBar()
UI.cmdBar = cmdBar
UI.input = cmdInput
UI.suggestions = cmdSuggestions

-- Create UI elements
createToggle("Fast Farm", UI.content, function(val) state.ff = val end)
createToggle("Slow Farm", UI.content, function(val) state.sf = val end)
createToggle("God Mode", UI.content, function(val) state.god = val end)
createToggle("Kill Aura", UI.content, function(val) state.ka = val end)
createToggle("Fly", UI.content, function(val) if val then runCommand("fly", player) else runCommand("unfly", player) end end)
createToggle("Noclip", UI.content, function(val) if val then runCommand("noclip", player) else runCommand("clip", player) end end)

createButton("Kill All", UI.content, function() runCommand("kill all", player) end)
createButton("God All", UI.content, function() runCommand("god all", player) end)
createButton("Damage All 50%", UI.content, function() runCommand("dmg all 50", player) end)
createButton("Damage All 25%", UI.content, function() runCommand("dmg all 25", player) end)
createButton("Reset Character", UI.content, function() runCommand("reset", player) end)

createButton("Rejoin Server", UI.content, function() runCommand("rejoin", player) end)
UI.content.CanvasSize = UDim2.new(0, 0, 0, UI.content.UIListLayout.AbsoluteContentSize.Y)

-- Events
UI.close.MouseButton1Click:Connect(function()
    tween(UI.main, {Position = UDim2.new(0.5, -200, 0, -500)}, 0.5):Play()
    wait(0.5)
    UI.screenGui:Destroy()
    state.open = false
end)

-- Dragging
local dragging, dragStart, startPos = false, nil, nil
UI.header.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging, dragStart, startPos = true, input.Position, UI.main.Position
    end
end)

UIS.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        UI.main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

UIS.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging = false end
end)

-- Command bar handling
UIS.InputBegan:Connect(function(input, processed)
    if processed then return end
    if input.KeyCode == Enum.KeyCode.Semicolon and state.open then
        UI.cmdBar.Visible = true
        tween(UI.cmdBar, {Position = UDim2.new(0.5, -200, 0, 80)}):Play()
        task.wait(0.3)
        UI.input:CaptureFocus()
    end
end)

UI.input.Focused:Connect(function() state.focused = true end)
UI.input.FocusLost:Connect(function(enter)
    state.focused = false
    if enter and UI.input.Text ~= "" then
        table.insert(data.cmdHistory, UI.input.Text)
        runCommand(UI.input.Text, player)
        UI.input.Text = ""
    end
    tween(UI.cmdBar, {Position = UDim2.new(0.5, -200, 0, -50)}):Play()
    task.wait(0.3)
    UI.cmdBar.Visible = false
end)

-- Chat command handling
local function setupChat()
    local function handleChat(plr, msg)
        if msg:sub(1, 1) == ";" then
            runCommand(msg:sub(2), plr)
        end
    end
    
    player.Chatted:Connect(function(msg) handleChat(player, msg) end)
    
    Players.PlayerAdded:Connect(function(plr)
        plr.Chatted:Connect(function(msg) handleChat(plr, msg) end)
    end)
    
    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= player then
            plr.Chatted:Connect(function(msg) handleChat(plr, msg) end)
        end
    end
end

setupChat()

-- Main loop
local frameCount = 0
RS.Heartbeat:Connect(function()
    frameCount = frameCount + 1
    if not state.open or not player.Character then return end
    
    local char, humanoid, root = player.Character, player.Character:FindFirstChild("Humanoid"), player.Character:FindFirstChild("HumanoidRootPart")
    if not humanoid or not root then return end
    
    -- Fast Farm
    if state.ff then
        local handle = getSword()
        if handle and handle:FindFirstChild("up") then
            for i = 1, cfg.speed do handle.up.RemoteEvent:FireServer() end
        end
    end
    
    -- Slow Farm
    if state.sf then
        local handle = getSword()
        if handle and handle:FindFirstChild("up") then
            for i = 1, 3 do handle.up.RemoteEvent:FireServer() end
        end
    end
    
    -- God Mode
    if state.god and char:FindFirstChild("pvp") then char.pvp:Destroy() end
    
    -- Kill Aura
    if state.ka and frameCount % 10 == 0 then
        local handle = getSword()
        if handle and handle:FindFirstChild("dmg") then
            for _, target in pairs(workspace:GetChildren()) do
                if target:FindFirstChild("Humanoid") and target:FindFirstChild("HumanoidRootPart") then
                    local dist = (root.Position - target.HumanoidRootPart.Position).Magnitude
                    if dist <= cfg.range and target.Name ~= player.Name and target.Humanoid.Health > 0 then
                        handle.dmg.RemoteEvent:FireServer(target.Humanoid, player.leaderstats.Power.Value)
                    end
                end
            end
        end
    end
    
    -- Anti-Kick
    if state.ak and frameCount % 300 == 0 then
        VU:CaptureController()
        VU:ClickButton2(Vector2.new())
    end
end)

-- Character respawn
player.CharacterAdded:Connect(function(char)
    wait(1)
    if char:FindFirstChild("Humanoid") then
        char.Humanoid.WalkSpeed, char.Humanoid.JumpPower = cfg.ws, cfg.jp
    end
    if state.god and char:FindFirstChild("pvp") then char.pvp:Destroy() end
    if state.nc then runCommand("noclip", player) end
end)

-- Additional Admin Commands
local adminCmds = {
    ["broadcast"] = function(args, executor)
        if executor ~= player and not isAdmin(executor) then return false end
        local msg = table.concat(args, " ", 2)
        if msg and msg ~= "" then
            for _, plr in pairs(Players:GetPlayers()) do
                if plr ~= executor then
                    game:GetService("StarterGui"):SetCore("ChatMakeSystemMessage", {
                        Text = "[ADMIN] " .. msg;
                        Color = Color3.fromRGB(255, 255, 0);
                    })
                end
            end
            notify("Broadcasted: " .. msg, "success")
        else
            notify("Usage: broadcast [message]", "error")
        end
        return true
    end,
    
    ["kick"] = function(args, executor)
        if executor ~= player and not isAdmin(executor) then return false end
        local target = findPlayer(args[2])
        if target and target ~= player then
            target:Kick("Kicked by admin")
            notify("Kicked " .. target.Name, "success")
        else
            notify("Cannot kick target", "error")
        end
        return true
    end,
    
    ["freeze"] = function(args, executor)
        if executor ~= player and not isAdmin(executor) then return false end
        local target = findPlayer(args[2])
        if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
            local root = target.Character.HumanoidRootPart
            local anchor = Instance.new("Attachment")
            anchor.Parent = root
            root.Anchored = true
            notify("Froze " .. target.Name, "success")
        else
            notify("Cannot freeze target", "error")
        end
        return true
    end,
    
    ["unfreeze"] = function(args, executor)
        if executor ~= player and not isAdmin(executor) then return false end
        local target = findPlayer(args[2])
        if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
            target.Character.HumanoidRootPart.Anchored = false
            notify("Unfroze " .. target.Name, "success")
        else
            notify("Cannot unfreeze target", "error")
        end
        return true
    end,
    
    ["invisible"] = function(args, executor)
        if executor ~= player and not isAdmin(executor) then return false end
        local target = findPlayer(args[2]) or executor
        if target and target.Character then
            for _, part in pairs(target.Character:GetChildren()) do
                if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                    part.Transparency = 1
                elseif part:IsA("Accessory") and part:FindFirstChild("Handle") then
                    part.Handle.Transparency = 1
                end
            end
            if target.Character:FindFirstChild("Head") and target.Character.Head:FindFirstChild("face") then
                target.Character.Head.face.Transparency = 1
            end
            notify("Made " .. target.Name .. " invisible", "success")
        end
        return true
    end,
    
    ["visible"] = function(args, executor)
        if executor ~= player and not isAdmin(executor) then return false end
        local target = findPlayer(args[2]) or executor
        if target and target.Character then
            for _, part in pairs(target.Character:GetChildren()) do
                if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                    part.Transparency = 0
                elseif part:IsA("Accessory") and part:FindFirstChild("Handle") then
                    part.Handle.Transparency = 0
                end
            end
            if target.Character:FindFirstChild("Head") and target.Character.Head:FindFirstChild("face") then
                target.Character.Head.face.Transparency = 0
            end
            notify("Made " .. target.Name .. " visible", "success")
        end
        return true
    end
}

-- Enhanced runCommand with admin commands
local originalRunCommand = runCommand
runCommand = function(cmd, executor)
    local args = cmd:lower():split(" ")
    local command = args[1]
    
    -- Check for admin commands first
    if adminCmds[command] then
        if adminCmds[command](args, executor) then
            return
        end
    end
    
    -- Fall back to original command handler
    originalRunCommand(cmd, executor)
end

-- Modern Chat System Handler (Compatible with new Roblox chat)
local function setupModernChatHandler()
    local TextChatService = game:GetService("TextChatService")
    local StarterGui = game:GetService("StarterGui")
    
    local function processCommand(plr, msg)
        if msg:sub(1, 1) == ";" then
            local cmd = msg:sub(2)
            if cmd ~= "" then
                -- Clean up the command
                cmd = cmd:gsub("^%s*", ""):gsub("%s*$", "") -- Trim whitespace
                
                -- Add to command history if it's the local player
                if plr == player then
                    table.insert(data.cmdHistory, cmd)
                    if #data.cmdHistory > 50 then
                        table.remove(data.cmdHistory, 1)
                    end
                    data.historyIdx = #data.cmdHistory + 1
                end
                
                -- Execute command with proper error handling
                task.spawn(function()
                    local success, err = pcall(function()
                        runCommand(cmd, plr)
                    end)
                    
                    if not success then
                        warn("Command error for " .. plr.Name .. ": " .. tostring(err))
                        if plr == player then
                            notify("Command failed: " .. cmd, "error")
                        end
                    end
                end)
            end
        end
    end
    
    -- Try new TextChatService first (modern chat)
    local success = pcall(function()
        if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then
            -- Modern chat system
            TextChatService.MessageReceived:Connect(function(message)
                local plr = Players:GetPlayerByUserId(message.TextSource.UserId)
                if plr then
                    processCommand(plr, message.Text)
                end
            end)
            
            -- Handle local player commands separately for modern chat
            player.Chatted:Connect(function(msg)
                processCommand(player, msg)
            end)
            
            print("2take1 Hub: Using modern TextChatService")
            return true
        end
    end)
    
    -- Fallback to legacy chat if modern chat fails
    if not success then
        print("2take1 Hub: Falling back to legacy chat system")
        
        -- Handle local player chat
        player.Chatted:Connect(function(msg)
            processCommand(player, msg)
        end)
        
        -- Handle other players' chat
        local function connectPlayer(plr)
            if plr ~= player then
                plr.Chatted:Connect(function(msg)
                    processCommand(plr, msg)
                end)
            end
        end
        
        -- Connect existing players
        for _, plr in pairs(Players:GetPlayers()) do
            connectPlayer(plr)
        end
        
        -- Connect new players
        Players.PlayerAdded:Connect(connectPlayer)
    end
    
    -- Additional chat monitoring for better compatibility
    local chatEvents = {
        "Chatted",
        "MessageReceived"
    }
    
    -- Monitor all possible chat events
    for _, eventName in pairs(chatEvents) do
        pcall(function()
            if player[eventName] then
                player[eventName]:Connect(function(...)
                    local args = {...}
                    local message = args[1]
                    if type(message) == "string" then
                        processCommand(player, message)
                    end
                end)
            end
        end)
    end
end

-- Replace the old chat setup
setupModernChatHandler()

-- Enhanced key handling
local keyBinds = {
    [Enum.KeyCode.F1] = function() runCommand("ff", player) end,
    [Enum.KeyCode.F2] = function() runCommand("sf", player) end,
    [Enum.KeyCode.F3] = function() runCommand("godmode", player) end,
    [Enum.KeyCode.F4] = function() runCommand("kaura", player) end,
    [Enum.KeyCode.F5] = function() runCommand("fly", player) end,
    [Enum.KeyCode.F6] = function() runCommand("noclip", player) end,
    [Enum.KeyCode.Delete] = function() runCommand("kill all", player) end,
    [Enum.KeyCode.Insert] = function() runCommand("god all", player) end,
}

-- Update input handling
UIS.InputBegan:Connect(function(input, processed)
    if processed then return end
    
    -- Command bar
    if input.KeyCode == Enum.KeyCode.Semicolon and state.open then
        UI.cmdBar.Visible = true
        tween(UI.cmdBar, {Position = UDim2.new(0.5, -200, 0, 80)}):Play()
        task.wait(0.3)
        UI.input:CaptureFocus()
    end
    
    -- Keybinds
    if keyBinds[input.KeyCode] then
        keyBinds[input.KeyCode]()
    end
    
    -- Command history navigation
    if state.focused and UI.input:IsFocused() then
        if input.KeyCode == Enum.KeyCode.Up then
            if data.historyIdx > 1 then
                data.historyIdx = data.historyIdx - 1
                UI.input.Text = data.cmdHistory[data.historyIdx] or ""
            end
        elseif input.KeyCode == Enum.KeyCode.Down then
            if data.historyIdx < #data.cmdHistory then
                data.historyIdx = data.historyIdx + 1
                UI.input.Text = data.cmdHistory[data.historyIdx] or ""
            else
                data.historyIdx = #data.cmdHistory + 1
                UI.input.Text = ""
            end
        end
    end
end)

-- Status display enhancement
local function updateStatus()
    local statusParts = {}
    
    if state.ff then table.insert(statusParts, "FF") end
    if state.sf then table.insert(statusParts, "SF") end
    if state.god then table.insert(statusParts, "GOD") end
    if state.ka then table.insert(statusParts, "KA") end
    if state.fly then table.insert(statusParts, "FLY") end
    if state.nc then table.insert(statusParts, "NC") end
    
    local statusText = #statusParts > 0 and table.concat(statusParts, " | ") or "Ready"
    
    -- Add admin count
    if #data.admins > 0 then
        statusText = statusText .. " | Admins: " .. #data.admins
    end
    
    -- Add power if available
    if player.leaderstats and player.leaderstats:FindFirstChild("Power") then
        statusText = statusText .. " | PWR: " .. player.leaderstats.Power.Value
    end
    
    return statusText
end

-- Performance optimizations
local lastUpdate = 0
local updateInterval = 0.5

-- Enhanced main loop
RS.Heartbeat:Connect(function()
    frameCount = frameCount + 1
    local now = tick()
    
    if not state.open or not player.Character then return end
    
    local char = player.Character
    local humanoid = char:FindFirstChild("Humanoid")
    local root = char:FindFirstChild("HumanoidRootPart")
    
    if not humanoid or not root then return end
    
    -- Fast Farm (optimized)
    if state.ff then
        local handle = getSword()
        if handle and handle:FindFirstChild("up") then
            for i = 1, math.min(cfg.speed, 10) do -- Cap at 10 for performance
                handle.up.RemoteEvent:FireServer()
            end
        end
    end
    
    -- Slow Farm
    if state.sf then
        local handle = getSword()
        if handle and handle:FindFirstChild("up") then
            for i = 1, 3 do
                handle.up.RemoteEvent:FireServer()
            end
        end
    end
    
    -- God Mode (optimized check)
    if state.god then
        local pvp = char:FindFirstChild("pvp")
        if pvp then
            pvp:Destroy()
        end
    end
    
    -- Kill Aura (optimized)
    if state.ka and frameCount % 15 == 0 then -- Reduced frequency for better performance
        local handle = getSword()
        if handle and handle:FindFirstChild("dmg") and player.leaderstats and player.leaderstats:FindFirstChild("Power") then
            local power = player.leaderstats.Power.Value
            for _, target in pairs(workspace:GetChildren()) do
                if target:FindFirstChild("Humanoid") and target:FindFirstChild("HumanoidRootPart") and target.Name ~= player.Name then
                    local targetHumanoid = target.Humanoid
                    local targetRoot = target.HumanoidRootPart
                    
                    if targetHumanoid.Health > 0 then
                        local distance = (root.Position - targetRoot.Position).Magnitude
                        if distance <= cfg.range then
                            handle.dmg.RemoteEvent:FireServer(targetHumanoid, power)
                        end
                    end
                end
            end
        end
    end
    
    -- Anti-Kick (less frequent)
    if state.ak and frameCount % 600 == 0 then -- Reduced frequency
        VU:CaptureController()
        VU:ClickButton2(Vector2.new())
    end
    
    -- Update status less frequently
    if now - lastUpdate > updateInterval then
        lastUpdate = now
        -- Status updates would go here if we had a status bar
    end
end)

-- Cleanup function
local function cleanup()
    if state.fly then
        for _, obj in pairs(data.flyObjs) do
            if obj and obj.Parent then
                obj:Destroy()
            end
        end
    end
    
    state.nc = false
    state.fly = false
    
    if UI.screenGui then
        UI.screenGui:Destroy()
    end
end

-- Handle player leaving
Players.PlayerRemoving:Connect(function(plr)
    -- This is handled in the enhanced admin system above
end)

-- Error handling wrapper
local function safeCall(func, ...)
    local success, result = pcall(func, ...)
    if not success then
        warn("2take1 Hub Error: " .. tostring(result))
        notify("An error occurred", "error")
    end
    return success, result
end

-- Startup sequence
task.spawn(function()
    tween(UI.main, {Position = UDim2.new(0.5, -200, 0.5, -225)}, 0.5):Play()
    task.wait(0.5)
    notify("2take1 Hub loaded!", "success")
    task.wait(1)
    notify("Press ';' for commands | F1-F6 for quick toggles", "info")
    task.wait(0.5)
    notify("Chat ';admin [player]' to give admin access", "info")
end)

-- Debug info (remove in production)
if game:GetService("RunService"):IsStudio() then
    print("2take1 Hub Debug Mode - Studio Detected")
    print("Available commands:", table.concat({"kill", "god", "tp", "bring", "fly", "noclip", "speed", "reset", "ff", "sf", "godmode", "kaura", "admin", "broadcast", "kick", "freeze", "invisible"}, ", "))
end
