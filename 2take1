-- 2take1 Hub 2025 --
local Players = game:GetService("Players")
local player = Players.LocalPlayer

if not game:IsLoaded() then
    game.Loaded:Wait()
end

local UIS = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local TeleportService = game:GetService("TeleportService")

local character = player.Character or player.CharacterAdded:Wait()
local load = workspace:FindFirstChild("load")
local loadEvent = load and load:FindFirstChild("RemoteEvent")

local Config = {
    speed = 5,
    range = 15,
    walkSpeed = 16,
    jumpPower = 50,
    flySpeed = 50,
    commandPrefix = ";"
}

local State = {
    fastFarm = false,
    slowFarm = false,
    godMode = false,
    killAura = false,
    flying = false,
    noclip = false,
    commandBarVisible = false,
    loopKill = false,
    loopKillTargets = {}
}

local Stats = {
    power = 0,
    kills = 0,
    health = 100,
    powerGainedThisSession = 0,
    killsThisSession = 0,
    sessionStartTime = tick(),
    lastPowerCheck = 0,
    powerPerSecond = 0,
    powerPerHour = 0
}

local Data = {
    adminPlayers = {},
    connections = {},
    flyObjects = {}
}

local Theme = {
    background = Color3.fromRGB(25, 25, 25),
    secondary = Color3.fromRGB(35, 35, 35),
    tertiary = Color3.fromRGB(45, 45, 45),
    accent = Color3.fromRGB(88, 101, 242),
    text = Color3.fromRGB(255, 255, 255),
    success = Color3.fromRGB(87, 242, 135),
    danger = Color3.fromRGB(237, 66, 69),
    warning = Color3.fromRGB(255, 193, 7)
}

-- Create GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "2take1Hub"
screenGui.ResetOnSpawn = false

pcall(function()
    screenGui.Parent = game:GetService("CoreGui")
end)
if not screenGui.Parent then
    screenGui.Parent = player:WaitForChild("PlayerGui")
end

-- Command Bar
local commandBarFrame = Instance.new("Frame")
commandBarFrame.Name = "CommandBar"
commandBarFrame.Size = UDim2.new(0, 400, 0, 40)
commandBarFrame.Position = UDim2.new(0.5, -200, 0, -50)
commandBarFrame.BackgroundColor3 = Theme.background
commandBarFrame.BorderSizePixel = 0
commandBarFrame.Parent = screenGui

local commandBarCorner = Instance.new("UICorner")
commandBarCorner.CornerRadius = UDim.new(0, 8)
commandBarCorner.Parent = commandBarFrame

local commandInput = Instance.new("TextBox")
commandInput.Size = UDim2.new(1, -80, 1, -10)
commandInput.Position = UDim2.new(0, 10, 0, 5)
commandInput.BackgroundColor3 = Theme.secondary
commandInput.BorderSizePixel = 0
commandInput.Text = ""
commandInput.PlaceholderText = "Enter command..."
commandInput.TextColor3 = Theme.text
commandInput.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
commandInput.TextSize = 14
commandInput.Font = Enum.Font.SourceSans
commandInput.ClearTextOnFocus = false
commandInput.Parent = commandBarFrame

local inputCorner = Instance.new("UICorner")
inputCorner.CornerRadius = UDim.new(0, 6)
inputCorner.Parent = commandInput

local executeButton = Instance.new("TextButton")
executeButton.Size = UDim2.new(0, 60, 1, -10)
executeButton.Position = UDim2.new(1, -70, 0, 5)
executeButton.BackgroundColor3 = Theme.accent
executeButton.Text = "Execute"
executeButton.TextColor3 = Theme.text
executeButton.TextSize = 12
executeButton.Font = Enum.Font.SourceSansBold
executeButton.BorderSizePixel = 0
executeButton.Parent = commandBarFrame

local executeCorner = Instance.new("UICorner")
executeCorner.CornerRadius = UDim.new(0, 6)
executeCorner.Parent = executeButton

-- Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 400, 0, 600)
mainFrame.Position = UDim2.new(0.5, -200, 0.5, -300)
mainFrame.BackgroundColor3 = Theme.background
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui

local mainCorner = Instance.new("UICorner")
mainCorner.CornerRadius = UDim.new(0, 12)
mainCorner.Parent = mainFrame

-- Header
local header = Instance.new("Frame")
header.Size = UDim2.new(1, 0, 0, 40)
header.BackgroundColor3 = Theme.secondary
header.BorderSizePixel = 0
header.Parent = mainFrame

local headerCorner = Instance.new("UICorner")
headerCorner.CornerRadius = UDim.new(0, 12)
headerCorner.Parent = header

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -40, 1, 0)
title.Position = UDim2.new(0, 10, 0, 0)
title.BackgroundTransparency = 1
title.Text = "2take1 Hub"
title.TextColor3 = Theme.text
title.TextSize = 16
title.Font = Enum.Font.SourceSansBold
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = header

local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(1, -35, 0, 5)
closeButton.BackgroundColor3 = Theme.danger
closeButton.Text = "X"
closeButton.TextColor3 = Theme.text
closeButton.TextSize = 14
closeButton.Font = Enum.Font.SourceSansBold
closeButton.Parent = header

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 6)
closeCorner.Parent = closeButton

-- Content
local content = Instance.new("ScrollingFrame")
content.Size = UDim2.new(1, -20, 1, -60)
content.Position = UDim2.new(0, 10, 0, 50)
content.BackgroundColor3 = Theme.secondary
content.BorderSizePixel = 0
content.ScrollBarThickness = 6
content.CanvasSize = UDim2.new(0, 0, 0, 1200)
content.Parent = mainFrame

local contentCorner = Instance.new("UICorner")
contentCorner.CornerRadius = UDim.new(0, 8)
contentCorner.Parent = content

local layout = Instance.new("UIListLayout")
layout.Padding = UDim.new(0, 10)
layout.Parent = content

-- Stats Frame
local statsFrame = Instance.new("Frame")
statsFrame.Size = UDim2.new(1, -10, 0, 120)
statsFrame.BackgroundColor3 = Theme.tertiary
statsFrame.BorderSizePixel = 0
statsFrame.Parent = content

local statsCorner = Instance.new("UICorner")
statsCorner.CornerRadius = UDim.new(0, 8)
statsCorner.Parent = statsFrame

local statsTitle = Instance.new("TextLabel")
statsTitle.Size = UDim2.new(1, -10, 0, 25)
statsTitle.Position = UDim2.new(0, 5, 0, 5)
statsTitle.BackgroundTransparency = 1
statsTitle.Text = "📊 Player Stats"
statsTitle.TextColor3 = Theme.accent
statsTitle.TextSize = 16
statsTitle.Font = Enum.Font.SourceSansBold
statsTitle.TextXAlignment = Enum.TextXAlignment.Left
statsTitle.Parent = statsFrame

-- Create stats labels
local powerLabel = Instance.new("TextLabel")
powerLabel.Size = UDim2.new(0.5, -5, 0, 20)
powerLabel.Position = UDim2.new(0, 10, 0, 30)
powerLabel.BackgroundTransparency = 1
powerLabel.Text = "⚡ Power: 0"
powerLabel.TextColor3 = Theme.text
powerLabel.TextSize = 12
powerLabel.Font = Enum.Font.SourceSans
powerLabel.TextXAlignment = Enum.TextXAlignment.Left
powerLabel.Parent = statsFrame

local killsLabel = Instance.new("TextLabel")
killsLabel.Size = UDim2.new(0.5, -5, 0, 20)
killsLabel.Position = UDim2.new(0.5, 5, 0, 30)
killsLabel.BackgroundTransparency = 1
killsLabel.Text = "💀 Kills: 0"
killsLabel.TextColor3 = Theme.text
killsLabel.TextSize = 12
killsLabel.Font = Enum.Font.SourceSans
killsLabel.TextXAlignment = Enum.TextXAlignment.Left
killsLabel.Parent = statsFrame

local healthLabel = Instance.new("TextLabel")
healthLabel.Size = UDim2.new(0.5, -5, 0, 20)
healthLabel.Position = UDim2.new(0, 10, 0, 50)
healthLabel.BackgroundTransparency = 1
healthLabel.Text = "❤️ Health: 100"
healthLabel.TextColor3 = Theme.text
healthLabel.TextSize = 12
healthLabel.Font = Enum.Font.SourceSans
healthLabel.TextXAlignment = Enum.TextXAlignment.Left
healthLabel.Parent = statsFrame

local powerPerSecLabel = Instance.new("TextLabel")
powerPerSecLabel.Size = UDim2.new(0.5, -5, 0, 20)
powerPerSecLabel.Position = UDim2.new(0.5, 5, 0, 50)
powerPerSecLabel.BackgroundTransparency = 1
powerPerSecLabel.Text = "⏱️ Power/sec: 0"
powerPerSecLabel.TextColor3 = Theme.text
powerPerSecLabel.TextSize = 12
powerPerSecLabel.Font = Enum.Font.SourceSans
powerPerSecLabel.TextXAlignment = Enum.TextXAlignment.Left
powerPerSecLabel.Parent = statsFrame

local powerPerHourLabel = Instance.new("TextLabel")
powerPerHourLabel.Size = UDim2.new(0.5, -5, 0, 20)
powerPerHourLabel.Position = UDim2.new(0, 10, 0, 70)
powerPerHourLabel.BackgroundTransparency = 1
powerPerHourLabel.Text = "🕐 Power/hour: 0"
powerPerHourLabel.TextColor3 = Theme.text
powerPerHourLabel.TextSize = 12
powerPerHourLabel.Font = Enum.Font.SourceSans
powerPerHourLabel.TextXAlignment = Enum.TextXAlignment.Left
powerPerHourLabel.Parent = statsFrame

local sessionLabel = Instance.new("TextLabel")
sessionLabel.Size = UDim2.new(0.5, -5, 0, 20)
sessionLabel.Position = UDim2.new(0.5, 5, 0, 70)
sessionLabel.BackgroundTransparency = 1
sessionLabel.Text = "📈 Session: +0 power"
sessionLabel.TextColor3 = Theme.text
sessionLabel.TextSize = 12
sessionLabel.Font = Enum.Font.SourceSans
sessionLabel.TextXAlignment = Enum.TextXAlignment.Left
sessionLabel.Parent = statsFrame

local sessionTimeLabel = Instance.new("TextLabel")
sessionTimeLabel.Size = UDim2.new(1, -10, 0, 20)
sessionTimeLabel.Position = UDim2.new(0, 10, 0, 90)
sessionTimeLabel.BackgroundTransparency = 1
sessionTimeLabel.Text = "⏰ Session Time: 00:00:00"
sessionTimeLabel.TextColor3 = Theme.text
sessionTimeLabel.TextSize = 12
sessionTimeLabel.Font = Enum.Font.SourceSans
sessionTimeLabel.TextXAlignment = Enum.TextXAlignment.Left
sessionTimeLabel.Parent = statsFrame

-- Functions
local function notification(text)
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "2take1 Hub",
        Text = text,
        Duration = 3
    })
end

local function formatNumber(num)
    if num >= 1000000000 then
        return string.format("%.1fB", num / 1000000000)
    elseif num >= 1000000 then
        return string.format("%.1fM", num / 1000000)
    elseif num >= 1000 then
        return string.format("%.1fK", num / 1000)
    else
        return tostring(math.floor(num))
    end
end

local function formatTime(seconds)
    local hours = math.floor(seconds / 3600)
    local minutes = math.floor((seconds % 3600) / 60)
    local secs = math.floor(seconds % 60)
    return string.format("%02d:%02d:%02d", hours, minutes, secs)
end

local function updateStats()
    if not player.Character then return end
    
    -- Get current power from leaderstats
    local leaderstats = player:FindFirstChild("leaderstats")
    if leaderstats then
        local powerStat = leaderstats:FindFirstChild("Power") or leaderstats:FindFirstChild("power") or leaderstats:FindFirstChild("Strength") or leaderstats:FindFirstChild("strength")
        if powerStat then
            local currentPower = powerStat.Value
            
            -- Calculate power gain
            if Stats.lastPowerCheck > 0 then
                local powerGain = currentPower - Stats.lastPowerCheck
                if powerGain > 0 then
                    Stats.powerGainedThisSession = Stats.powerGainedThisSession + powerGain
                end
            end
            
            Stats.power = currentPower
            Stats.lastPowerCheck = currentPower
        end
        
        -- Get kills
        local killsStat = leaderstats:FindFirstChild("Kills") or leaderstats:FindFirstChild("kills") or leaderstats:FindFirstChild("KOs") or leaderstats:FindFirstChild("Eliminations")
        if killsStat then
            Stats.kills = killsStat.Value
        end
    end
    
    -- Get health
    local humanoid = player.Character:FindFirstChild("Humanoid")
    if humanoid then
        Stats.health = math.floor(humanoid.Health)
    end
    
    -- Calculate rates
    local sessionTime = tick() - Stats.sessionStartTime
    if sessionTime > 0 then
        Stats.powerPerSecond = Stats.powerGainedThisSession / sessionTime
        Stats.powerPerHour = Stats.powerPerSecond * 3600
    end
    
    -- Update UI
    powerLabel.Text = "⚡ Power: " .. formatNumber(Stats.power)
    killsLabel.Text = "💀 Kills: " .. formatNumber(Stats.kills)
    healthLabel.Text = "❤️ Health: " .. Stats.health
    powerPerSecLabel.Text = "⏱️ Power/sec: " .. formatNumber(Stats.powerPerSecond)
    powerPerHourLabel.Text = "🕐 Power/hour: " .. formatNumber(Stats.powerPerHour)
    sessionLabel.Text = "📈 Session: +" .. formatNumber(Stats.powerGainedThisSession) .. " power"
    sessionTimeLabel.Text = "⏰ Session Time: " .. formatTime(sessionTime)
    
    -- Color code health
    if Stats.health <= 25 then
        healthLabel.TextColor3 = Theme.danger
    elseif Stats.health <= 50 then
        healthLabel.TextColor3 = Theme.warning
    else
        healthLabel.TextColor3 = Theme.success
    end
    
    -- Color code power gain rate
    if Stats.powerPerSecond > 1000 then
        powerPerSecLabel.TextColor3 = Theme.success
    elseif Stats.powerPerSecond > 100 then
        powerPerSecLabel.TextColor3 = Theme.warning
    else
        powerPerSecLabel.TextColor3 = Theme.text
    end
end

local function getAllToolHandles()
    local handles = {}
    
    if not player.Character then return handles end
    
    for _, tool in pairs(player.Character:GetChildren()) do
        if tool:IsA("Tool") and tool:FindFirstChild("Handle") then
            table.insert(handles, tool.Handle)
        end
    end
    
    if player.Backpack then
        for _, tool in pairs(player.Backpack:GetChildren()) do
            if tool:IsA("Tool") and tool:FindFirstChild("Handle") then
                table.insert(handles, tool.Handle)
            end
        end
    end
    
    if #handles == 0 and loadEvent then
        pcall(function()
            loadEvent:FireServer()
        end)
        wait(0.5)
        
        if player.Backpack then
            for _, tool in pairs(player.Backpack:GetChildren()) do
                if tool:IsA("Tool") and tool:FindFirstChild("Handle") then
                    table.insert(handles, tool.Handle)
                end
            end
        end
    end
    
    return handles
end

local function findPlayer(name)
    if not name then return nil end
    name = name:lower()
    
    if name == "me" then return player end
    if name == "all" then return Players:GetPlayers() end
    if name == "others" then
        local others = {}
        for _, p in pairs(Players:GetPlayers()) do
            if p ~= player then
                table.insert(others, p)
            end
        end
        return others
    end
    
    for _, p in pairs(Players:GetPlayers()) do
        if p.Name:lower() == name or p.Name:lower():find(name) then
            return p
        end
    end
    
    return nil
end

local function showCommandBar()
    if State.commandBarVisible then return end
    State.commandBarVisible = true
    
    commandInput.Text = ""
    commandInput:CaptureFocus()
    
    local tween = TweenService:Create(commandBarFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {
        Position = UDim2.new(0.5, -200, 0, 20)
    })
    tween:Play()
end

local function hideCommandBar()
    if not State.commandBarVisible then return end
    State.commandBarVisible = false
    
    commandInput:ReleaseFocus()
    
    local tween = TweenService:Create(commandBarFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quart, Enum.EasingDirection.In), {
        Position = UDim2.new(0.5, -200, 0, -50)
    })
    tween:Play()
end

local function executeCommand(command, commandPlayer)
    if not command or command == "" then return end
    
    local cmdPlayer = commandPlayer or player
    
    if command:sub(1, 1) == ";" then
        command = command:sub(2)
    end
    
    local args = command:split(" ")
    local cmd = args[1]:lower()
    
    -- Check if command player is admin or script owner
    local isAuthorized = (cmdPlayer == player) or table.find(Data.adminPlayers, cmdPlayer.Name)
    
    if cmd == "kill" and isAuthorized then
        local target = findPlayer(args[2])
        if target then
            local handles = getAllToolHandles()
            local killSuccess = false
            
            if #handles > 0 then
                for _, handle in pairs(handles) do
                    if handle:FindFirstChild("dmg") then
                        if type(target) == "table" then
                            for _, p in pairs(target) do
                                if p.Character and p.Character:FindFirstChild("Humanoid") then
                                    pcall(function()
                                        handle.dmg.RemoteEvent:FireServer(p.Character.Humanoid, math.huge)
                                    end)
                                end
                            end
                        else
                            if target.Character and target.Character:FindFirstChild("Humanoid") then
                                pcall(function()
                                    handle.dmg.RemoteEvent:FireServer(target.Character.Humanoid, math.huge)
                                end)
                            end
                        end
                        killSuccess = true
                    end
                end
                
                if killSuccess then
                    notification("Killed target(s) with " .. #handles .. " tool(s)")
                else
                    notification("No damage tools found!")
                end
            else
                notification("No tools found!")
            end
        else
            notification("Player not found!")
        end
        
    elseif cmd == "loopkill" and isAuthorized then
        local target = findPlayer(args[2])
        if target then
            if type(target) == "table" then
                for _, p in pairs(target) do
                    if not table.find(State.loopKillTargets, p.Name) then
                        table.insert(State.loopKillTargets, p.Name)
                    end
                end
                notification("Added " .. #target .. " players to loopkill")
            else
                if not table.find(State.loopKillTargets, target.Name) then
                    table.insert(State.loopKillTargets, target.Name)
                    notification("Added " .. target.Name .. " to loopkill")
                else
                    notification(target.Name .. " already in loopkill!")
                end
            end
            
            if not State.loopKill then
                State.loopKill = true
                notification("Loop kill started!")
            end
        else
            notification("Player not found!")
        end
        
    elseif cmd == "unloopkill" and isAuthorized then
        if args[2] then
            local target = findPlayer(args[2])
            if target then
                if type(target) == "table" then
                    for _, p in pairs(target) do
                        local index = table.find(State.loopKillTargets, p.Name)
                        if index then
                            table.remove(State.loopKillTargets, index)
                        end
                    end
                    notification("Removed players from loopkill")
                else
                    local index = table.find(State.loopKillTargets, target.Name)
                    if index then
                        table.remove(State.loopKillTargets, index)
                        notification("Removed " .. target.Name .. " from loopkill")
                    else
                        notification(target.Name .. " not in loopkill!")
                    end
                end
            else
                notification("Player not found!")
            end
        else
            State.loopKillTargets = {}
            State.loopKill = false
            notification("Cleared all loopkill targets")
        end
        
        if #State.loopKillTargets == 0 then
            State.loopKill = false
            notification("Loop kill stopped - no targets")
        end
        
    elseif cmd == "killaura" and isAuthorized then
        if args[2] and args[2]:lower() == "range" then
            local newRange = tonumber(args[3])
            if newRange and newRange > 0 then
                Config.range = newRange
                notification("Kill aura range set to " .. newRange)
            else
                notification("Invalid range! Use: killaura range [number]")
            end
        else
            State.killAura = not State.killAura
            notification("Kill Aura " .. (State.killAura and "ON" or "OFF"))
        end
        
    elseif cmd == "god" and isAuthorized then
        local target = findPlayer(args[2] or "me")
        if target then
            local handles = getAllToolHandles()
            local godSuccess = false
            
            if #handles > 0 then
                for _, handle in pairs(handles) do
                    if handle:FindFirstChild("dmg") then
                        if type(target) == "table" then
                            for _, p in pairs(target) do
                                if p.Character and p.Character:FindFirstChild("Humanoid") then
                                    pcall(function()
                                        for i = 1, 5 do
                                            handle.dmg.RemoteEvent:FireServer(p.Character.Humanoid, -math.huge)
                                        end
                                    end)
                                end
                            end
                        else
                            if target.Character and target.Character:FindFirstChild("Humanoid") then
                                pcall(function()
                                    for i = 1, 5 do
                                        handle.dmg.RemoteEvent:FireServer(target.Character.Humanoid, -math.huge)
                                    end
                                end)
                            end
                        end
                        godSuccess = true
                    end
                end
                
                if godSuccess then
                    notification("Godded target(s) with " .. #handles .. " tool(s)")
                else
                    notification("No damage tools found!")
                end
            else
                notification("No tools found!")
            end
        else
            notification("Player not found!")
        end
        
    elseif cmd == "admin" and cmdPlayer == player then
        local target = findPlayer(args[2])
        if target then
            if type(target) == "table" then
                for _, p in pairs(target) do
                    if not table.find(Data.adminPlayers, p.Name) then
                        table.insert(Data.adminPlayers, p.Name)
                    end
                end
                notification("Added " .. #target .. " players as admins")
            else
                if not table.find(Data.adminPlayers, target.Name) then
                    table.insert(Data.adminPlayers, target.Name)
                    notification("Added " .. target.Name .. " as admin")
                else
                    notification(target.Name .. " is already admin!")
                end
            end
        else
            notification("Player not found!")
        end
        
    elseif cmd == "unadmin" and cmdPlayer == player then
        local target = findPlayer(args[2])
        if target then
            if type(target) == "table" then
                for _, p in pairs(target) do
                    local index = table.find(Data.adminPlayers, p.Name)
                    if index then
                        table.remove(Data.adminPlayers, index)
                    end
                end
                notification("Removed admin from players")
            else
                local index = table.find(Data.adminPlayers, target.Name)
                if index then
                    table.remove(Data.adminPlayers, index)
                    notification("Removed admin from " .. target.Name)
                else
                    notification(target.Name .. " is not admin!")
                end
            end
        else
            notification("Player not found!")
        end
        
    elseif cmd == "speed" or cmd == "ws" then
        local speed = tonumber(args[2]) or 16
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid.WalkSpeed = speed
            Config.walkSpeed = speed
            notification("Walk speed set to " .. speed)
        end
        
    elseif cmd == "jp" or cmd == "jumppower" then
        local power = tonumber(args[2]) or 50
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid.JumpPower = power
            Config.jumpPower = power
            notification("Jump power set to " .. power)
        end
        
    elseif cmd == "fly" then
        State.flying = not State.flying
        
        if State.flying then
            local char = player.Character
            if char and char:FindFirstChild("HumanoidRootPart") then
                local bv = Instance.new("BodyVelocity")
                bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                bv.Velocity = Vector3.new(0, 0, 0)
                bv.Parent = char.HumanoidRootPart
                
                local bg = Instance.new("BodyGyro")
                bg.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
                bg.D = 500
                bg.P = 50000
                bg.Parent = char.HumanoidRootPart
                
                Data.flyObjects = {bv, bg}
            end
        else
            for _, obj in pairs(Data.flyObjects) do
                if obj then obj:Destroy() end
            end
            Data.flyObjects = {}
        end
        
        notification("Fly " .. (State.flying and "ON" or "OFF"))
        
    elseif cmd == "noclip" then
        State.noclip = not State.noclip
        notification("Noclip " .. (State.noclip and "ON" or "OFF"))
        
    elseif cmd == "cmds" or cmd == "help" then
        notification("Commands printed to console (F9)")
        print("=== 2take1 Hub Commands ===")
        print("ADMIN COMMANDS:")
        print("admin [player] - Give admin (OWNER ONLY)")
        print("unadmin [player] - Remove admin (OWNER ONLY)")
        print("")
        print("ADMIN/OWNER COMMANDS:")
        print("kill [player/all/others] - Kill player(s)")
        print("loopkill [player/all/others] - Loop kill player(s)")
        print("unloopkill [player] - Remove from loop kill")
        print("god [player/all/others/me] - God player(s)")
        print("killaura - Toggle kill aura")
        print("killaura range [number] - Set kill aura range")
        print("")
        print("GENERAL COMMANDS:")
        print("speed/ws [number] - Set walk speed")
        print("jp [number] - Set jump power")
        print("fly - Toggle fly mode")
        print("noclip - Toggle noclip")
        print("GENERAL COMMANDS:")
        print("speed/ws [number] - Set walk speed")
        print("jp [number] - Set jump power")
        print("fly - Toggle fly mode")
        print("noclip - Toggle noclip")
        print("Press ; to open command bar")
        
    else
        if not isAuthorized and (cmd == "kill" or cmd == "loopkill" or cmd == "god" or cmd == "killaura") then
            notification("Access denied! Admin only command.")
        else
            notification("Unknown command: " .. cmd)
        end
    end
    
    hideCommandBar()
end

local function createToggle(text, callback)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, -10, 0, 40)
    frame.BackgroundColor3 = Theme.tertiary
    frame.BorderSizePixel = 0
    frame.Parent = content
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = frame
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -60, 1, 0)
    label.Position = UDim2.new(0, 10, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = Theme.text
    label.TextSize = 14
    label.Font = Enum.Font.SourceSans
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = frame
    
    local toggle = Instance.new("TextButton")
    toggle.Size = UDim2.new(0, 40, 0, 20)
    toggle.Position = UDim2.new(1, -50, 0.5, -10)
    toggle.BackgroundColor3 = Theme.danger
    toggle.Text = "OFF"
    toggle.TextColor3 = Theme.text
    toggle.TextSize = 12
    toggle.Font = Enum.Font.SourceSansBold
    toggle.Parent = frame
    
    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 4)
    toggleCorner.Parent = toggle
    
    local enabled = false
    toggle.MouseButton1Click:Connect(function()
        enabled = not enabled
        toggle.BackgroundColor3 = enabled and Theme.success or Theme.danger
        toggle.Text = enabled and "ON" or "OFF"
        callback(enabled)
    end)
    
    return frame
end

local function createButton(text, callback)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, -10, 0, 40)
    button.BackgroundColor3 = Theme.accent
    button.Text = text
    button.TextColor3 = Theme.text
    button.TextSize = 14
    button.Font = Enum.Font.SourceSansBold
    button.BorderSizePixel = 0
    button.Parent = content
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = button
    
    button.MouseButton1Click:Connect(callback)
    
    return button
end

-- Create UI Elements
createToggle("Fast Farm", function(enabled)
    State.fastFarm = enabled
    notification("Fast Farm " .. (enabled and "ON" or "OFF"))
end)

createToggle("Slow Farm", function(enabled)
    State.slowFarm = enabled
    notification("Slow Farm " .. (enabled and "ON" or "OFF"))
end)

createToggle("God Mode", function(enabled)
    State.godMode = enabled
    notification("God Mode " .. (enabled and "ON" or "OFF"))
end)

createToggle("Kill Aura", function(enabled)
    State.killAura = enabled
    notification("Kill Aura " .. (enabled and "ON" or "OFF"))
end)

createToggle("Loop Kill", function(enabled)
    if enabled then
        if #State.loopKillTargets == 0 then
            notification("No loopkill targets! Use ;loopkill [player]")
            return
        end
        State.loopKill = true
        notification("Loop Kill ON - " .. #State.loopKillTargets .. " target(s)")
    else
        State.loopKill = false
        notification("Loop Kill OFF")
    end
end)

createToggle("Fly", function(enabled)
    State.flying = enabled
    
    if enabled then
        local char = player.Character
        if char and char:FindFirstChild("HumanoidRootPart") then
            local bv = Instance.new("BodyVelocity")
            bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
            bv.Velocity = Vector3.new(0, 0, 0)
            bv.Parent = char.HumanoidRootPart
            
            local bg = Instance.new("BodyGyro")
            bg.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
            bg.D = 500
            bg.P = 50000
            bg.Parent = char.HumanoidRootPart
            
            Data.flyObjects = {bv, bg}
        end
    else
        for _, obj in pairs(Data.flyObjects) do
            if obj then obj:Destroy() end
        end
        Data.flyObjects = {}
    end
    
    notification("Fly " .. (enabled and "ON" or "OFF"))
end)

createToggle("Noclip", function(enabled)
    State.noclip = enabled
    notification("Noclip " .. (enabled and "ON" or "OFF"))
end)

createButton("Kill All", function()
    local handles = getAllToolHandles()
    local killSuccess = false
    
    if #handles > 0 then
        for _, handle in pairs(handles) do
            if handle:FindFirstChild("dmg") then
                for _, p in pairs(Players:GetPlayers()) do
                    if p.Character and p.Character:FindFirstChild("Humanoid") and p ~= player then
                        pcall(function()
                            handle.dmg.RemoteEvent:FireServer(p.Character.Humanoid, math.huge)
                        end)
                    end
                end
                killSuccess = true
            end
        end
        
        if killSuccess then
            notification("Killed all players with " .. #handles .. " tool(s)")
        else
            notification("No damage tools found!")
        end
    else
        notification("No tools found!")
    end
end)

createButton("God All", function()
    local handles = getAllToolHandles()
    local godSuccess = false
    
    if #handles > 0 then
        for _, handle in pairs(handles) do
            if handle:FindFirstChild("dmg") then
                for _, p in pairs(Players:GetPlayers()) do
                    if p.Character and p.Character:FindFirstChild("Humanoid") then
                        pcall(function()
                            for i = 1, 999 do
                                handle.dmg.RemoteEvent:FireServer(p.Character.Humanoid, -math.huge)
                            end
                        end)
                    end
                end
                godSuccess = true
            end
        end
        
        if godSuccess then
            notification("Godded all players with " .. #handles .. " tool(s)")
        else
            notification("No damage tools found!")
        end
    else
        notification("No tools found!")
    end
end)

createButton("Reset Stats", function()
    Stats.powerGainedThisSession = 0
    Stats.killsThisSession = 0
    Stats.sessionStartTime = tick()
    Stats.lastPowerCheck = Stats.power
    notification("Stats reset!")
end)

createButton("Show Admins", function()
    if #Data.adminPlayers == 0 then
        notification("No admins currently")
    else
        notification("Admins: " .. table.concat(Data.adminPlayers, ", "))
        print("=== Current Admins ===")
        for i, adminName in pairs(Data.adminPlayers) do
            print(i .. ". " .. adminName)
        end
    end
end)

createButton("Clear Loop Kill", function()
    State.loopKillTargets = {}
    State.loopKill = false
    notification("Cleared all loopkill targets")
end)

createButton("Reset Character", function()
    if loadEvent then
        pcall(function()
            loadEvent:FireServer()
        end)
    elseif player.Character and player.Character:FindFirstChild("Humanoid") then
        player.Character.Humanoid.Health = 0
    end
    notification("Character reset")
end)

createButton("Rejoin", function()
    notification("Rejoining...")
    wait(1)
    TeleportService:Teleport(game.PlaceId, player)
end)

-- Command Bar Events
executeButton.MouseButton1Click:Connect(function()
    executeCommand(commandInput.Text)
end)

commandInput.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        executeCommand(commandInput.Text)
    else
        hideCommandBar()
    end
end)

-- Input handling
UIS.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == Enum.KeyCode.Semicolon then
        showCommandBar()
    elseif input.KeyCode == Enum.KeyCode.Escape and State.commandBarVisible then
        hideCommandBar()
    end
end)

-- Close button
closeButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
    for _, connection in pairs(Data.connections) do
        if connection then connection:Disconnect() end
    end
end)

-- Admin chat monitoring
local function setupPlayerChatting(targetPlayer)
    if targetPlayer == player then return end
    
    targetPlayer.Chatted:Connect(function(msg)
        if msg:sub(1, 1) ~= Config.commandPrefix then return end
        
        if table.find(Data.adminPlayers, targetPlayer.Name) then
            local args = msg:sub(2):split(" ")
            local cmd = args[1]:lower()
            
            if cmd == "kill" or cmd == "loopkill" or cmd == "unloopkill" or cmd == "god" or cmd == "killaura" then
                executeCommand(msg, targetPlayer)
                notification("Admin " .. targetPlayer.Name .. " used: " .. msg)
            end
        end
    end)
end

-- Setup chat monitoring for existing players
for _, existingPlayer in pairs(Players:GetPlayers()) do
    setupPlayerChatting(existingPlayer)
end

-- Setup chat monitoring for new players
Players.PlayerAdded:Connect(setupPlayerChatting)

-- Stats update loop
Data.connections.stats = RunService.Heartbeat:Connect(function()
    updateStats()
end)

-- Main Loop
Data.connections.main = RunService.Heartbeat:Connect(function()
    if not player.Character then return end
    
    local char = player.Character
    local humanoid = char:FindFirstChild("Humanoid")
    local rootPart = char:FindFirstChild("HumanoidRootPart")
    
    if not humanoid or not rootPart then return end
    
    -- Fast Farm
    if State.fastFarm then
        local handles = getAllToolHandles()
        for _, handle in pairs(handles) do
            if handle:FindFirstChild("up") then
                pcall(function()
                    for i = 1, Config.speed do
                        handle.up.RemoteEvent:FireServer()
                    end
                end)
            end
        end
    end
    
    -- Slow Farm
    if State.slowFarm then
        local handles = getAllToolHandles()
        for _, handle in pairs(handles) do
            if handle:FindFirstChild("up") then
                pcall(function()
                    handle.up.RemoteEvent:FireServer()
                end)
            end
        end
    end
    
    -- God Mode
    if State.godMode then
        local pvp = char:FindFirstChild("pvp")
        if pvp then pvp:Destroy() end
    end
    
    -- Loop Kill
    if State.loopKill and #State.loopKillTargets > 0 then
        local handles = getAllToolHandles()
        for _, handle in pairs(handles) do
            if handle:FindFirstChild("dmg") then
                for _, targetName in pairs(State.loopKillTargets) do
                    local targetPlayer = Players:FindFirstChild(targetName)
                    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Humanoid") then
                        pcall(function()
                            for i = 1, 3 do
                                handle.dmg.RemoteEvent:FireServer(targetPlayer.Character.Humanoid, math.huge)
                            end
                        end)
                    end
                end
            end
        end
    end
    
    -- Kill Aura
    if State.killAura then
        local handles = getAllToolHandles()
        for _, handle in pairs(handles) do
            if handle:FindFirstChild("dmg") then
                for _, v in pairs(workspace:GetChildren()) do
                    if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v ~= char then
                        -- Don't kill admins or the script owner
                        local isProtected = false
                        for _, p in pairs(Players:GetPlayers()) do
                            if p.Character == v and (table.find(Data.adminPlayers, p.Name) or p == player) then
                                isProtected = true
                                break
                            end
                        end
                        
                        if not isProtected then
                            local distance = (rootPart.Position - v.HumanoidRootPart.Position).Magnitude
                            if distance <= Config.range then
                                pcall(function()
                                    handle.dmg.RemoteEvent:FireServer(v.Humanoid, 1000)
                                end)
                            end
                        end
                    end
                end
            end
        end
    end
    
    -- Fly
    if State.flying and Data.flyObjects[1] and Data.flyObjects[2] then
        local bv = Data.flyObjects[1]
        local bg = Data.flyObjects[2]
        
        if bv.Parent and bg.Parent then
            local camera = workspace.CurrentCamera
            local moveVector = Vector3.new(0, 0, 0)
            
            if UIS:IsKeyDown(Enum.KeyCode.W) then
                moveVector = moveVector + camera.CFrame.LookVector
            end
            if UIS:IsKeyDown(Enum.KeyCode.S) then
                moveVector = moveVector - camera.CFrame.LookVector
            end
            if UIS:IsKeyDown(Enum.KeyCode.A) then
                moveVector = moveVector - camera.CFrame.RightVector
            end
            if UIS:IsKeyDown(Enum.KeyCode.D) then
                moveVector = moveVector + camera.CFrame.RightVector
            end
            if UIS:IsKeyDown(Enum.KeyCode.Space) then
                moveVector = moveVector + Vector3.new(0, 1, 0)
            end
            if UIS:IsKeyDown(Enum.KeyCode.LeftShift) then
                moveVector = moveVector - Vector3.new(0, 1, 0)
            end
            
            bv.Velocity = moveVector * Config.flySpeed
            bg.CFrame = camera.CFrame
        end
    end
    
    -- Noclip
    if State.noclip then
        for _, part in pairs(char:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end
end)

-- Character added
player.CharacterAdded:Connect(function(char)
    character = char
    wait(1)
    
    local humanoid = char:WaitForChild("Humanoid")
    humanoid.WalkSpeed = Config.walkSpeed
    humanoid.JumpPower = Config.jumpPower
end)

-- Chat commands for script owner
player.Chatted:Connect(function(msg)
    if msg:sub(1, 1) ~= Config.commandPrefix then return end
    executeCommand(msg)
end)

-- Initial setup
table.insert(Data.adminPlayers, player.Name) -- Make script owner admin by default

-- Initialize stats
spawn(function()
    wait(0) -- Wait for leaderstats to load
    if player:FindFirstChild("leaderstats") then
        local leaderstats = player.leaderstats
        local powerStat = leaderstats:FindFirstChild("Power") or leaderstats:FindFirstChild("power") or leaderstats:FindFirstChild("Strength") or leaderstats:FindFirstChild("strength")
        if powerStat then
            Stats.lastPowerCheck = powerStat.Value
            Stats.power = powerStat.Value
        end
    end
end)

-- Initial notifications
notification("2take1 Hub Loaded!")
wait(1)
notification("Press ; for command bar | Stats tracking enabled")
wait(1)
notification("Use ;admin [player] to give admin permissions")
