-- Sword Auto-Fire Module
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Config
local BATCH_SIZE = "5K"  -- Can use "5K" for 1000 or just numbers
local BATCH_DELAY = 10    -- seconds between batches

-- Parse batch size (supports "1K" format)
local function parseBatch(size)
    if type(size) == "number" then return size end
    local num, suffix = size:match("^(%d+%.?%d*)([Kk]?)$")
    return math.floor(suffix:upper() == "K" and tonumber(num) * 1000 or tonumber(num))
end

-- Main auto-fire logic
local function autoFire()
    local char = player.Character
    if not char then return end
    
    -- Move backpack items to character
    for _, tool in ipairs(player.Backpack:GetChildren()) do
        tool.Parent = char
    end
    
    -- Find sword remote
    local sword = char:FindFirstChild("sword") or player.Backpack:FindFirstChild("sword")
    local remote = sword and sword:FindFirstChild("Handle")
                        and sword.Handle:FindFirstChild("up")
                        and sword.Handle.up:FindFirstChild("RemoteEvent")
    
    if not remote then 
        warn("Sword RemoteEvent not found")
        return 
    end
    
    -- Fire loop
    local batchSize = parseBatch(BATCH_SIZE)
    while remote.Parent do
        for i = 1, batchSize do
            remote:FireServer()
        end
        task.wait(BATCH_DELAY)
    end
end

-- Hook to character spawn
player.CharacterAdded:Connect(function()
    task.wait(1)
    task.spawn(autoFire)
end)

-- Run for current character
if player.Character then
    task.spawn(autoFire)
end
