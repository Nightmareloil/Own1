local DiscordLib = {}
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")
local LocalPlayer = game:GetService("Players").LocalPlayer

-- Constants for UI sizes and colors
local WINDOW_SIZE = UDim2.new(0, 681, 0, 396)
local SERVER_SIZE = UDim2.new(0, 47, 0, 47)
local CHANNEL_SIZE = UDim2.new(0, 179, 0, 36)
local DEFAULT_THEME = {
    Background = Color3.fromRGB(32, 34, 37),
    Secondary = Color3.fromRGB(47, 49, 54),
    Text = Color3.fromRGB(255, 255, 255),
    TextSecondary = Color3.fromRGB(171, 172, 176),
    Button = Color3.fromRGB(114, 137, 228),
    ButtonHover = Color3.fromRGB(103, 123, 196)
}

-- User data management
local userInfo = {
    pfp = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. LocalPlayer.UserId .. "&width=420&height=420&format=png",
    user = LocalPlayer.Name,
    tag = tostring(math.random(1000, 9999))
}

-- Load user info with error handling
local success, err = pcall(function()
    if isfile("discordlibinfo.txt") then
        userInfo = HttpService:JSONDecode(readfile("discordlibinfo.txt"))
    end
end)
if not success then
    warn("Failed to load user info: " .. err)
end

-- Save user info
local function saveInfo()
    local success, err = pcall(function()
        writefile("discordlibinfo.txt", HttpService:JSONEncode(userInfo))
    end)
    if not success then
        DiscordLib:Notification("Error", "Failed to save user info: " .. err, "OK")
    end
end

-- Utility function for tweening
local function tweenObject(object, properties, duration, easingStyle, easingDirection)
    local tweenInfo = TweenInfo.new(duration or 0.3, easingStyle or Enum.EasingStyle.Quad, easingDirection or Enum.EasingDirection.Out)
    local tween = TweenService:Create(object, tweenInfo, properties)
    tween:Play()
    return tween
end

-- Draggable function
local function makeDraggable(topbar, object)
    local dragging, dragInput, dragStart, startPos
    topbar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = object.Position
        end
    end)
    topbar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            object.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    topbar.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)
end

-- Main Discord UI
local Discord = Instance.new("ScreenGui")
Discord.Name = "Discord"
Discord.Parent = game.CoreGui
Discord.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

function DiscordLib:Window(title)
    local currentServer = nil
    local minimized = false
    local settingsOpen = false
    local theme = DEFAULT_THEME
    local uiElements = {}

    -- Main Frame
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Parent = Discord
    MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    MainFrame.BackgroundColor3 = theme.Background
    MainFrame.BorderSizePixel = 0
    MainFrame.ClipsDescendants = true
    MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
    MainFrame.Size = WINDOW_SIZE
    table.insert(uiElements, MainFrame)

    -- Top Frame
    local TopFrame = Instance.new("Frame")
    TopFrame.Name = "TopFrame"
    TopFrame.Parent = MainFrame
    TopFrame.BackgroundTransparency = 1
    TopFrame.Size = UDim2.new(1, 0, 0, 22)
    table.insert(uiElements, TopFrame)

    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Parent = TopFrame
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Position = UDim2.new(0.01, 0, 0, 0)
    TitleLabel.Size = UDim2.new(0, 192, 0, 23)
    TitleLabel.Font = Enum.Font.Gotham
    TitleLabel.Text = title
    TitleLabel.TextColor3 = theme.Text
    TitleLabel.TextSize = 13
    TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    table.insert(uiElements, TitleLabel)

    local CloseBtn = Instance.new("TextButton")
    CloseBtn.Parent = TopFrame
    CloseBtn.BackgroundColor3 = theme.Background
    CloseBtn.Position = UDim2.new(0.959, 0, 0, 0)
    CloseBtn.Size = UDim2.new(0, 28, 0, 22)
    CloseBtn.Text = "X"
    CloseBtn.TextColor3 = theme.Text
    CloseBtn.Font = Enum.Font.Gotham
    CloseBtn.TextSize = 14
    CloseBtn.MouseButton1Click:Connect(function()
        tweenObject(MainFrame, {Size = UDim2.new(0, 0, 0, 0)}, 0.3, Enum.EasingStyle.Quart).Completed:Connect(function()
            Discord:Destroy()
        end)
    end)
    CloseBtn.MouseEnter:Connect(function()
        tweenObject(CloseBtn, {BackgroundColor3 = Color3.fromRGB(240, 71, 71)}, 0.2)
    end)
    CloseBtn.MouseLeave:Connect(function()
        tweenObject(CloseBtn, {BackgroundColor3 = theme.Background}, 0.2)
    end)
    table.insert(uiElements, CloseBtn)

    local MinimizeBtn = Instance.new("TextButton")
    MinimizeBtn.Parent = TopFrame
    MinimizeBtn.BackgroundColor3 = theme.Background
    MinimizeBtn.Position = UDim2.new(0.918, 0, 0, 0)
    MinimizeBtn.Size = UDim2.new(0, 28, 0, 22)
    MinimizeBtn.Text = "-"
    MinimizeBtn.TextColor3 = theme.Text
    MinimizeBtn.Font = Enum.Font.Gotham
    MinimizeBtn.TextSize = 14
    MinimizeBtn.MouseButton1Click:Connect(function()
        minimized = not minimized
        tweenObject(MainFrame, {Size = minimized and UDim2.new(0, 681, 0, 22) or WINDOW_SIZE}, 0.3, Enum.EasingStyle.Quart)
    end)
    MinimizeBtn.MouseEnter:Connect(function()
        tweenObject(MinimizeBtn, {BackgroundColor3 = theme.Secondary}, 0.2)
    end)
    MinimizeBtn.MouseLeave:Connect(function()
        tweenObject(MinimizeBtn, {BackgroundColor3 = theme.Background}, 0.2)
    end)
    table.insert(uiElements, MinimizeBtn)

    -- Servers Holder
    local ServersHold = Instance.new("ScrollingFrame")
    ServersHold.Parent = MainFrame
    ServersHold.BackgroundTransparency = 1
    ServersHold.Position = UDim2.new(0, 0, 0.06, 0)
    ServersHold.Size = UDim2.new(0, 71, 0, 373)
    ServersHold.ScrollBarThickness = 1
    ServersHold.CanvasSize = UDim2.new(0, 0, 0, 0)
    table.insert(uiElements, ServersHold)

    local ServersLayout = Instance.new("UIListLayout")
    ServersLayout.Parent = ServersHold
    ServersLayout.SortOrder = Enum.SortOrder.LayoutOrder
    ServersLayout.Padding = UDim.new(0, 7)
    ServersLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        ServersHold.CanvasSize = UDim2.new(0, 0, 0, ServersLayout.AbsoluteContentSize.Y)
    end)

    -- User Pad
    local Userpad = Instance.new("Frame")
    Userpad.Parent = MainFrame
    Userpad.BackgroundColor3 = theme.Secondary
    Userpad.Position = UDim2.new(0.106, 0, 0.9, 0)
    Userpad.Size = UDim2.new(0, 179, 0, 43)
    table.insert(uiElements, Userpad)

    local UserImage = Instance.new("ImageLabel")
    UserImage.Parent = Userpad
    UserImage.BackgroundTransparency = 1
    UserImage.Position = UDim2.new(0.034, 0, 0.124, 0)
    UserImage.Size = UDim2.new(0, 32, 0, 32)
    UserImage.Image = userInfo.pfp
    table.insert(uiElements, UserImage)

    local UserName = Instance.new("TextLabel")
    UserName.Parent = Userpad
    UserName.BackgroundTransparency = 1
    UserName.Position = UDim2.new(0.23,.ConcurrentModificationException 0, 0.116, 0)
    UserName.Size = UDim2.new(0, 98, 0, 17)
    UserName.Font = Enum.Font.GothamSemibold
    UserName.TextColor3 = theme.Text
    UserName.TextSize = 13
    UserName.Text = userInfo.user
    UserName.TextXAlignment = Enum.TextXAlignment.Left
    table.insert(uiElements, UserName)

    local UserTag = Instance.new("TextLabel")
    UserTag.Parent = Userpad
    UserTag.BackgroundTransparency = 1
    UserTag.Position = UDim2.new(0.23, 0, 0.455, 0)
    UserTag.Size = UDim2.new(0, 95, 0, 17)
    UserTag.Font = Enum.Font.Gotham
    UserTag.TextColor3 = theme.TextSecondary
    UserTag.Text = "#" .. userInfo.tag
    UserTag.TextXAlignment = Enum.TextXAlignment.Left
    table.insert(uiElements, UserTag)

    local SettingsBtn = Instance.new("TextButton")
    SettingsBtn.Parent = Userpad
    SettingsBtn.BackgroundTransparency = 1
    SettingsBtn.Position = UDim2.new(0.849, 0, 0.279, 0)
    SettingsBtn.Size = UDim2.new(0, 18, 0, 18)
    SettingsBtn.Text = "⚙️"
    SettingsBtn.TextColor3 = theme.Text
    SettingsBtn.Font = Enum.Font.Gotham
    SettingsBtn.TextSize = 14
    table.insert(uiElements, SettingsBtn)

    -- Settings Frame
    local SettingsFrame = Instance.new("Frame")
    SettingsFrame.Parent = MainFrame
    SettingsFrame.BackgroundColor3 = theme.Background
    SettingsFrame.Position = UDim2.new(0.106, 0, 0.06, 0)
    SettingsFrame.Size = UDim2.new(0, 609, 0, 373)
    SettingsFrame.Visible = false
    table.insert(uiElements, SettingsFrame)

    local SettingsTitle = Instance.new("TextLabel")
    SettingsTitle.Parent = SettingsFrame
    SettingsTitle.BackgroundTransparency = 1
    SettingsTitle.Size = UDim2.new(0, 609, 0, 50)
    SettingsTitle.Font = Enum.Font.GothamSemibold
    SettingsTitle.Text = "Settings"
    SettingsTitle.TextColor3 = theme.Text
    SettingsTitle.TextSize = 20
    table.insert(uiElements, SettingsTitle)

    local AvatarBox = Instance.new("TextBox")
    AvatarBox.Parent = SettingsFrame
    AvatarBox.BackgroundColor3 = theme.Secondary
    AvatarBox.Position = UDim2.new(0.05, 0, 0.2, 0)
    AvatarBox.Size = UDim2.new(0, 300, 0, 30)
    AvatarBox.Font = Enum.Font.Gotham
    AvatarBox.TextColor3 = theme.Text
    AvatarBox.TextSize = 14
    AvatarBox.Text = userInfo.pfp
    AvatarBox.PlaceholderText = "Enter Roblox decal URL"
    table.insert(uiElements, AvatarBox)

    local UsernameBox = Instance.new("TextBox")
    UsernameBox.Parent = SettingsFrame
    UsernameBox.BackgroundColor3 = theme.Secondary
    UsernameBox.Position = UDim2.new(0.05, 0, 0.35, 0)
    UsernameBox.Size = UDim2.new(0, 200, 0, 30)
    UsernameBox.Font = Enum.Font.Gotham
    UsernameBox.TextColor3 = theme.Text
    UsernameBox.TextSize = 14
    UsernameBox.Text = userInfo.user
    UsernameBox.PlaceholderText = "Enter username (max 16 chars)"
    table.insert(uiElements, UsernameBox)

    local TagBox = Instance.new("TextBox")
    TagBox.Parent = SettingsFrame
    TagBox.BackgroundColor3 = theme.Secondary
    TagBox.Position = UDim2.new(0.4, 0, 0.35, 0)
    TagBox.Size = UDim2.new(0, 100, 0, 30)
    TagBox.Font = Enum.Font.Gotham
    TagBox.TextColor3 = theme.Text
    TagBox.TextSize = 14
    TagBox.Text = userInfo.tag
    TagBox.PlaceholderText = "Tag (4 digits)"
    table.insert(uiElements, TagBox)

    local ApplyBtn = Instance.new("TextButton")
    ApplyBtn.Parent = SettingsFrame
    ApplyBtn.BackgroundColor3 = theme.Button
    ApplyBtn.Position = UDim2.new(0.05, 0, 0.5, 0)
    ApplyBtn.Size = UDim2.new(0, 100, 0, 30)
    ApplyBtn.Font = Enum.Font.Gotham
    ApplyBtn.Text = "Apply"
    ApplyBtn.TextColor3 = theme.Text
    ApplyBtn.TextSize = 14
    ApplyBtn.MouseButton1Click:Connect(function()
        local newPfp = AvatarBox.Text
        local newUser = UsernameBox.Text
        local newTag = TagBox.Text
        if newPfp:match("^https?://") then
            userInfo.pfp = newPfp
            UserImage.Image = newPfp
        end
        if #newUser <= 16 then
            userInfo.user = newUser
            UserName.Text = newUser
        end
        if newTag:match("^%d%d%d%d$") then
            userInfo.tag = newTag
            UserTag.Text = "#" .. newTag
        end
        saveInfo()
    end)
    ApplyBtn.MouseEnter:Connect(function()
        tweenObject(ApplyBtn, {BackgroundColor3 = theme.ButtonHover}, 0.2)
    end)
    ApplyBtn.MouseLeave:Connect(function()
        tweenObject(ApplyBtn, {BackgroundColor3 = theme.Button}, 0.2)
    end)
    table.insert(uiElements, ApplyBtn)

    SettingsBtn.MouseButton1Click:Connect(function()
        settingsOpen = not settingsOpen
        SettingsFrame.Visible = settingsOpen
        for _, serverFrame in pairs(MainFrame:GetChildren()) do
            if serverFrame.Name:match("ServerFrame") then
                serverFrame.Visible = not settingsOpen and serverFrame == currentServer
            end
        end
    end)

    makeDraggable(TopFrame, MainFrame)

    -- Notification function
    function DiscordLib:Notification(titleText, descText, btnText)
        local NotificationHolder = Instance.new("TextButton")
        NotificationHolder.Parent = MainFrame
        NotificationHolder.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        NotificationHolder.BackgroundTransparency = 1
        NotificationHolder.Size = UDim2.new(1, 0, 1, 0)
        NotificationHolder.Text = ""
        NotificationHolder.ZIndex = 10
        tweenObject(NotificationHolder, {BackgroundTransparency = 0.5}, 0.2)

        local Notification = Instance.new("Frame")
        Notification.Parent = NotificationHolder
        Notification.AnchorPoint = Vector2.new(0.5, 0.5)
        Notification.BackgroundColor3 = theme.Background
        Notification.Position = UDim2.new(0.5, 0, 0.5, 0)
        Notification.Size = UDim2.new(0, 0, 0, 0)
        Notification.ZIndex = 11
        tweenObject(Notification, {Size = UDim2.new(0, 346, 0, 176)}, 0.2, Enum.EasingStyle.Quart)

        local Title = Instance.new("TextLabel")
        Title.Parent = Notification
        Title.BackgroundTransparency = 1
        Title.Size = UDim2.new(0, 346, 0, 68)
        Title.Font = Enum.Font.GothamSemibold
        Title.Text = titleText
        Title.TextColor3 = theme.Text
        Title.TextSize = 20
        Title.ZIndex = 12

        local Desc = Instance.new("TextLabel")
        Desc.Parent = Notification
        Desc.BackgroundTransparency = 1
        Desc.Position = UDim2.new(0.106, 0, 0.318, 0)
        Desc.Size = UDim2.new(0, 272, 0, 63)
        Desc.Font = Enum.Font.Gotham
        Desc.Text = descText
        Desc.TextColor3 = theme.TextSecondary
        Desc.TextSize = 14
        Desc.TextWrapped = true
        Desc.ZIndex = 12

        local Btn = Instance.new("TextButton")
        Btn.Parent = Notification
        Btn.BackgroundColor3 = theme.Button
        Btn.Position = UDim2.new(0.033, 0, 0.789, 0)
        Btn.Size = UDim2.new(0, 322, 0, 27)
        Btn.Font = Enum.Font.Gotham
        Btn.Text = btnText
        Btn.TextColor3 = theme.Text
        Btn.TextSize = 13
        Btn.ZIndex = 12
        Btn.MouseButton1Click:Connect(function()
            tweenObject(Notification, {Size = UDim2.new(0, 0, 0, 0)}, 0.2, Enum.EasingStyle.Quart)
            tweenObject(NotificationHolder, {BackgroundTransparency = 1}, 0.2).Completed:Connect(function()
                NotificationHolder:Destroy()
            end)
        end)
        Btn.MouseEnter:Connect(function()
            tweenObject(Btn, {BackgroundColor3 = theme.ButtonHover}, 0.2)
        end)
        Btn.MouseLeave:Connect(function()
            tweenObject(Btn, {BackgroundColor3 = theme.Button}, 0.2)
        end)
    end

    -- Theme management
    function DiscordLib:SetTheme(newTheme)
        theme = newTheme
        for _, element in pairs(uiElements) do
            if element:IsA("Frame") and element ~= SettingsFrame then
                element.BackgroundColor3 = theme.Background
            elseif element:IsA("TextLabel") or element:IsA("TextButton") then
                element.TextColor3 = theme.Text
            end
        end
        -- Update specific elements
        CloseBtn.BackgroundColor3 = theme.Background
        MinimizeBtn.BackgroundColor3 = theme.Background
        Userpad.BackgroundColor3 = theme.Secondary
        UserTag.TextColor3 = theme.TextSecondary
        ApplyBtn.BackgroundColor3 = theme.Button
    end

    local ServerHold = {}
    function ServerHold:Server(text, img)
        local Server = Instance.new("TextButton")
        Server.Parent = ServersHold
        Server.BackgroundColor3 = theme.Secondary
        Server.Size = SERVER_SIZE
        Server.Font = Enum.Font.Gotham
        Server.Text = img == "" and text:sub(1, 1) or ""
        Server.TextColor3 = theme.Text
        Server.TextSize = 18
        Server.Name = "Server_" .. text
        table.insert(uiElements, Server)

        if img ~= "" then
            local ServerImg = Instance.new("ImageLabel")
            ServerImg.Parent = Server
            ServerImg.BackgroundTransparency = 1
            ServerImg.Size = UDim2.new(1, 0, 1, 0)
            ServerImg.Image = img
        end

        local ServerFrame = Instance.new("Frame")
        ServerFrame.Name = "ServerFrame_" .. text
        ServerFrame.Parent = MainFrame
        ServerFrame.BackgroundColor3 = theme.Background
        ServerFrame.Position = UDim2.new(0.105, 0, 0.06, 0)
        ServerFrame.Size = UDim2.new(0, 609, 0, 373)
        ServerFrame.Visible = false
        table.insert(uiElements, ServerFrame)

        local ChannelsHold = Instance.new("ScrollingFrame")
        ChannelsHold.Parent = ServerFrame
        ChannelsHold.BackgroundTransparency = 1
        ChannelsHold.Position = UDim2.new(0, 0, 0, 0)
        ChannelsHold.Size = UDim2.new(0, 179, 0, 373)
        ChannelsHold.ScrollBarThickness = 1
        ChannelsHold.CanvasSize = UDim2.new(0, 0, 0, 0)

        local ChannelsLayout = Instance.new("UIListLayout")
        ChannelsLayout.Parent = ChannelsHold
        ChannelsLayout.SortOrder = Enum.SortOrder.LayoutOrder
        ChannelsLayout.Padding = UDim.new(0, 5)
        ChannelsLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            ChannelsHold.CanvasSize = UDim2.new(0, 0, 0, ChannelsLayout.AbsoluteContentSize.Y)
        end)

        local ChannelContentFrame = Instance.new("Frame")
        ChannelContentFrame.Parent = ServerFrame
        ChannelContentFrame.BackgroundTransparency = 1
        ChannelContentFrame.Position = UDim2.new(0.294, 0, 0, 0)
        ChannelContentFrame.Size = UDim2.new(0, 430, 0, 373)

        Server.MouseButton1Click:Connect(function()
            currentServer = ServerFrame
            for _, v in pairs(MainFrame:GetChildren()) do
                if v.Name:match("ServerFrame") then
                    v.Visible = v == ServerFrame and not settingsOpen
                end
            end
            tweenObject(Server, {BackgroundColor3 = theme.Button}, 0.2)
            for _, otherServer in pairs(ServersHold:GetChildren()) do
                if otherServer:IsA("TextButton") and otherServer ~= Server then
                    tweenObject(otherServer, {BackgroundColor3 = theme.Secondary}, 0.2)
                end
            end
        end)

        local ChannelHold = {}
        function ChannelHold:Channel(channelName)
            local Channel = Instance.new("TextButton")
            Channel.Parent = ChannelsHold
            Channel.BackgroundColor3 = theme.Secondary
            Channel.Size = CHANNEL_SIZE
            Channel.Font = Enum.Font.Gotham
            Channel.Text = "#" .. channelName
            Channel.TextColor3 = theme.Text
            Channel.TextSize = 14
            Channel.TextXAlignment = Enum.TextXAlignment.Left
            table.insert(uiElements, Channel)

            local ContentFrame = Instance.new("Frame")
            ContentFrame.Parent = ChannelContentFrame
            ContentFrame.BackgroundTransparency = 1
            ContentFrame.Size = UDim2.new(1, 0, 1, 0)
            ContentFrame.Visible = false

            local ContentLayout = Instance.new("UIListLayout")
            ContentLayout.Parent = ContentFrame
            ContentLayout.SortOrder = Enum.SortOrder.LayoutOrder
            ContentLayout.Padding = UDim.new(0, 10)

            Channel.MouseButton1Click:Connect(function()
                for _, frame in pairs(ChannelContentFrame:GetChildren()) do
                    if frame:IsA("Frame") then
                        frame.Visible = frame == ContentFrame
                    end
                end
                tweenObject(Channel, {BackgroundColor3 = theme.Button}, 0.2)
                for _, otherChannel in pairs(ChannelsHold:GetChildren()) do
                    if otherChannel:IsA("TextButton") and otherChannel ~= Channel then
                        tweenObject(otherChannel, {BackgroundColor3 = theme.Secondary}, 0.2)
                    end
                end
            end)

            local ChannelContent = {}
            function ChannelContent:Button(text, callback)
                local Btn = Instance.new("TextButton")
                Btn.Parent = ContentFrame
                Btn.BackgroundColor3 = theme.Button
                Btn.Size = UDim2.new(0, 200, 0, 30)
                Btn.Font = Enum.Font.Gotham
                Btn.Text = text
                Btn.TextColor3 = theme.Text
                Btn.TextSize = 14
                Btn.MouseButton1Click:Connect(callback)
                Btn.MouseEnter:Connect(function()
                    tweenObject(Btn, {BackgroundColor3 = theme.ButtonHover}, 0.2)
                end)
                Btn.MouseLeave:Connect(function()
                    tweenObject(Btn, {BackgroundColor3 = theme.Button}, 0.2)
                end)
                table.insert(uiElements, Btn)
            end

            function ChannelContent:Toggle(text, callback)
                local ToggleFrame = Instance.new("Frame")
                ToggleFrame.Parent = ContentFrame
                ToggleFrame.BackgroundTransparency = 1
                ToggleFrame.Size = UDim2.new(0, 200, 0, 30)

                local Label = Instance.new("TextLabel")
                Label.Parent = ToggleFrame
                Label.BackgroundTransparency = 1
                Label.Size = UDim2.new(0, 150, 0, 30)
                Label.Font = Enum.Font.Gotham
                Label.Text = text
                Label.TextColor3 = theme.Text
                Label.TextSize = 14
                Label.TextXAlignment = Enum.TextXAlignment.Left
                table.insert(uiElements, Label)

                local Toggle = Instance.new("TextButton")
                Toggle.Parent = ToggleFrame
                Toggle.BackgroundColor3 = theme.Secondary
                Toggle.Position = UDim2.new(0.75, 0, 0.25, 0)
                Toggle.Size = UDim2.new(0, 40, 0, 20)
                Toggle.Text = ""
                local state = false
                local Circle = Instance.new("Frame")
                Circle.Parent = Toggle
                Circle.BackgroundColor3 = theme.Text
                Circle.Size = UDim2.new(0, 16, 0, 16)
                Circle.Position = UDim2.new(0, 2, 0, 2)
                Circle.BorderSizePixel = 0
                local UICorner = Instance.new("UICorner")
                UICorner.CornerRadius = UDim.new(1, 0)
                UICorner.Parent = Circle
                table.insert(uiElements, Toggle)

                Toggle.MouseButton1Click:Connect(function()
                    state = not state
                    tweenObject(Circle, {Position = UDim2.new(state and 0.5 or 0, 2, 0, 2)}, 0.2)
                    tweenObject(Toggle, {BackgroundColor3 = state and theme.Button or theme.Secondary}, 0.2)
                    callback(state)
                end)
            end

            function ChannelContent:Slider(text, min, max, callback)
                local SliderFrame = Instance.new("Frame")
                SliderFrame.Parent = ContentFrame
                SliderFrame.BackgroundTransparency = 1
                SliderFrame.Size = UDim2.new(0, 200, 0, 50)

                local Label = Instance.new("TextLabel")
                Label.Parent = SliderFrame
                Label.BackgroundTransparency = 1
                Label.Size = UDim2.new(0, 200, 0, 20)
                Label.Font = Enum.Font.Gotham
                Label.Text = text
                Label.TextColor3 = theme.Text
                Label.TextSize = 14
                table.insert(uiElements, Label)

                local Slider = Instance.new("Frame")
                Slider.Parent = SliderFrame
                Slider.BackgroundColor3 = theme.Secondary
                Slider.Position = UDim2.new(0, 0, 0.5, 0)
                Slider.Size = UDim2.new(0, 200, 0, 10)

                local Fill = Instance.new("Frame")
                Fill.Parent = Slider
                Fill.BackgroundColor3 = theme.Button
                Fill.Size = UDim2.new(0, 0, 1, 0)

                local dragging = false
                Slider.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        dragging = true
                    end
                end)
                Slider.InputEnded:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        dragging = false
                    end
                end)
                UserInputService.InputChanged:Connect(function(input)
                    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                        local mouseX = input.Position.X - Slider.AbsolutePosition.X
                        local value = math.clamp(mouseX / Slider.AbsoluteSize.X, 0, 1)
                        Fill.Size = UDim2.new(value, 0, 1, 0)
                        callback(min + (max - min) * value)
                    end
                end)
                table.insert(uiElements, Slider)
            end

            function ChannelContent:Dropdown(text, options, callback)
                local DropdownFrame = Instance.new("Frame")
                DropdownFrame.Parent = ContentFrame
                DropdownFrame.BackgroundTransparency = 1
                DropdownFrame.Size = UDim2.new(0, 200, 0, 30)

                local Btn = Instance.new("TextButton")
                Btn.Parent = DropdownFrame
                Btn.BackgroundColor3 = theme.Button
                Btn.Size = UDim2.new(0, 200, 0, 30)
                Btn.Font = Enum.Font.Gotham
                Btn.Text = text
                Btn.TextColor3 = theme.Text
                Btn.TextSize = 14
                table.insert(uiElements, Btn)

                local OptionsFrame = Instance.new("Frame")
                OptionsFrame.Parent = DropdownFrame
                OptionsFrame.BackgroundColor3 = theme.Secondary
                OptionsFrame.Position = UDim2.new(0, 0, 1, 0)
                OptionsFrame.Size = UDim2.new(0, 200, 0, 0)
                OptionsFrame.ClipsDescendants = true
                OptionsFrame.Visible = false

                local OptionsLayout = Instance.new("UIListLayout")
                OptionsLayout.Parent = OptionsFrame
                OptionsLayout.SortOrder = Enum.SortOrder.LayoutOrder

                Btn.MouseButton1Click:Connect(function()
                    OptionsFrame.Visible = not OptionsFrame.Visible
                    tweenObject(OptionsFrame, {Size = OptionsFrame.Visible and UDim2.new(0, 200, 0, #options * 30) or UDim2.new(0, 200, 0, 0)}, 0.2)
                end)

                for _, option in pairs(options) do
                    local OptBtn = Instance.new("TextButton")
                    OptBtn.Parent = OptionsFrame
                    OptBtn.BackgroundColor3 = theme.Secondary
                    OptBtn.Size = UDim2.new(0, 200, 0, 30)
                    OptBtn.Font = Enum.Font.Gotham
                    OptBtn.Text = option
                    OptBtn.TextColor3 = theme.Text
                    OptBtn.TextSize = 14
                    OptBtn.MouseButton1Click:Connect(function()
                        Btn.Text = option
                        OptionsFrame.Visible = false
                        tweenObject(OptionsFrame, {Size = UDim2.new(0, 200, 0, 0)}, 0.2)
                        callback(option)
                    end)
                    OptBtn.MouseEnter:Connect(function()
                        tweenObject(OptBtn, {BackgroundColor3 = theme.Button}, 0.2)
                    end)
                    OptBtn.MouseLeave:Connect(function()
                        tweenObject(OptBtn, {BackgroundColor3 = theme.Secondary}, 0.2)
                    end)
                end
            end

            function ChannelContent:ColorPicker(text, callback)
                local PickerFrame = Instance.new("Frame")
                PickerFrame.Parent = ContentFrame
                PickerFrame.BackgroundTransparency = 1
                PickerFrame.Size = UDim2.new(0, 200, 0, 150)

                local Label = Instance.new("TextLabel")
                Label.Parent = PickerFrame
                Label.BackgroundTransparency = 1
                Label.Size = UDim2.new(0, 200, 0, 20)
                Label.Font = Enum.Font.Gotham
                Label.Text = text
                Label.TextColor3 = theme.Text
                Label.TextSize = 14
                table.insert(uiElements, Label)

                local Preview = Instance.new("Frame")
                Preview.Parent = PickerFrame
                Preview.BackgroundColor3 = Color3.new(1, 1, 1)
                Preview.Position = UDim2.new(0, 0, 0.2, 0)
                Preview.Size = UDim2.new(0, 50, 0, 50)

                local RSlider = ChannelContent:Slider("R", 0, 1, function(value)
                    local color = Preview.BackgroundColor3
                    Preview.BackgroundColor3 = Color3.new(value, color.G, color.B)
                    callback(Preview.BackgroundColor3)
                end)
                RSlider.Position = UDim2.new(0.3, 0, 0.2, 0)

                local GSlider = ChannelContent:Slider("G", 0, 1, function(value)
                    local color = Preview.BackgroundColor3
                    Preview.BackgroundColor3 = Color3.new(color.R, value, color.B)
                    callback(Preview.BackgroundColor3)
                end)
                GSlider.Position = UDim2.new(0.3, 0, 0.5, 0)

                local BSlider = ChannelContent:Slider("B", 0, 1, function(value)
                    local color = Preview.BackgroundColor3
                    Preview.BackgroundColor3 = Color3.new(color.R, color.G, value)
                    callback(Preview.BackgroundColor3)
                end)
                BSlider.Position = UDim2.new(0.3, 0, 0.8, 0)
            end

            function ChannelContent:Textbox(text, callback)
                local Textbox = Instance.new("TextBox")
                Textbox.Parent = ContentFrame
                Textbox.BackgroundColor3 = theme.Secondary
                Textbox.Size = UDim2.new(0, 200, 0, 30)
                Textbox.Font = Enum.Font.Gotham
                Textbox.Text = ""
                Textbox.TextColor3 = theme.Text
                Textbox.TextSize = 14
                Textbox.PlaceholderText = text
                Textbox.FocusLost:Connect(function(enterPressed)
                    if enterPressed then
                        callback(Textbox.Text)
                        Textbox.Text = ""
                    end
                end)
                table.insert(uiElements, Textbox)
            end

            function ChannelContent:Label(text)
                local Label = Instance.new("TextLabel")
                Label.Parent = ContentFrame
                Label.BackgroundTransparency = 1
                Label.Size = UDim2.new(0, 200, 0, 20)
                Label.Font = Enum.Font.Gotham
                Label.Text = text
                Label.TextColor3 = theme.Text
                Label.TextSize = 14
                table.insert(uiElements, Label)
            end

            function ChannelContent:Keybind(text, callback)
                local KeybindBtn = Instance.new("TextButton")
                KeybindBtn.Parent = ContentFrame
                KeybindBtn.BackgroundColor3 = theme.Button
                KeybindBtn.Size = UDim2.new(0, 200, 0, 30)
                KeybindBtn.Font = Enum.Font.Gotham
                KeybindBtn.Text = text .. " [None]"
                KeybindBtn.TextColor3 = theme.Text
                KeybindBtn.TextSize = 14
                local binding = false
                local key = nil
                KeybindBtn.MouseButton1Click:Connect(function()
                    binding = true
                    KeybindBtn.Text = text .. " [Press a key]"
                end)
                UserInputService.InputBegan:Connect(function(input)
                    if binding and input.UserInputType == Enum.UserInputType.Keyboard then
                        key = input.KeyCode
                        KeybindBtn.Text = text .. " [" .. key.Name .. "]"
                        binding = false
                        callback(key)
                    end
                end)
                table.insert(uiElements, KeybindBtn)
            end

            return ChannelContent
        end
        return ChannelHold
    end
    return ServerHold
end

return DiscordLib
